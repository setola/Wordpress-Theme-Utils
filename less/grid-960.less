// 960 Grid System
// -------------------------



#gs960 {

	.clearfix(){
		*zoom: 1;
		&:before , &:after {
			display: table;
			content: "";
			line-height: 0;
		}
	
		&:after {
			clear: both;
		}
	}
	
	#pixel {
		
		.container (@width) {
			clear: both;
			margin-left: auto;
			margin-right: auto;
			width: @width;
			#gs960 > .clearfix();
		}
		
		.all_cols(@col_margin){
			display: inline;
			float: left;
			position: relative;
			margin-left: @col_margin;
			margin-right: @col_margin;
		}
		
		.single_col(@col_number, @col_width, @col_margin){
			debug1: @col_width;
			width: (@col_width * @col_number) - ( @col_margin * 2) ;
		}

		.prefix (@col_number, @col_width) {
			padding-left: (@col_width * @col_number);
		}

		.suffix (@col_number, @col_width) {
			padding-right: (@col_width * @col_number);
		}

		.alpha () {
			margin-left: 0;
		}

		.omega () {
			margin-right: 0;
		}

		.push (@move, @col_width) {
			left: (@col_width * @move);
		}

		.pull (@move, @col_width) {
			left: (@col_width * @move) * -1;
		}
		
		.all_push_pull(){
			position: relative;
		}
		
		.init(@num_cols, @width, @col_margin){
			@col_width: @width / @num_cols;
			
			body {
				min-width: @width;
				debug: @col_width;
			}

			[class*="grid_"] {
				#gs960 > #pixel > .all_cols(@col_margin);
			}
			
			[class*="push_"], [class*="pull_"] {
				#gs960 > #pixel > .all_push_pull();
			}
			
			(~".container_@{num_cols}"){
				#gs960 > #pixel > .container(@width);
				
				// thank you twitter bootstrap :)
				.gridX (@index) when (@index > 0) {
					(~".grid_@{index}") { #gs960 > #pixel > .single_col(@index, @col_width, @col_margin); }
					(~".push_@{index}") { #gs960 > #pixel > .push(@index, @col_width); }
					(~".pull_@{index}") { #gs960 > #pixel > .pull(@index, @col_width); }
					(~".prefix_@{index}") { #gs960 > #pixel > .prefix(@index, @col_width); }
					(~".suffix_@{index}") { #gs960 > #pixel > .suffix(@index, @col_width); }
					.gridX(@index - 1);
				}
				.gridX (0) {}
				
				.gridX (@num_cols);
			}
			
			.alpha{
				#gs960 > #pixel > .alpha();
			}
			
			.omega{
				#gs960 > #pixel > .omega();
			}
		}
	}

	// TODO: need some testing here...
	#percent {
		
		.container (@width, @margin) {
			width: @width;
			margin-left: @margin;
			margin-right: @margin;
		}

		.grid (@grid: @def_grid , @cols: '') {
			display: inline;
			float: left;
			margin: 0 @col_margin;
			width: (100% / @grid * @cols) - (@col_margin * 2);
		}
		
		.all_cols(@col_margin){
			display: inline;
			float: left;
			position: relative;
			margin-left: @col_margin;
			margin-right: @col_margin;
		}

		.prefix (@grid: @def_grid , @cols: '') {
			padding-left: (100% / @grid * @cols);
		}

		.suffix (@grid: @def_grid , @cols: '') {
			padding-right: (100% / @grid * @cols);
		}

		.alpha () {
			margin-left: 0;
		}

		.omega () {
			margin-right: 0;
		}

		.push (@grid: @def_grid , @move: '') {
			position: relative;
			left: (100% / @grid * @move);
		}

		.pull (@grid: @def_grid , @move: '') {
			position: relative;
			left: (100% / @grid * @move) * -1;
		}
		
		.init(@num_cols, @width, @col_margin){
			@col_width: @width / @num_cols;
			
			body {
				min-width: @width;
				debug: @col_width;
			}

			[class*="grid_"] {
				#gs960 > #percent > .all_cols(@col_margin);
			}
			
			[class*="push_"], [class*="pull_"] {
				#gs960 > #percent > .all_push_pull();
			}
			
			(~".container_@{num_cols}"){
				#gs960 > #percent > .container(@width, @col_margin);
				
				// thank you twitter bootstrap :)
				.gridX (@index) when (@index > 0) {
					(~".grid_@{index}") { #gs960 > #percent > .single_col(@index, @col_width, @col_margin); }
					(~".push_@{index}") { #gs960 > #percent > .push(@index, @col_width); }
					(~".pull_@{index}") { #gs960 > #percent > .pull(@index, @col_width); }
					(~".prefix_@{index}") { #gs960 > #percent > .prefix(@index, @col_width); }
					(~".suffix_@{index}") { #gs960 > #percent > .suffix(@index, @col_width); }
					.gridX(@index - 1);
				}
				.gridX (0) {}
				
				.gridX (@num_cols);
			}
			
			.alpha{
				#gs960 > #percent > .alpha();
			}
			
			.omega{
				#gs960 > #percent > .omega();
			}
		}
	}
	
}

//#gs960 > #pixel > .init(12, 960px, 10px);
#gs960 > #pixel > .init(16, 960px, 10px);
//#gs960 > #percent > .init(16, 960px, 10px);


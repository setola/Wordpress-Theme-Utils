/*!
 * mixins.less
 * UTILITY MIXINS
 * 
 * Please note that this file should NOT contain
 * any css definition, only less mixins.
 * You can check if this is true by compiling
 * css/mixins.css which have to be empty!
 * 
 * 
 */

@import "variables";
// horizontally and vertically cetered with absolute position
// ----------------------------------------------------------
.abs-center (@height , @width) {
	width: @width;
	height: @height;
	top: 50%;
	left: 50%;
	margin-top: -(@height / 2);
	margin-left: -(@width / 2);
}

// a typical loading text-only box: the text is centered
// -----------------------------------------------------
.loading_box (@height , @width: 100% , @color: #666) {
	.size (@height , @width);
	line-height: @height;
	text-align: center;
	position: absolute;
	top: 0;
	left: 0;
	color: @color;
}

// Iframe special offers
// ---------------------
#iframe-so {
	.image (@height , @width) {
		.size (@height , @width);
		overflow: hidden;
		img {
			.size (100% , auto);
		}
	}
}

// Center-align a block level element
// ----------------------------------
.center-block () {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// IE7 inline-block
// ----------------
.ie7-inline-block () {
	*display: inline;
	*zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
.ie7-restore-left-whitespace () {
	*margin-left: .3em;
	&:first-child {
		*margin-left: 0;
	}
}

.ie7-restore-right-whitespace () {
	*margin-right: .3em;
}

// Sizing shortcuts
// -------------------------
.size (@height , @width) {
	width: @width;
	height: @height;
}

.square (@size) {
	.size (@size , @size);
}

// Placeholder text
// -------------------------
.placeholder (@color: @placeholderText) {
	&:-moz-placeholder {
		color: @color;
	}

	&:-ms-input-placeholder {
		color: @color;
	}

	&::-webkit-input-placeholder {
		color: @color;
	}
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
.text-overflow () {
	overflow: hidden;
	text-overflow: ellipsis;
	white-space: nowrap;
}

// CSS image replacement
// -------------------------
// Source: https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757
.hide-text () {
	font-size: 0;
	line-height: 0;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

#font {
	#family {
		.serif () {
			font-family: @serifFontFamily;
		}

		.sans-serif () {
			font-family: @sansFontFamily;
		}

		.monospace () {
			font-family: @monoFontFamily;
		}
	}

	.shorthand (@size: @baseFontSize , @weight: normal , @lineHeight: @baseLineHeight) {
		font-size: @size;
		font-weight: @weight;
		line-height: @lineHeight;
	}

	.serif (@size: @baseFontSize , @weight: normal , @lineHeight: @baseLineHeight) {
		#font > #family > .serif;
		#font > .shorthand (@size , @weight , @lineHeight);
	}

	.sans-serif (@size: @baseFontSize , @weight: normal , @lineHeight: @baseLineHeight) {
		#font > #family > .sans-serif;
		#font > .shorthand (@size , @weight , @lineHeight);
	}

	.monospace (@size: @baseFontSize , @weight: normal , @lineHeight: @baseLineHeight) {
		#font > #family > .monospace;
		#font > .shorthand (@size , @weight , @lineHeight);
	}
}

#border-radius {
	.radius (@radius) {
		-webkit-border-radius: @radius;
		-moz-border-radius: @radius;
		border-radius: @radius;
	}

	.top-left (@radius) {
		-webkit-border-top-left-radius: @radius;
		-moz-border-radius-topleft: @radius;
		border-top-left-radius: @radius;
	}

	.top-right (@radius) {
		-webkit-border-top-right-radius: @radius;
		-moz-border-radius-topright: @radius;
		border-top-right-radius: @radius;
	}

	.bottom-right (@radius) {
		-webkit-border-bottom-right-radius: @radius;
		-moz-border-radius-bottomright: @radius;
		border-bottom-right-radius: @radius;
	}

	.bottom-left (@radius) {
		-webkit-border-bottom-left-radius: @radius;
		-moz-border-radius-bottomleft: @radius;
		border-bottom-left-radius: @radius;
	}

	.top (@radius) {
		.top-right (@radius);
		.top-left (@radius);
	}

	.right (@radius) {
		.top-right (@radius);
		.bottom-right (@radius);
	}

	.bottom (@radius) {
		.bottom-right (@radius);
		.bottom-left (@radius);
	}

	.left (@radius) {
		.top-left (@radius);
		.bottom-left (@radius);
	}
}

// Drop shadows
.box-shadow (@shadow) {
	-webkit-box-shadow: @shadow;
	-moz-box-shadow: @shadow;
	box-shadow: @shadow;
}

// Transitions
.transition (@transition) {
	-webkit-transition: @transition;
	-moz-transition: @transition;
	-o-transition: @transition;
	transition: @transition;
}

// Transformations
#transform {
	.rotate (@degrees) {
		-webkit-transform: rotate(@degrees);
		-moz-transform: rotate(@degrees);
		-ms-transform: rotate(@degrees);
		-o-transform: rotate(@degrees);
		transform: rotate(@degrees);
	}

	.scale (@ratio) {
		-webkit-transform: scale(@ratio);
		-moz-transform: scale(@ratio);
		-ms-transform: scale(@ratio);
		-o-transform: scale(@ratio);
		transform: scale(@ratio);
	}

	.translate (@x , @y) {
		-webkit-transform: translate(@x, @y);
		-moz-transform: translate(@x, @y);
		-ms-transform: translate(@x, @y);
		-o-transform: translate(@x, @y);
		transform: translate(@x, @y);
	}

	.skew (@x , @y) {
		-webkit-transform: skew(@x, @y);
		-moz-transform: skew(@x, @y);
		-ms-transform: skew(@x, @y);
		-o-transform: skew(@x, @y);
		transform: skew(@x, @y);
	}

	.translate3d (@x , @y , @z) {
		-webkit-transform: translate3d(@x, @y, @z);
		-moz-transform: translate3d(@x, @y, @z);
		-o-transform: translate3d(@x, @y, @z);
		transform: translate3d(@x, @y, @z);
	}
}

// Backface visibility
// Prevent browsers from flickering when using CSS 3D transforms.
// Default value is `visible`, but can be changed to `hidden
// See git pull https://github.com/dannykeane/bootstrap.git backface-visibility for examples
.backface-visibility (@visibility) {
	-webkit-backface-visibility: @visibility;
	-moz-backface-visibility: @visibility;
	backface-visibility: @visibility;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
#background {
	.clip (@clip) {
		-webkit-background-clip: @clip;
		-moz-background-clip: @clip;
		background-clip: @clip;
	}

	// Background sizing
.size (@size) {
		-webkit-background-size: @size;
		-moz-background-size: @size;
		-o-background-size: @size;
		background-size: @size;
	}
}

// Box sizing
.box-sizing (@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	-moz-box-sizing: @boxmodel;
	box-sizing: @boxmodel;
}

// User select
// For selecting text on the page
.user-select (@select) {
	-webkit-user-select: @select;
	-moz-user-select: @select;
	-ms-user-select: @select;
	-o-user-select: @select;
	user-select: @select;
}

// Resize anything
.resizable (@direction) {
	resize: @direction;
	overflow: auto;
}

// CSS3 Content Columns
.content-columns (@columnCount , @columnGap: @gridGutterWidth) {
	-webkit-column-count: @columnCount;
	-moz-column-count: @columnCount;
	column-count: @columnCount;
	-webkit-column-gap: @columnGap;
	-moz-column-gap: @columnGap;
	column-gap: @columnGap;
}

// Optional hyphenation
.hyphens (@mode: auto) {
	word-wrap: break-word;
	-webkit-hyphens: @mode;
	-moz-hyphens: @mode;
	-ms-hyphens: @mode;
	-o-hyphens: @mode;
	hyphens: @mode;
}

// Opacity
.opacity (@opacity) {
	opacity: @opacity / 100;
	filter: ~"alpha(opacity=@{opacity})";
}

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
#translucent {
	.background (@color: @white , @alpha: 1) {
		background-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
	}

	.border (@color: @white , @alpha: 1) {
		border-color: hsla(hue(@color), saturation(@color), lightness(@color), @alpha);
		#background > .clip (padding-box);
	}
}

// Gradient Bar Colors for buttons and alerts
.gradientBar (@primaryColor , @secondaryColor , @textColor: #fff , @textShadow: 0 -1px 0 rgba(0, 0, 0, .25)) {
	color: @textColor;
	text-shadow: @textShadow;
	#gradient > .vertical (@primaryColor , @secondaryColor);
	border-color: @secondaryColor @secondaryColor darken(@secondaryColor, 15%);
	border-color: rgba(0, 0, 0, .1) rgba(0, 0, 0, .1) fadein(rgba(0, 0, 0, .1), 15%);
}

// Gradients
#gradient {
	.horizontal (@startColor: #555 , @endColor: #333) {
		background-color: @endColor;
		background-image: -moz-linear-gradient(left, @startColor, @endColor);
		background-image: -webkit-gradient(linear, 0 0, 100% 0, from(@startColor), to(@endColor));
		background-image: -webkit-linear-gradient(left, @startColor, @endColor);
		background-image: -o-linear-gradient(left, @startColor, @endColor);
		background-image: linear-gradient(to right, @startColor, @endColor);
		background-repeat: repeat-x;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)", argb(@startColor), argb(@endColor)));
	}

	.vertical (@startColor: #555 , @endColor: #333) {
		background-color: mix(@startColor, @endColor, 60%);
		background-image: -moz-linear-gradient(top, @startColor, @endColor);
		background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), to(@endColor));
		background-image: -webkit-linear-gradient(top, @startColor, @endColor);
		background-image: -o-linear-gradient(top, @startColor, @endColor);
		background-image: linear-gradient(to bottom, @startColor, @endColor);
		background-repeat: repeat-x;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
	}

	.directional (@startColor: #555 , @endColor: #333 , @deg: 45deg) {
		background-color: @endColor;
		background-repeat: repeat-x;
		background-image: -moz-linear-gradient(@deg, @startColor, @endColor);
		background-image: -webkit-linear-gradient(@deg, @startColor, @endColor);
		background-image: -o-linear-gradient(@deg, @startColor, @endColor);
		background-image: linear-gradient(@deg, @startColor, @endColor);
	}

	.vertical-three-colors (@startColor: #00b3ee , @midColor: #7a43b6 , @colorStop: 50% , @endColor: #c3325f) {
		background-color: mix(@midColor, @endColor, 80%);
		background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
		background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop * 100%, @endColor);
		background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
		background-repeat: no-repeat;
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@startColor), argb(@endColor)));
	}

	.radial (@innerColor: #555 , @outerColor: #333) {
		background-color: @outerColor;
		background-image: -webkit-gradient(radial, center center, 0, center center, 460, from(@innerColor), to(@outerColor));
		background-image: -webkit-radial-gradient(circle, @innerColor, @outerColor);
		background-image: -moz-radial-gradient(circle, @innerColor, @outerColor);
		background-image: -o-radial-gradient(circle, @innerColor, @outerColor);
		background-repeat: no-repeat;
	}

	.striped (@color , @angle: 45deg) {
		background-color: @color;
		background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255, 255, 255, .15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255, 255, 255, .15)), color-stop(.75, rgba(255, 255, 255, .15)), color-stop(.75, transparent), to(transparent));
		background-image: -webkit-linear-gradient(@angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
		background-image: -moz-linear-gradient(@angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
		background-image: -o-linear-gradient(@angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
		background-image: linear-gradient(@angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
	}
}

// Reset filters for IE
// --------------------
.reset-filter () {
	filter: e(%("progid:DXImageTransform.Microsoft.gradient(enabled = false)"));
}

// Button backgrounds
// ------------------
.buttonBackground (@startColor , @endColor , @textColor: #fff , @textShadow: 0 -1px 0 rgba(0, 0, 0, .25)) {
	.gradientBar (@startColor , @endColor , @textColor , @textShadow);
	*background-color: @endColor;
	.reset-filter ();
	&:hover , &:active , &.active , &.disabled , &[disabled] {
		color: @textColor;
		background-color: @endColor;
		*background-color: darken(@endColor, 5%);
	}

	&:active , &.active {
		background-color: darken(@endColor, 10%) e("\9");
	}
}

// Default button for Tex
// ----------------------
.defaultButton (@startColor , @endColor , @textColor: #fff , @textShadow: 0 -1px 0 rgba(0, 0, 0, .25)) {
	cursor: pointer;
	text-transform: uppercase;
	font-weight: bold;
	text-align: center;
	padding-right: 10px;
	padding-left: 10px;
	#border-radius > .radius (5px);
	.buttonBackground (@startColor , @endColor , @textColor , @textShadow);
	&:hover {
		.transition (background-position .1s linear);
		background-position: 0 -15px;
	}
}

// Table columns
// -------------
.tableColumns (@columnSpan: 1) {
	float: none;
	width: ((@gridColumnWidth) * @columnSpan) + (@gridGutterWidth * (@columnSpan - 1)) - 16;
	margin-left: 0;
}



<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="WP Theme Utils">
  <file path="index.php" hash="47d8c7e13f19de3b6e5e7c6acff7fdd7" package="templates">
    <docblock line="2">
      <description>The main template file.</description>
      <long-description>&lt;p&gt;This is the most generic template file in a WordPress theme
and one of the two required files for a theme (the other being style.css).
It is used to display a page when nothing more specific matches a query.
E.g., it puts together the home page when no home.php file exists.
Learn more: http://codex.wordpress.org/Template_Hierarchy&lt;/p&gt;</long-description>
      <tag line="2" name="since" description="0.1"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
    </docblock>
  </file>
  <file path="functions.php" hash="4a8e783a98c209f086ab3edf26c2fac8" package="Default">
    <docblock line="2">
      <description>Theme functions and definitions</description>
      <long-description>&lt;p&gt;When using a child theme (see http://codex.wordpress.org/Theme_Development and
http://codex.wordpress.org/Child_Themes), you can override certain functions
(those wrapped in a function_exists() call) by defining them first in your child theme's
functions.php file. The child theme's functions.php file is included before the parent
theme's file, so the child theme functions would be used.&lt;/p&gt;

&lt;p&gt;Functions that are not pluggable (not wrapped in function_exists()) are instead attached
to a filter or action hook. The hook can be removed by using remove_action() or
remove_filter() and you can attach your own function to the hook.&lt;/p&gt;

&lt;p&gt;We can remove the parent theme's hook only after it is attached, which means we need to
wait until setting up the child theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add_action( 'after_setup_theme', 'my_child_theme_setup' );
function my_child_theme_setup() {
    // We are providing our own filter for excerpt_length (or using the unfiltered value)
    remove_filter( 'excerpt_length', 'twentyten_excerpt_length' );
    ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information on hooks, actions, and filters, see http://codex.wordpress.org/Plugin_API.&lt;/p&gt;</long-description>
    </docblock>
    <include line="36" type="Include Once" package="Default">
      <name>classes/ThemeUtils.class.php</name>
    </include>
    <function namespace="global" line="35" package="core">
      <name>wordpress_theme_utils_initialize_hook</name>
      <full_name>\wordpress_theme_utils_initialize_hook</full_name>
      <docblock line="30">
        <description>Automatic initialization for the framework settings</description>
        <long-description/>
        <tag line="30" name="package" description="core"/>
        <tag line="30" name="version" description="1.0.0"/>
      </docblock>
    </function>
    <function namespace="global" line="57" package="core">
      <name>http_build_url</name>
      <full_name>\http_build_url</full_name>
      <docblock line="46">
        <description>Build a URL.</description>
        <long-description>&lt;p&gt;The parts of the second URL will be merged into the first according to the flags argument.
PECT_HTTP is usually missing on many environment.
This function provides the same feature as the function included in PECT_HTTP.&lt;/p&gt;</long-description>
        <tag line="46" name="see" description="http://php.net/manual/en/function.http-build-url.php" refers="\global\@link"/>
        <tag line="46" name="param" description="the array to be merged" type="array" variable="$parsed_url">
          <type by_reference="false">array</type>
        </tag>
        <tag line="46" name="package" description="core"/>
        <tag line="46" name="return" description="the url" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="57">
        <name>$parsed_url</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="77" package="Default">
      <name>wordpress_theme_utils_credits</name>
      <full_name>\wordpress_theme_utils_credits</full_name>
      <docblock line="73">
        <description>Fill the default credit line in the footer</description>
        <long-description/>
        <tag line="73" name="return" description="" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
    </function>
  </file>
  <file path="404.php" hash="7867d52558f1a25ce8b15ca9d98093a8" package="templates">
    <docblock line="2">
      <description>The template for displaying 404 pages (Not Found).</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="libraries/twitteroauth/index.php" hash="2b908b835252182e8fcc6b51fdea8c93" package="Default">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="file" description="User has successfully authenticated with Twitter. Access tokens saved to session and DB."/>
    </docblock>
    <include line="9" type="Require Once" package="Default">
      <name>twitteroauth/twitteroauth.php</name>
    </include>
    <include line="10" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <include line="33" type="Include" package="Default">
      <name>html.inc</name>
    </include>
    <parse_markers>
      <critical line="2" code="50008">No short description for file libraries/twitteroauth/index.php</critical>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/callback.php" hash="2423589ef1bf60095b2d81633ad81323" package="Default">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="file" description="Take the user when they return from Twitter. Get access tokens.&#10;Verify credentials and redirect to based on response from Twitter."/>
    </docblock>
    <include line="10" type="Require Once" package="Default">
      <name>twitteroauth/twitteroauth.php</name>
    </include>
    <include line="11" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <parse_markers>
      <critical line="2" code="50008">No short description for file libraries/twitteroauth/callback.php</critical>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/redirect.php" hash="45b36b9ce874a6b4b9f695fe86f57f5b" package="Default">
    <include line="5" type="Require Once" package="Default">
      <name>twitteroauth/twitteroauth.php</name>
    </include>
    <include line="6" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libraries/twitteroauth/redirect.php</error>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/clearsessions.php" hash="21fa1f78aff9d486a4fb5118598220da" package="Default">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="file" description="Clears PHP sessions and redirects to the connect page."/>
    </docblock>
    <parse_markers>
      <critical line="2" code="50008">No short description for file libraries/twitteroauth/clearsessions.php</critical>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/connect.php" hash="7cd56d0da1fd4059ad7cbad39af2b100" package="Default">
    <docblock line="3">
      <description/>
      <long-description/>
      <tag line="3" name="file" description="Check if consumer token is set and if so send user to get a request token."/>
    </docblock>
    <include line="11" type="Require Once" package="Default">
      <name>config.php</name>
      <docblock line="8">
        <description>Exit with an error message if the CONSUMER_KEY or CONSUMER_SECRET is not defined.</description>
        <long-description/>
      </docblock>
    </include>
    <include line="21" type="Include" package="Default">
      <name>html.inc</name>
    </include>
    <parse_markers>
      <critical line="3" code="50008">No short description for file libraries/twitteroauth/connect.php</critical>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/config-sample.php" hash="b428b3f6e346841c10f473ac9b2d232b" package="Default">
    <constant namespace="global" line="8" package="Default">
      <name>CONSUMER_KEY</name>
      <full_name>\CONSUMER_KEY</full_name>
      <value>'CONSUMER_KEY_HERE'</value>
    </constant>
    <constant namespace="global" line="9" package="Default">
      <name>CONSUMER_SECRET</name>
      <full_name>\CONSUMER_SECRET</full_name>
      <value>'CONSUMER_SECRET_HERE'</value>
    </constant>
    <constant namespace="global" line="10" package="Default">
      <name>OAUTH_CALLBACK</name>
      <full_name>\OAUTH_CALLBACK</full_name>
      <value>'http://example.com/twitteroauth/callback.php'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libraries/twitteroauth/config-sample.php</error>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/test.php" hash="ddc6d8a58fbeb440007aecba31629845" package="Default">
    <docblock line="2">
      <description/>
      <long-description/>
      <tag line="2" name="file" description=""/>
    </docblock>
    <include line="9" type="Require Once" package="Default">
      <name>twitteroauth/twitteroauth.php</name>
    </include>
    <include line="10" type="Require Once" package="Default">
      <name>config.php</name>
    </include>
    <function namespace="global" line="41" package="Default">
      <name>twitteroauth_row</name>
      <full_name>\twitteroauth_row</full_name>
      <argument line="41">
        <name>$method</name>
        <default/>
        <type/>
      </argument>
      <argument line="41">
        <name>$response</name>
        <default/>
        <type/>
      </argument>
      <argument line="41">
        <name>$http_code</name>
        <default/>
        <type/>
      </argument>
      <argument line="41">
        <name>$parameters</name>
        <default>''</default>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="79" package="Default">
      <name>twitteroauth_header</name>
      <full_name>\twitteroauth_header</full_name>
      <argument line="79">
        <name>$header</name>
        <default/>
        <type/>
      </argument>
    </function>
    <parse_markers>
      <critical line="2" code="50008">No short description for file libraries/twitteroauth/test.php</critical>
      <error line="41" code="50009">No DocBlock was found for function \twitteroauth_row()</error>
      <error line="79" code="50009">No DocBlock was found for function \twitteroauth_header()</error>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/config.php" hash="da9df57e4ad5dac0f84ee451484ca681" package="Default">
    <constant namespace="global" line="8" package="Default">
      <name>CONSUMER_KEY</name>
      <full_name>\CONSUMER_KEY</full_name>
      <value>'VRcuR8xOtJlgb7pS9UWQaw'</value>
    </constant>
    <constant namespace="global" line="9" package="Default">
      <name>CONSUMER_SECRET</name>
      <full_name>\CONSUMER_SECRET</full_name>
      <value>'BqehpoAJhDuwDSqdi6XwA4hVVXN9RirQQpq64iw'</value>
    </constant>
    <constant namespace="global" line="10" package="Default">
      <name>OAUTH_CALLBACK</name>
      <full_name>\OAUTH_CALLBACK</full_name>
      <value>'http://www.emanueletessore.com/blog'</value>
    </constant>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libraries/twitteroauth/config.php</error>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/twitteroauth/twitteroauth.php" hash="c329e25121783a292524acaea23bb28d" package="Default">
    <include line="10" type="Require Once" package="Default">
      <name>OAuth.php</name>
    </include>
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends/>
      <name>TwitterOAuth</name>
      <full_name>\TwitterOAuth</full_name>
      <docblock line="12">
        <description>Twitter OAuth class</description>
        <long-description/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$http_code</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$url</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$host</name>
        <default>"https://api.twitter.com/1.1/"</default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$timeout</name>
        <default>30</default>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$connecttimeout</name>
        <default>30</default>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$ssl_verifypeer</name>
        <default>FALSE</default>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$format</name>
        <default>'json'</default>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$decode_json</name>
        <default>TRUE</default>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$http_info</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$useragent</name>
        <default>'TwitterOAuth v0.2.0-beta2'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>accessTokenURL</name>
        <full_name>accessTokenURL</full_name>
        <docblock line="42">
          <description>Set API URLS</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="Default">
        <name>authenticateURL</name>
        <full_name>authenticateURL</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>authorizeURL</name>
        <full_name>authorizeURL</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="Default">
        <name>requestTokenURL</name>
        <full_name>requestTokenURL</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="Default">
        <name>lastStatusCode</name>
        <full_name>lastStatusCode</full_name>
        <docblock line="50">
          <description>Debug helpers</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="54" package="Default">
        <name>lastAPICall</name>
        <full_name>lastAPICall</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="56">
          <description>construct TwitterOAuth object</description>
          <long-description/>
        </docblock>
        <argument line="59">
          <name>$consumer_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$consumer_secret</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$oauth_token</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="59">
          <name>$oauth_token_secret</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="Default">
        <name>getRequestToken</name>
        <full_name>getRequestToken</full_name>
        <docblock line="70">
          <description>Get a request_token from Twitter</description>
          <long-description/>
          <tag line="70" name="returns" description="a key/value array containing oauth_token and oauth_token_secret"/>
        </docblock>
        <argument line="75">
          <name>$oauth_callback</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="Default">
        <name>getAuthorizeURL</name>
        <full_name>getAuthorizeURL</full_name>
        <docblock line="84">
          <description>Get the authorize URL</description>
          <long-description/>
          <tag line="84" name="returns" description="a string"/>
        </docblock>
        <argument line="89">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$sign_in_with_twitter</name>
          <default>TRUE</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="Default">
        <name>getAccessToken</name>
        <full_name>getAccessToken</full_name>
        <docblock line="100">
          <description>Exchange request token and secret for an access token and
secret, to sign API calls.</description>
          <long-description/>
          <tag line="100" name="returns" description="array(&quot;oauth_token&quot; =&gt; &quot;the-access-token&quot;,&#10;               &quot;oauth_token_secret&quot; =&gt; &quot;the-access-secret&quot;,&#10;               &quot;user_id&quot; =&gt; &quot;9436992&quot;,&#10;               &quot;screen_name&quot; =&gt; &quot;abraham&quot;)"/>
        </docblock>
        <argument line="109">
          <name>$oauth_verifier</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="127" package="Default">
        <name>getXAuthToken</name>
        <full_name>getXAuthToken</full_name>
        <docblock line="118">
          <description>One time exchange of username and password for access token and secret.</description>
          <long-description/>
          <tag line="118" name="returns" description="array(&quot;oauth_token&quot; =&gt; &quot;the-access-token&quot;,&#10;               &quot;oauth_token_secret&quot; =&gt; &quot;the-access-secret&quot;,&#10;               &quot;user_id&quot; =&gt; &quot;9436992&quot;,&#10;               &quot;screen_name&quot; =&gt; &quot;abraham&quot;,&#10;               &quot;x_auth_expires&quot; =&gt; &quot;0&quot;)"/>
        </docblock>
        <argument line="127">
          <name>$username</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$password</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="138">
          <description>GET wrapper for oAuthRequest.</description>
          <long-description/>
        </docblock>
        <argument line="141">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="Default">
        <name>post</name>
        <full_name>post</full_name>
        <docblock line="149">
          <description>POST wrapper for oAuthRequest.</description>
          <long-description/>
        </docblock>
        <argument line="152">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="152">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="Default">
        <name>delete</name>
        <full_name>delete</full_name>
        <docblock line="160">
          <description>DELETE wrapper for oAuthReqeust.</description>
          <long-description/>
        </docblock>
        <argument line="163">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$parameters</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="Default">
        <name>oAuthRequest</name>
        <full_name>oAuthRequest</full_name>
        <docblock line="171">
          <description>Format and sign an OAuth / API request</description>
          <long-description/>
        </docblock>
        <argument line="174">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="174">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="174">
          <name>$parameters</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="Default">
        <name>http</name>
        <full_name>http</full_name>
        <docblock line="188">
          <description>Make an HTTP request</description>
          <long-description/>
          <tag line="188" name="return" description="results" type="\API">
            <type by_reference="false">\API</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$url</name>
          <default/>
          <type/>
        </argument>
        <argument line="193">
          <name>$method</name>
          <default/>
          <type/>
        </argument>
        <argument line="193">
          <name>$postfields</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="232" package="Default">
        <name>getHeader</name>
        <full_name>getHeader</full_name>
        <docblock line="229">
          <description>Get the header info to store.</description>
          <long-description/>
        </docblock>
        <argument line="232">
          <name>$ch</name>
          <default/>
          <type/>
        </argument>
        <argument line="232">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libraries/twitteroauth/twitteroauth/twitteroauth.php</error>
      <error line="17" code="50018">No DocBlock was found for property $http_code</error>
      <error line="19" code="50018">No DocBlock was found for property $url</error>
      <error line="21" code="50018">No DocBlock was found for property $host</error>
      <error line="23" code="50018">No DocBlock was found for property $timeout</error>
      <error line="25" code="50018">No DocBlock was found for property $connecttimeout</error>
      <error line="27" code="50018">No DocBlock was found for property $ssl_verifypeer</error>
      <error line="29" code="50018">No DocBlock was found for property $format</error>
      <error line="31" code="50018">No DocBlock was found for property $decode_json</error>
      <error line="33" code="50018">No DocBlock was found for property $http_info</error>
      <error line="35" code="50018">No DocBlock was found for property $useragent</error>
      <error line="46" code="50010">No DocBlock was found for method authenticateURL()</error>
      <error line="47" code="50010">No DocBlock was found for method authorizeURL()</error>
      <error line="48" code="50010">No DocBlock was found for method requestTokenURL()</error>
      <error line="54" code="50010">No DocBlock was found for method lastAPICall()</error>
      <error line="56" code="50015">Argument $consumer_key is missing from the Docblock of __construct()</error>
      <error line="56" code="50015">Argument $consumer_secret is missing from the Docblock of __construct()</error>
      <error line="56" code="50015">Argument $oauth_token is missing from the Docblock of __construct()</error>
      <error line="56" code="50015">Argument $oauth_token_secret is missing from the Docblock of __construct()</error>
      <error line="70" code="50015">Argument $oauth_callback is missing from the Docblock of getRequestToken()</error>
      <error line="84" code="50015">Argument $token is missing from the Docblock of getAuthorizeURL()</error>
      <error line="84" code="50015">Argument $sign_in_with_twitter is missing from the Docblock of getAuthorizeURL()</error>
      <error line="100" code="50015">Argument $oauth_verifier is missing from the Docblock of getAccessToken()</error>
      <error line="118" code="50015">Argument $username is missing from the Docblock of getXAuthToken()</error>
      <error line="118" code="50015">Argument $password is missing from the Docblock of getXAuthToken()</error>
      <error line="138" code="50015">Argument $url is missing from the Docblock of get()</error>
      <error line="138" code="50015">Argument $parameters is missing from the Docblock of get()</error>
      <error line="149" code="50015">Argument $url is missing from the Docblock of post()</error>
      <error line="149" code="50015">Argument $parameters is missing from the Docblock of post()</error>
      <error line="160" code="50015">Argument $url is missing from the Docblock of delete()</error>
      <error line="160" code="50015">Argument $parameters is missing from the Docblock of delete()</error>
      <error line="171" code="50015">Argument $url is missing from the Docblock of oAuthRequest()</error>
      <error line="171" code="50015">Argument $method is missing from the Docblock of oAuthRequest()</error>
      <error line="171" code="50015">Argument $parameters is missing from the Docblock of oAuthRequest()</error>
      <error line="188" code="50015">Argument $url is missing from the Docblock of http()</error>
      <error line="188" code="50015">Argument $method is missing from the Docblock of http()</error>
      <error line="188" code="50015">Argument $postfields is missing from the Docblock of http()</error>
      <error line="229" code="50015">Argument $ch is missing from the Docblock of getHeader()</error>
      <error line="229" code="50015">Argument $header is missing from the Docblock of getHeader()</error>
    </parse_markers>
  </file>
  <file path="libraries/twitteroauth/twitteroauth/OAuth.php" hash="d7b40029f9d61580663a04727d166156" package="Default">
    <class final="false" abstract="false" namespace="global" line="7" package="Default">
      <extends>\Exception</extends>
      <name>OAuthException</name>
      <full_name>\OAuthException</full_name>
    </class>
    <class final="false" abstract="false" namespace="global" line="12" package="Default">
      <extends/>
      <name>OAuthConsumer</name>
      <full_name>\OAuthConsumer</full_name>
      <property final="false" static="false" visibility="public" line="13" namespace="global" package="Default">
        <name>$key</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$secret</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="16">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="16">
          <name>$secret</name>
          <default/>
          <type/>
        </argument>
        <argument line="16">
          <name>$callback_url</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="27" package="Default">
      <extends/>
      <name>OAuthToken</name>
      <full_name>\OAuthToken</full_name>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$key</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$secret</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="32">
          <description>key = the token
secret = the token secret</description>
          <long-description/>
        </docblock>
        <argument line="36">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="36">
          <name>$secret</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="45" package="Default">
        <name>to_string</name>
        <full_name>to_string</full_name>
        <docblock line="41">
          <description>generates the basic string serialization of a token that a server
would respond to request_token and access_token calls with</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="61" package="Default">
      <extends/>
      <name>OAuthSignatureMethod</name>
      <full_name>\OAuthSignatureMethod</full_name>
      <docblock line="57">
        <description>A class for implementing a Signature Method
See section 9 ("Signing Requests") in the spec</description>
        <long-description/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
        <docblock line="62">
          <description>Needs to return the name of the Signature Method (ie HMAC-SHA1)</description>
          <long-description/>
          <tag line="62" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="78" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <docblock line="68">
          <description>Build up the signature
NOTE: The output of this function MUST NOT be urlencoded.</description>
          <long-description>&lt;p&gt;the encoding is handled in OAuthRequest when the final
request is serialized&lt;/p&gt;</long-description>
          <tag line="68" name="param" description="" type="\OAuthRequest" variable="$request">
            <type by_reference="false">\OAuthRequest</type>
          </tag>
          <tag line="68" name="param" description="" type="\OAuthConsumer" variable="$consumer">
            <type by_reference="false">\OAuthConsumer</type>
          </tag>
          <tag line="68" name="param" description="" type="\OAuthToken" variable="$token">
            <type by_reference="false">\OAuthToken</type>
          </tag>
          <tag line="68" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="78">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="88" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <docblock line="80">
          <description>Verifies that a given signature is correct</description>
          <long-description/>
          <tag line="80" name="param" description="" type="\OAuthRequest" variable="$request">
            <type by_reference="false">\OAuthRequest</type>
          </tag>
          <tag line="80" name="param" description="" type="\OAuthConsumer" variable="$consumer">
            <type by_reference="false">\OAuthConsumer</type>
          </tag>
          <tag line="80" name="param" description="" type="\OAuthToken" variable="$token">
            <type by_reference="false">\OAuthToken</type>
          </tag>
          <tag line="80" name="param" description="" type="string" variable="$signature">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="88">
          <name>$signature</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="101" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_HMAC_SHA1</name>
      <full_name>\OAuthSignatureMethod_HMAC_SHA1</full_name>
      <docblock line="94">
        <description>The HMAC-SHA1 signature method uses the HMAC-SHA1 signature algorithm as defined in [RFC2104]
where the Signature Base String is the text and the key is the concatenated values (each first
encoded per Parameter Encoding) of the Consumer Secret and Token Secret, separated by an '&amp;'
character (ASCII code 38) even if empty.</description>
        <long-description>&lt;ul&gt;
&lt;li&gt;Chapter 9.2 ("HMAC-SHA1")&lt;/li&gt;
&lt;/ul&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="106" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="106">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="106">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="106">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="127" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_PLAINTEXT</name>
      <full_name>\OAuthSignatureMethod_PLAINTEXT</full_name>
      <docblock line="122">
        <description>The PLAINTEXT method does not provide any security protection and SHOULD only be used
over a secure channel such as HTTPS.</description>
        <long-description>&lt;p&gt;It does not use the Signature Base String.
  - Chapter 9.4 ("PLAINTEXT")&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="128" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="141" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <docblock line="132">
          <description>oauth_signature is set to the concatenated encoded values of the Consumer Secret and
Token Secret, separated by a '&amp;' character (ASCII code 38), even if either secret is
empty.</description>
          <long-description>&lt;p&gt;The result MUST be encoded again.
  - Chapter 9.4.1 ("Generating Signatures")&lt;/p&gt;

&lt;p&gt;Please note that the second encoding MUST NOT happen in the SignatureMethod, as
OAuthRequest handles this!&lt;/p&gt;</long-description>
        </docblock>
        <argument line="141">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="141">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="true" namespace="global" line="163" package="Default">
      <extends>\OAuthSignatureMethod</extends>
      <name>OAuthSignatureMethod_RSA_SHA1</name>
      <full_name>\OAuthSignatureMethod_RSA_SHA1</full_name>
      <docblock line="155">
        <description>The RSA-SHA1 signature method uses the RSASSA-PKCS1-v1_5 signature algorithm as defined in
[RFC3447] section 8.2 (more simply known as PKCS#1), using SHA-1 as the hash function for
EMSA-PKCS1-v1_5.</description>
        <long-description>&lt;p&gt;It is assumed that the Consumer has provided its RSA public key in a
verified way to the Service Provider, in a manner which is beyond the scope of this
specification.
  - Chapter 9.3 ("RSA-SHA1")&lt;/p&gt;</long-description>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="164" package="Default">
        <name>get_name</name>
        <full_name>get_name</full_name>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="174" package="Default">
        <name>fetch_public_cert</name>
        <full_name>fetch_public_cert</full_name>
        <argument line="174">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="global" line="180" package="Default">
        <name>fetch_private_cert</name>
        <full_name>fetch_private_cert</full_name>
        <argument line="180">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="182">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="182">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="182">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <argument line="201">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="201">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="201">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="201">
          <name>$signature</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="222" package="Default">
      <extends/>
      <name>OAuthRequest</name>
      <full_name>\OAuthRequest</full_name>
      <property final="false" static="false" visibility="private" line="223" namespace="global" package="Default">
        <name>$parameters</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="224" namespace="global" package="Default">
        <name>$http_method</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="private" line="225" namespace="global" package="Default">
        <name>$http_url</name>
        <default/>
      </property>
      <property final="false" static="false" visibility="public" line="227" namespace="global" package="Default">
        <name>$base_string</name>
        <default/>
      </property>
      <property final="false" static="true" visibility="public" line="228" namespace="global" package="Default">
        <name>$version</name>
        <default>'1.0'</default>
      </property>
      <property final="false" static="true" visibility="public" line="229" namespace="global" package="Default">
        <name>$POST_INPUT</name>
        <default>'php://input'</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="231" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="231">
          <name>$http_method</name>
          <default/>
          <type/>
        </argument>
        <argument line="231">
          <name>$http_url</name>
          <default/>
          <type/>
        </argument>
        <argument line="231">
          <name>$parameters</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="243" package="Default">
        <name>from_request</name>
        <full_name>from_request</full_name>
        <docblock line="240">
          <description>attempt to build up a request from what was passed to the server</description>
          <long-description/>
        </docblock>
        <argument line="243">
          <name>$http_method</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="243">
          <name>$http_url</name>
          <default>NULL</default>
          <type/>
        </argument>
        <argument line="243">
          <name>$parameters</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="294" package="Default">
        <name>from_consumer_and_token</name>
        <full_name>from_consumer_and_token</full_name>
        <docblock line="291">
          <description>pretty much a helper function to set up the request</description>
          <long-description/>
        </docblock>
        <argument line="294">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$http_method</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$http_url</name>
          <default/>
          <type/>
        </argument>
        <argument line="294">
          <name>$parameters</name>
          <default>NULL</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="308" package="Default">
        <name>set_parameter</name>
        <full_name>set_parameter</full_name>
        <argument line="308">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="308">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="308">
          <name>$allow_duplicates</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="323" package="Default">
        <name>get_parameter</name>
        <full_name>get_parameter</full_name>
        <argument line="323">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="327" package="Default">
        <name>get_parameters</name>
        <full_name>get_parameters</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="331" package="Default">
        <name>unset_parameter</name>
        <full_name>unset_parameter</full_name>
        <argument line="331">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="339" package="Default">
        <name>get_signable_parameters</name>
        <full_name>get_signable_parameters</full_name>
        <docblock line="335">
          <description>The request parameters, sorted and concatenated into a normalized string.</description>
          <long-description/>
          <tag line="335" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="359" package="Default">
        <name>get_signature_base_string</name>
        <full_name>get_signature_base_string</full_name>
        <docblock line="352">
          <description>Returns the base string of this request</description>
          <long-description>&lt;p&gt;The base string defined as the method, the url
and the parameters (normalized), each urlencoded
and the concated with &amp;amp;.&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="374" package="Default">
        <name>get_normalized_http_method</name>
        <full_name>get_normalized_http_method</full_name>
        <docblock line="371">
          <description>just uppercases the http method</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="382" package="Default">
        <name>get_normalized_http_url</name>
        <full_name>get_normalized_http_url</full_name>
        <docblock line="378">
          <description>parses the url and rebuilds it to be
scheme://host/path</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="402" package="Default">
        <name>to_url</name>
        <full_name>to_url</full_name>
        <docblock line="399">
          <description>builds a url usable for a GET request</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="414" package="Default">
        <name>to_postdata</name>
        <full_name>to_postdata</full_name>
        <docblock line="411">
          <description>builds the data one would send in a POST request</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="421" package="Default">
        <name>to_header</name>
        <full_name>to_header</full_name>
        <docblock line="418">
          <description>builds the Authorization: header</description>
          <long-description/>
        </docblock>
        <argument line="421">
          <name>$realm</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="445" package="Default">
        <name>__toString</name>
        <full_name>__toString</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="450" package="Default">
        <name>sign_request</name>
        <full_name>sign_request</full_name>
        <argument line="450">
          <name>$signature_method</name>
          <default/>
          <type/>
        </argument>
        <argument line="450">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="450">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="460" package="Default">
        <name>build_signature</name>
        <full_name>build_signature</full_name>
        <argument line="460">
          <name>$signature_method</name>
          <default/>
          <type/>
        </argument>
        <argument line="460">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="460">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="468" package="Default">
        <name>generate_timestamp</name>
        <full_name>generate_timestamp</full_name>
        <docblock line="465">
          <description>util function: current timestamp</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="475" package="Default">
        <name>generate_nonce</name>
        <full_name>generate_nonce</full_name>
        <docblock line="472">
          <description>util function: current nonce</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="483" package="Default">
      <extends/>
      <name>OAuthServer</name>
      <full_name>\OAuthServer</full_name>
      <property final="false" static="false" visibility="protected" line="484" namespace="global" package="Default">
        <name>$timestamp_threshold</name>
        <default>300</default>
      </property>
      <property final="false" static="false" visibility="protected" line="485" namespace="global" package="Default">
        <name>$version</name>
        <default>'1.0'</default>
      </property>
      <property final="false" static="false" visibility="protected" line="486" namespace="global" package="Default">
        <name>$signature_methods</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="protected" line="488" namespace="global" package="Default">
        <name>$data_store</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="490" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="490">
          <name>$data_store</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="494" package="Default">
        <name>add_signature_method</name>
        <full_name>add_signature_method</full_name>
        <argument line="494">
          <name>$signature_method</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="505" package="Default">
        <name>fetch_request_token</name>
        <full_name>fetch_request_token</full_name>
        <docblock line="501">
          <description>process a request_token request
returns the request token on success</description>
          <long-description/>
        </docblock>
        <argument line="505">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="526" package="Default">
        <name>fetch_access_token</name>
        <full_name>fetch_access_token</full_name>
        <docblock line="522">
          <description>process an access_token request
returns the access token on success</description>
          <long-description/>
        </docblock>
        <argument line="526">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="546" package="Default">
        <name>verify_request</name>
        <full_name>verify_request</full_name>
        <docblock line="543">
          <description>verify an api call, checks all the parameters</description>
          <long-description/>
        </docblock>
        <argument line="546">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="558" package="Default">
        <name>get_version</name>
        <full_name>get_version</full_name>
        <docblock line="555">
          <description>version 1</description>
          <long-description/>
        </docblock>
        <argument line="558">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="574" package="Default">
        <name>get_signature_method</name>
        <full_name>get_signature_method</full_name>
        <docblock line="571">
          <description>figure out the signature with some defaults</description>
          <long-description/>
        </docblock>
        <argument line="574">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="598" package="Default">
        <name>get_consumer</name>
        <full_name>get_consumer</full_name>
        <docblock line="595">
          <description>try to find the consumer for the provided request's consumer key</description>
          <long-description/>
        </docblock>
        <argument line="598">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="615" package="Default">
        <name>get_token</name>
        <full_name>get_token</full_name>
        <docblock line="612">
          <description>try to find the token for the provided request's token key</description>
          <long-description/>
        </docblock>
        <argument line="615">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="615">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="615">
          <name>$token_type</name>
          <default>"access"</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="630" package="Default">
        <name>check_signature</name>
        <full_name>check_signature</full_name>
        <docblock line="626">
          <description>all-in-one function to check the signature on a request
should guess the signature method appropriately</description>
          <long-description/>
        </docblock>
        <argument line="630">
          <name>$request</name>
          <default/>
          <type/>
        </argument>
        <argument line="630">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="630">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="656" package="Default">
        <name>check_timestamp</name>
        <full_name>check_timestamp</full_name>
        <docblock line="653">
          <description>check that the timestamp is new enough</description>
          <long-description/>
        </docblock>
        <argument line="656">
          <name>$timestamp</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="674" package="Default">
        <name>check_nonce</name>
        <full_name>check_nonce</full_name>
        <docblock line="671">
          <description>check that the nonce is not repeated</description>
          <long-description/>
        </docblock>
        <argument line="674">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="674">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="674">
          <name>$nonce</name>
          <default/>
          <type/>
        </argument>
        <argument line="674">
          <name>$timestamp</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="694" package="Default">
      <extends/>
      <name>OAuthDataStore</name>
      <full_name>\OAuthDataStore</full_name>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="695" package="Default">
        <name>lookup_consumer</name>
        <full_name>lookup_consumer</full_name>
        <argument line="695">
          <name>$consumer_key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="699" package="Default">
        <name>lookup_token</name>
        <full_name>lookup_token</full_name>
        <argument line="699">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="699">
          <name>$token_type</name>
          <default/>
          <type/>
        </argument>
        <argument line="699">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="703" package="Default">
        <name>lookup_nonce</name>
        <full_name>lookup_nonce</full_name>
        <argument line="703">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="703">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="703">
          <name>$nonce</name>
          <default/>
          <type/>
        </argument>
        <argument line="703">
          <name>$timestamp</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="707" package="Default">
        <name>new_request_token</name>
        <full_name>new_request_token</full_name>
        <argument line="707">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="707">
          <name>$callback</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="711" package="Default">
        <name>new_access_token</name>
        <full_name>new_access_token</full_name>
        <argument line="711">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="711">
          <name>$consumer</name>
          <default/>
          <type/>
        </argument>
        <argument line="711">
          <name>$verifier</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="720" package="Default">
      <extends/>
      <name>OAuthUtil</name>
      <full_name>\OAuthUtil</full_name>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="721" package="Default">
        <name>urlencode_rfc3986</name>
        <full_name>urlencode_rfc3986</full_name>
        <argument line="721">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="739" package="Default">
        <name>urldecode_rfc3986</name>
        <full_name>urldecode_rfc3986</full_name>
        <argument line="739">
          <name>$string</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="746" package="Default">
        <name>split_header</name>
        <full_name>split_header</full_name>
        <argument line="746">
          <name>$header</name>
          <default/>
          <type/>
        </argument>
        <argument line="746">
          <name>$only_allow_oauth_parameters</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="768" package="Default">
        <name>get_headers</name>
        <full_name>get_headers</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="816" package="Default">
        <name>parse_parameters</name>
        <full_name>parse_parameters</full_name>
        <argument line="816">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="845" package="Default">
        <name>build_http_query</name>
        <full_name>build_http_query</full_name>
        <argument line="845">
          <name>$params</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file libraries/twitteroauth/twitteroauth/OAuth.php</error>
      <error line="7" code="50000">No DocBlock was found for \OAuthException</error>
      <error line="12" code="50000">No DocBlock was found for \OAuthConsumer</error>
      <error line="13" code="50018">No DocBlock was found for property $key</error>
      <error line="14" code="50018">No DocBlock was found for property $secret</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
      <error line="22" code="50010">No DocBlock was found for method __toString()</error>
      <error line="27" code="50000">No DocBlock was found for \OAuthToken</error>
      <error line="29" code="50018">No DocBlock was found for property $key</error>
      <error line="30" code="50018">No DocBlock was found for property $secret</error>
      <error line="32" code="50015">Argument $key is missing from the Docblock of __construct()</error>
      <error line="32" code="50015">Argument $secret is missing from the Docblock of __construct()</error>
      <error line="52" code="50010">No DocBlock was found for method __toString()</error>
      <error line="102" code="50010">No DocBlock was found for method get_name()</error>
      <error line="106" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="128" code="50010">No DocBlock was found for method get_name()</error>
      <error line="132" code="50015">Argument $request is missing from the Docblock of build_signature()</error>
      <error line="132" code="50015">Argument $consumer is missing from the Docblock of build_signature()</error>
      <error line="132" code="50015">Argument $token is missing from the Docblock of build_signature()</error>
      <error line="164" code="50010">No DocBlock was found for method get_name()</error>
      <error line="174" code="50010">No DocBlock was found for method fetch_public_cert()</error>
      <error line="180" code="50010">No DocBlock was found for method fetch_private_cert()</error>
      <error line="182" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="201" code="50010">No DocBlock was found for method check_signature()</error>
      <error line="222" code="50000">No DocBlock was found for \OAuthRequest</error>
      <error line="223" code="50018">No DocBlock was found for property $parameters</error>
      <error line="224" code="50018">No DocBlock was found for property $http_method</error>
      <error line="225" code="50018">No DocBlock was found for property $http_url</error>
      <error line="227" code="50018">No DocBlock was found for property $base_string</error>
      <error line="228" code="50018">No DocBlock was found for property $version</error>
      <error line="229" code="50018">No DocBlock was found for property $POST_INPUT</error>
      <error line="231" code="50010">No DocBlock was found for method __construct()</error>
      <error line="240" code="50015">Argument $http_method is missing from the Docblock of from_request()</error>
      <error line="240" code="50015">Argument $http_url is missing from the Docblock of from_request()</error>
      <error line="240" code="50015">Argument $parameters is missing from the Docblock of from_request()</error>
      <error line="291" code="50015">Argument $consumer is missing from the Docblock of from_consumer_and_token()</error>
      <error line="291" code="50015">Argument $token is missing from the Docblock of from_consumer_and_token()</error>
      <error line="291" code="50015">Argument $http_method is missing from the Docblock of from_consumer_and_token()</error>
      <error line="291" code="50015">Argument $http_url is missing from the Docblock of from_consumer_and_token()</error>
      <error line="291" code="50015">Argument $parameters is missing from the Docblock of from_consumer_and_token()</error>
      <error line="308" code="50010">No DocBlock was found for method set_parameter()</error>
      <error line="323" code="50010">No DocBlock was found for method get_parameter()</error>
      <error line="327" code="50010">No DocBlock was found for method get_parameters()</error>
      <error line="331" code="50010">No DocBlock was found for method unset_parameter()</error>
      <error line="418" code="50015">Argument $realm is missing from the Docblock of to_header()</error>
      <error line="445" code="50010">No DocBlock was found for method __toString()</error>
      <error line="450" code="50010">No DocBlock was found for method sign_request()</error>
      <error line="460" code="50010">No DocBlock was found for method build_signature()</error>
      <error line="483" code="50000">No DocBlock was found for \OAuthServer</error>
      <error line="484" code="50018">No DocBlock was found for property $timestamp_threshold</error>
      <error line="485" code="50018">No DocBlock was found for property $version</error>
      <error line="486" code="50018">No DocBlock was found for property $signature_methods</error>
      <error line="488" code="50018">No DocBlock was found for property $data_store</error>
      <error line="490" code="50010">No DocBlock was found for method __construct()</error>
      <error line="494" code="50010">No DocBlock was found for method add_signature_method()</error>
      <error line="501" code="50015">Argument $request is missing from the Docblock of fetch_request_token()</error>
      <error line="522" code="50015">Argument $request is missing from the Docblock of fetch_access_token()</error>
      <error line="543" code="50015">Argument $request is missing from the Docblock of verify_request()</error>
      <error line="555" code="50015">Argument $request is missing from the Docblock of get_version()</error>
      <error line="571" code="50015">Argument $request is missing from the Docblock of get_signature_method()</error>
      <error line="595" code="50015">Argument $request is missing from the Docblock of get_consumer()</error>
      <error line="612" code="50015">Argument $request is missing from the Docblock of get_token()</error>
      <error line="612" code="50015">Argument $consumer is missing from the Docblock of get_token()</error>
      <error line="612" code="50015">Argument $token_type is missing from the Docblock of get_token()</error>
      <error line="626" code="50015">Argument $request is missing from the Docblock of check_signature()</error>
      <error line="626" code="50015">Argument $consumer is missing from the Docblock of check_signature()</error>
      <error line="626" code="50015">Argument $token is missing from the Docblock of check_signature()</error>
      <error line="653" code="50015">Argument $timestamp is missing from the Docblock of check_timestamp()</error>
      <error line="671" code="50015">Argument $consumer is missing from the Docblock of check_nonce()</error>
      <error line="671" code="50015">Argument $token is missing from the Docblock of check_nonce()</error>
      <error line="671" code="50015">Argument $nonce is missing from the Docblock of check_nonce()</error>
      <error line="671" code="50015">Argument $timestamp is missing from the Docblock of check_nonce()</error>
      <error line="694" code="50000">No DocBlock was found for \OAuthDataStore</error>
      <error line="695" code="50010">No DocBlock was found for method lookup_consumer()</error>
      <error line="699" code="50010">No DocBlock was found for method lookup_token()</error>
      <error line="703" code="50010">No DocBlock was found for method lookup_nonce()</error>
      <error line="707" code="50010">No DocBlock was found for method new_request_token()</error>
      <error line="711" code="50010">No DocBlock was found for method new_access_token()</error>
      <error line="720" code="50000">No DocBlock was found for \OAuthUtil</error>
      <error line="721" code="50010">No DocBlock was found for method urlencode_rfc3986()</error>
      <error line="739" code="50010">No DocBlock was found for method urldecode_rfc3986()</error>
      <error line="746" code="50010">No DocBlock was found for method split_header()</error>
      <error line="768" code="50010">No DocBlock was found for method get_headers()</error>
      <error line="816" code="50010">No DocBlock was found for method parse_parameters()</error>
      <error line="845" code="50010">No DocBlock was found for method build_http_query()</error>
    </parse_markers>
  </file>
  <file path="classes/ImagePreload.class.php" hash="2d929d62cf71429cca94c440fe7e69b2" package="Default">
    <docblock line="2">
      <description>Contains ImagePreload class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes\image manager">
      <extends>\GalleryHelper</extends>
      <name>ImagePreload</name>
      <full_name>\ImagePreload</full_name>
      <docblock line="8">
        <description>Takes care of image preloading with jQuery imagesloaded</description>
        <long-description/>
        <tag line="8" name="author" description="etessore"/>
        <tag line="8" name="version" description="1.0.0"/>
        <tag line="8" name="package" description="classes"/>
        <tag line="8" name="subpackage" description="image manager"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="classes\image manager">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="17">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="17" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/SpecialOffersSnippetAjax.class.php" hash="df156aa51c6c3de79a703b9e1060cfad" package="Default">
    <docblock line="2">
      <description>Contains the SpecialOffersSnippetAjax class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>SpecialOffersSnippetAjax</name>
      <full_name>\SpecialOffersSnippetAjax</full_name>
      <docblock line="6">
        <description>Hook to WP Ajax system to get the special offers snippet url</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="14" package="classes">
        <name>ajax_action</name>
        <full_name>ajax_action</full_name>
        <value>'offer-snippet'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="16">
          <description>Default constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="23">
          <description>Hooks this feature into wordpress</description>
          <long-description/>
          <tag line="23" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="36" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="33">
          <description>Function called by admin-ajax.php</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/FeatureWithAssets.class.php" hash="30bfa3a6e720e1f1f6588d00a1763cd6" package="Default">
    <docblock line="2">
      <description>Contains the FeatureWithAssets class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="25" package="classes">
      <extends/>
      <name>FeatureWithAssets</name>
      <full_name>\FeatureWithAssets</full_name>
      <docblock line="7">
        <description>Manages the assets loading for a feature.</description>
        <long-description>&lt;p&gt;WARNING: this method doesn't register the asset:
You have to take care of it by yourself (tipically in assets.php)&lt;/p&gt;</long-description>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.1"/>
        <tag line="7" name="package" description="classes"/>
        <tag line="7" name="deprecated" description="uses ThemeHelpers::load_css() and ThemeHelpers::load_js() instead"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$assets</name>
        <default>array('js' =&gt; array(), 'css' =&gt; array())</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="the list of assets to be loaded array('js'=&gt;array(...), 'css'=&gt;array(...));" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>set_assets</name>
        <full_name>set_assets</full_name>
        <docblock line="33">
          <description>Set the assets list to the given one</description>
          <long-description/>
          <tag line="33" name="param" description="the list of assets: array('js'=&gt;array(...), 'css'=&gt;array(...));" type="array" variable="$assets">
            <type by_reference="false">array</type>
          </tag>
          <tag line="33" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$assets</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="classes">
        <name>add_asset</name>
        <full_name>add_asset</full_name>
        <docblock line="49">
          <description>Adds an asset.</description>
          <long-description>&lt;p&gt;You cannot define an asset here,
to do it please use wp_register_script or wp_register_style
in functions.php or config/assets.php
WARNING: this method doesn't register the asset:
You have to take care of it by yourself (tipically in assets.php)&lt;/p&gt;</long-description>
          <tag line="49" name="param" description="the handle for the asset." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="the asset type: js|css" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="59">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="65">
          <description>Loads needed scripts and css</description>
          <long-description/>
          <tag line="65" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="80" package="classes">
        <name>load_assets_callback</name>
        <full_name>load_assets_callback</full_name>
        <docblock line="76">
          <description>Loads needed scripts and css</description>
          <long-description/>
          <tag line="76" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DefaultAssets.class.php" hash="a08f906bd128e0c829ed71c7a8b7ef30" package="Default">
    <docblock line="2">
      <description>Contains the DefaultAssets class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>DefaultAssets</name>
      <full_name>\DefaultAssets</full_name>
      <docblock line="6">
        <description>Register some useful assets in WordPress</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="14" namespace="global" package="Default">
        <name>$assets_manager</name>
        <default/>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>register_standard</name>
        <full_name>register_standard</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="classes">
        <name>register_custom</name>
        <full_name>register_custom</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="classes">
        <name>add_js</name>
        <full_name>add_js</full_name>
        <docblock line="135">
          <description>Adds a javascript to the current set</description>
          <long-description/>
          <tag line="135" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_script" refers="\@link"/>
          <tag line="135" name="param" description="Script name" type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="Script url" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="(optional) Array of script names on which this script depends" type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="param" description="(optional) Script version (used for cache busting), set to NULL to disable" type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="135" name="param" description="(optional) Whether to enqueue the script before &lt;/head&gt; or before &lt;/body&gt;" type="bool" variable="$in_footer">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="135" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="145">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="145">
          <name>$in_footer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="classes">
        <name>add_css</name>
        <full_name>add_css</full_name>
        <docblock line="150">
          <description>Adds a css to the current set</description>
          <long-description/>
          <tag line="150" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_style" refers="\@link"/>
          <tag line="150" name="param" description="Name of the stylesheet." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="Path to the stylesheet from the root directory of WordPress. Example: '/css/mystyle.css'." type="string|bool" variable="$src">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="150" name="param" description="Array of handles of any stylesheet that this stylesheet depends on.&#10; (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies." type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="150" name="param" description="String specifying the stylesheet version number. Set to NULL to disable.&#10; Used to ensure that the correct version is sent to the client regardless of caching." type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="150" name="param" description="The media for which this stylesheet has been defined." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="162">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="162">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="162">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="162">
          <name>$media</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="14" code="50018">No DocBlock was found for property $assets_manager</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
      <error line="26" code="50010">No DocBlock was found for method register_standard()</error>
      <error line="69" code="50010">No DocBlock was found for method register_custom()</error>
    </parse_markers>
  </file>
  <file path="classes/AjaxImageGenerator.class.php" hash="dca1eda2b0acb741c769065a92280656" package="Default">
    <docblock line="2">
      <description>Contains AjaxImageGenerator class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends/>
      <name>AjaxImageGenerator</name>
      <full_name>\AjaxImageGenerator</full_name>
      <docblock line="7">
        <description>Hooks the ImageGenerator class to admin-ajax action</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="19" namespace="global" package="Default">
        <name>$is_hooked</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="hook to WordPress only once" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Sets the admin-ajax hooks</description>
          <long-description/>
          <tag line="21" name="param" description="is the hook available for registered users?" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="21" name="param" description="is the hook available for the non-registered users?" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="26">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="37" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="32">
          <description>Sets the admin-ajax hooks</description>
          <long-description/>
          <tag line="32" name="param" description="is the hook available for registered users?" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="32" name="param" description="is the hook available for the non-registered users?" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="37">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="46">
          <description>This method is called by the admin-ajax subsystem.</description>
          <long-description>&lt;p&gt;Prints the image.&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/TinyMCEExcerpt.class.php" hash="cfdaa985c2e776096747f4f9812f0700" package="Default">
    <docblock line="2">
      <description>Contains TinyMCEExcerptCustomization class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>TinyMCEExcerptCustomization</name>
      <full_name>\TinyMCEExcerptCustomization</full_name>
      <docblock line="6">
        <description>This class removes the default excerpt metabox
and adds a new box with the wysiwyg editor capability</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="14" package="classes">
        <name>textdomain</name>
        <full_name>textdomain</full_name>
        <value>''</value>
      </constant>
      <constant namespace="global" line="15" package="classes">
        <name>custom_exceprt_slug</name>
        <full_name>custom_exceprt_slug</full_name>
        <value>'_custom-excerpt'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$contexts</name>
        <default/>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="a list of context where wysiwyg editor is required" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description>Set the feature up</description>
          <long-description/>
          <tag line="22" name="param" description="a list of context where you want the wysiwyg editor in the excerpt field. Defatul array('post','page')" type="array" variable="$contexts">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$contexts</name>
          <default>array('post', 'page')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="classes">
        <name>remove_excerpt_metabox</name>
        <full_name>remove_excerpt_metabox</full_name>
        <docblock line="36">
          <description>Removes the default editor for the excerpt</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="classes">
        <name>add_tinymce_to_excerpt_metabox</name>
        <full_name>add_tinymce_to_excerpt_metabox</full_name>
        <docblock line="44">
          <description>Adds a new excerpt editor with the wysiwyg editor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="classes">
        <name>custom_trim_excerpt</name>
        <full_name>custom_trim_excerpt</full_name>
        <docblock line="59">
          <description>Manages the excerpt escaping process</description>
          <long-description/>
          <tag line="59" name="param" description="the default filtered version" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="the raw version" type="string" variable="$raw_excerpt">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$raw_excerpt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="classes">
        <name>tinymce_excerpt_box</name>
        <full_name>tinymce_excerpt_box</full_name>
        <docblock line="71">
          <description>Prints the markup for the tinymce excerpt box</description>
          <long-description/>
          <tag line="71" name="param" description="the post object" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>save_box</name>
        <full_name>save_box</full_name>
        <docblock line="90">
          <description>Called when the post is beeing saved</description>
          <long-description/>
          <tag line="90" name="param" description="the post id" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/OneImageForAll.class.php" hash="96f97efc18cdfbefee192a191036146b" package="Default">
    <docblock line="2">
      <description>Contains OneImageForAll class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\GalleryHelper</extends>
      <name>OneImageForAll</name>
      <full_name>\OneImageForAll</full_name>
      <docblock line="6">
        <description>Merges all images of a gallery in only one and serve it as a sprite
Important: every image have the same sizes and jpeg quality.</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$cache_name</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="stores the name of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$cache_dir</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="stores the base directory of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$cache_url</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="stores the url of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$cache_path</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="stores the path of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$force_image_refresh</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="true if you want to force cache refresh" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="stores the configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$no_images</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="to be returned when no image is available" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Initializes the object with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="57">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="57" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="classes">
        <name>get_style</name>
        <full_name>get_style</full_name>
        <docblock line="80">
          <description>Calculates the style for the $image_id</description>
          <long-description/>
          <tag line="80" name="param" description="the index of the image" type="int" variable="$image_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="the style html attribute" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$image_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="classes">
        <name>check_config</name>
        <full_name>check_config</full_name>
        <docblock line="92">
          <description>Checks if the config has all the paramaters needed.</description>
          <long-description/>
          <tag line="92" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="classes">
        <name>cache_names</name>
        <full_name>cache_names</full_name>
        <docblock line="114">
          <description>Calculates the cache name, dir, url and path.</description>
          <long-description/>
          <tag line="114" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="143" package="classes">
        <name>merge_images</name>
        <full_name>merge_images</full_name>
        <docblock line="139">
          <description>Merges the images in the current object and returns the url to the big image.</description>
          <long-description/>
          <tag line="139" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/NewBlogInitializator.class.php" hash="a44a566a51fb1888fdc4b2cb932d6430" package="Default">
    <docblock line="2">
      <description>Stores class for inserting initial datas into a new blog</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends/>
      <name>NewBlogInitializator</name>
      <full_name>\NewBlogInitializator</full_name>
      <docblock line="7">
        <description>Fills the brand new blog with starting data</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$blog_id</name>
        <default/>
        <docblock line="17">
          <description>In a MultiSite environment stores the blog id</description>
          <long-description/>
          <tag line="17" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$theme</name>
        <default/>
        <docblock line="23">
          <description>Stores the parameter for the new blog theme</description>
          <long-description/>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$pages</name>
        <default>array()</default>
        <docblock line="29">
          <description>Stores the list of automatically created pages</description>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="35">
          <description>Hooks the initial data filling into WordPress</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="42">
          <description>Initializes the blog with starting data.</description>
          <long-description>&lt;p&gt;Overload this in a child ob ject if you need customization on starting data&lt;/p&gt;</long-description>
          <tag line="42" name="param" description="the blog id" type="int" variable="$blog_id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$blog_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="classes">
        <name>create_menu</name>
        <full_name>create_menu</full_name>
        <docblock line="66">
          <description>Creates the menu with given name</description>
          <long-description>&lt;p&gt;If a menu with given name exists this method will return its id.
If $location parameter is passed this method will assign the menu with given $name to such location&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="the menu name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="" type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="&lt;mixed, boolean, unknown, multitype:, NULL, WP_Error, object, array|object, string, number, error, multitype:mixed unknown , multitype:number mixed , multitype:number Ambigous &lt;string, NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$location</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>select_blog</name>
        <full_name>select_blog</full_name>
        <docblock line="90">
          <description>In a MultiSite environment selects the right blog</description>
          <long-description/>
          <tag line="90" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="classes">
        <name>delete_default_posts</name>
        <full_name>delete_default_posts</full_name>
        <docblock line="101">
          <description>Removes the default 'Hello World' post and page</description>
          <long-description/>
          <tag line="101" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="classes">
        <name>add_page</name>
        <full_name>add_page</full_name>
        <docblock line="112">
          <description>Inserts a new page into WP</description>
          <long-description/>
          <tag line="112" name="param" description="page details according to {@link http://codex.wordpress.org/Function_Reference/wp_insert_post wp_insert_post()}" type="string|array" variable="$parms">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="112" name="return" description="the post id" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$parms</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="classes">
        <name>get_page_details</name>
        <full_name>get_page_details</full_name>
        <docblock line="150">
          <description>Gets the automatically generated page details</description>
          <long-description/>
          <tag line="150" name="param" description="the id of the page" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="150" name="return" description="list of details, false if the $index doesn't point to an automatically generated page" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="classes">
        <name>add_menu_entry</name>
        <full_name>add_menu_entry</full_name>
        <docblock line="159">
          <description>Adds an automatically generated page to the given menu</description>
          <long-description/>
          <tag line="159" name="param" description="the index of $this-&gt;pages array" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="param" description="the menu id" type="int" variable="$menu_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
        <argument line="165">
          <name>$menu_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="classes">
        <name>add_menu_entries</name>
        <full_name>add_menu_entries</full_name>
        <docblock line="181">
          <description>Adds all automatically generated pages to the given menu</description>
          <long-description/>
          <tag line="181" name="param" description="the menu id" type="int" variable="$menu_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="param" description="the first element index" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="param" description="the last element index" type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$menu_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="188">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="188">
          <name>$end</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="classes">
        <name>reset_page_list</name>
        <full_name>reset_page_list</full_name>
        <docblock line="197">
          <description>Resets the list of the automatically generated pages</description>
          <long-description/>
          <tag line="197" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="classes">
        <name>add_theme</name>
        <full_name>add_theme</full_name>
        <docblock line="207">
          <description>Creates the basic structure for a child theme.</description>
          <long-description>&lt;p&gt;This method tries to make a new theme directory
under the wp-contents/themes.
Then tries to create style.css in the newly
theme folder and fill it with the default header comment&lt;/p&gt;

&lt;p&gt;An example of parameters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$defaults = array(
        'name'          =&gt;  'Wordpress Theme Utils Child Theme',
        'folder'        =&gt;  'wtu-child-theme',
        'child_of'      =&gt;  'Wordpress-Theme-Utils',
        'description'   =&gt;  'This is a Child Theme of Wordpress Theme Utils',
        'theme_uri'     =&gt;  'http://www.emanueletessore.com/',
        'author'        =&gt;  'Emanuele Tessore',
        'author_uri'    =&gt;  'http://www.emanueletessore.com/',
        'version'       =&gt;  '1.0.0'
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uses {@link http://codex.wordpress.org/Function_Reference/wp_die wp_die()} if something goes wrong&lt;/p&gt;</long-description>
          <tag line="207" name="param" description="parameters for the new theme" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="207" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$parms</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="classes">
        <name>enable_theme</name>
        <full_name>enable_theme</full_name>
        <docblock line="295">
          <description>Enables the new theme for the current blog</description>
          <long-description/>
          <tag line="295" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="classes">
        <name>delete_all_pages</name>
        <full_name>delete_all_pages</full_name>
        <docblock line="321">
          <description>Deletes all pages</description>
          <long-description>&lt;p&gt;WARNING: it does NOT ask if you're sure!!!&lt;/p&gt;</long-description>
          <tag line="321" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/GMapDataRetriever.class.php" hash="154bde91a2cebfcdffad076781c16d2a" package="Default">
    <docblock line="2">
      <description>Stores the GMapDataRetriever class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>GMapDataRetriever</name>
      <full_name>\GMapDataRetriever</full_name>
      <docblock line="6">
        <description>Retrieves GMaps data for the gmap.js integration</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="global" package="Default">
        <name>$map_data</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="stores some map data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="classes">
        <name>set_map_data</name>
        <full_name>set_map_data</full_name>
        <docblock line="19">
          <description>Set the map data to the given set</description>
          <long-description/>
          <tag line="19" name="param" description="the map data" type="array" variable="$map_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="return" description="$this for chainability" type="\GMapDataRetriever">
            <type by_reference="false">\GMapDataRetriever</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$map_data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="classes">
        <name>use_simple_fields</name>
        <full_name>use_simple_fields</full_name>
        <docblock line="29">
          <description>Set the class to get map datas from the Simple fields plugin
Checks if the plugin is enabled.</description>
          <long-description/>
          <tag line="29" name="return" description="$this for chainability" type="\GMapDataRetriever">
            <type by_reference="false">\GMapDataRetriever</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="classes">
        <name>get_script_content</name>
        <full_name>get_script_content</full_name>
        <docblock line="117">
          <description>Get a &lt;script&gt; tag with a JSON variable in it.</description>
          <long-description/>
          <tag line="117" name="example" description="GMapDataRetriever.example.json"/>
          <tag line="117" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="classes">
        <name>the_script</name>
        <full_name>the_script</full_name>
        <docblock line="126">
          <description>Prints the &lt;scrpt&gt; tag generated by get_script_content to the DOM</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/LinksManager.class.php" hash="a61ad81dcf9b01a25292169ad851d1a5" package="Default">
    <class final="false" abstract="false" namespace="global" line="14" package="Default">
      <extends/>
      <name>LinksManager</name>
      <full_name>\LinksManager</full_name>
      <docblock line="6">
        <description>Manages the links subsection</description>
        <long-description>&lt;p&gt;Adds support for link image and translations&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
      </docblock>
      <constant namespace="global" line="21" package="Default">
        <name>CUSTOM_LINKS_POST_TYPE</name>
        <full_name>CUSTOM_LINKS_POST_TYPE</full_name>
        <value>'wtu-custom-links'</value>
      </constant>
      <property final="false" static="true" visibility="private" line="19" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="15">
          <description>Stores the instance of the singleton</description>
          <long-description/>
          <tag line="15" name="var" description="" type="\LinksManager">
            <type by_reference="false">\LinksManager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="27" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Initializes default settings
Singleton private constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="Default">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="34">
          <description>Called by WordPress on init</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="Default">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="47">
          <description>Retrieves the current instance</description>
          <long-description/>
          <tag line="47" name="return" description="the current instance" type="\LinksManager">
            <type by_reference="false">\LinksManager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="63" package="Default">
        <name>is_enabled</name>
        <full_name>is_enabled</full_name>
        <docblock line="59">
          <description>Test if this feature is enabled</description>
          <long-description/>
          <tag line="59" name="return" description="true if LinkManager is enabled" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="Default">
        <name>custom_title</name>
        <full_name>custom_title</full_name>
        <docblock line="67">
          <description>Callback to modify the title field in the admin panel</description>
          <long-description/>
          <tag line="67" name="param" description="" type="\unknown" variable="$input">
            <type by_reference="false">\unknown</type>
          </tag>
          <tag line="67" name="return" description="" type="string|\unknown">
            <type by_reference="false">string</type>
            <type by_reference="false">\unknown</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$input</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="Default">
        <name>register_custom_types</name>
        <full_name>register_custom_types</full_name>
        <docblock line="82">
          <description>Register some custom post types and categories</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="125" package="Default">
        <name>edit_link_box_html</name>
        <full_name>edit_link_box_html</full_name>
        <docblock line="121">
          <description>Print the markup for the link details box</description>
          <long-description/>
          <tag line="121" name="param" description="the current post" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="164" package="Default">
        <name>register_metaboxes</name>
        <full_name>register_metaboxes</full_name>
        <docblock line="161">
          <description>Register the link details metabox and removes some useless one</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="181" package="Default">
        <name>save_link_data</name>
        <full_name>save_link_data</full_name>
        <docblock line="177">
          <description>Called by WordPress while saving the post</description>
          <long-description/>
          <tag line="177" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="212" package="Default">
        <name>get_links</name>
        <full_name>get_links</full_name>
        <argument line="212">
          <name>$args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file classes/LinksManager.class.php</error>
      <error line="212" code="50010">No DocBlock was found for method get_links()</error>
    </parse_markers>
  </file>
  <file path="classes/SimpleFieldsQuickConfig.class.php" hash="10449fd05fc2477587106f957c09ee6c" package="Default">
    <docblock line="2">
      <description>Contains SimpleFieldsQuickConfig class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="classes">
      <extends/>
      <name>SimpleFieldsQuickConfig</name>
      <full_name>\SimpleFieldsQuickConfig</full_name>
      <docblock line="6">
        <description>Perform a quick configuration for Simple Fields plugin</description>
        <long-description>&lt;p&gt;It uses the default values used by FastBooking
By default you only need to call in functions.php:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new SimpleFieldsQuickConfig();&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$post_type</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="the post type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$groups</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="stores the Simple Fields groups" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$connectors</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Simple Fields connectors" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>Initializes the default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="classes">
        <name>set_post_type</name>
        <full_name>set_post_type</full_name>
        <docblock line="276">
          <description>Set the post type to the given parameter</description>
          <long-description/>
          <tag line="276" name="param" description="the post type" type="array" variable="$post_type">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$post_type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="classes">
        <name>set_groups</name>
        <full_name>set_groups</full_name>
        <docblock line="285">
          <description>Set the post groups to the given parameter</description>
          <long-description/>
          <tag line="285" name="param" description="the groups" type="array" variable="$groups">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$groups</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="classes">
        <name>set_connectors</name>
        <full_name>set_connectors</full_name>
        <docblock line="294">
          <description>Set the post connectors to the given parameter</description>
          <long-description/>
          <tag line="294" name="param" description="the post connectors" type="array" variable="$connectors">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$connectors</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="classes">
        <name>check_config</name>
        <full_name>check_config</full_name>
        <docblock line="303">
          <description>Check if a config for the Simple Fields plugin exists,
elsewhere it will add the default one.</description>
          <long-description>&lt;p&gt;For better performance this check is limited
only to the admin pages, not to the public pages.
So if you wanna add the default values you'll have to visit wp-admin&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DebugUtils.class.php" hash="300e48eca9cb8b133d99595090ad0903" package="Default">
    <docblock line="2">
      <description>Stores DebugUtils class definition</description>
      <long-description/>
    </docblock>
    <function namespace="global" line="196" package="debug">
      <name>vd</name>
      <full_name>\vd</full_name>
      <docblock line="189">
        <description>Quick and dirty way to know a variable value
vd stays for &lt;b&gt;v&lt;/b&gt;ar_dump() and &lt;b&gt;d&lt;/b&gt;ie()</description>
        <long-description/>
        <tag line="189" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="189" name="package" description="debug"/>
        <tag line="189" name="version" description="1.0.0"/>
      </docblock>
      <argument line="196">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="212" package="debug">
      <name>v</name>
      <full_name>\v</full_name>
      <docblock line="205">
        <description>Quick and dirty way to know a variable value
Usefull in a loop cause it doesn't break the execution with die</description>
        <long-description/>
        <tag line="205" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="205" name="package" description="debug"/>
        <tag line="205" name="version" description="1.0.0"/>
      </docblock>
      <argument line="212">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="228" package="debug">
      <name>vc</name>
      <full_name>\vc</full_name>
      <docblock line="221">
        <description>Quick and dirty way to know a variable value in a production enviroment
vc stays for &lt;b&gt;v&lt;/b&gt;ar_dump() on a &lt;b&gt;c&lt;/b&gt;omment</description>
        <long-description/>
        <tag line="221" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="221" name="package" description="debug"/>
        <tag line="221" name="version" description="1.0.0"/>
      </docblock>
      <argument line="228">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="244" package="debug">
      <name>debug</name>
      <full_name>\debug</full_name>
      <docblock line="237">
        <description>Quick and dirty way to know a variable value.</description>
        <long-description>&lt;p&gt;It uses the last changed mode.&lt;/p&gt;</long-description>
        <tag line="237" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="237" name="package" description="debug"/>
        <tag line="237" name="version" description="1.0.0"/>
      </docblock>
      <argument line="244">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="258" package="debug">
      <name>debug_assets</name>
      <full_name>\debug_assets</full_name>
      <docblock line="252">
        <description>Quick and dirty way to know the assets list
at the end of the page</description>
        <long-description/>
        <tag line="252" name="package" description="debug"/>
        <tag line="252" name="version" description="1.0.0"/>
      </docblock>
    </function>
    <function namespace="global" line="271" package="debug">
      <name>debug_deprecated</name>
      <full_name>\debug_deprecated</full_name>
      <docblock line="266">
        <description>Quick and dirty way to know the stack trace of a deprecated function</description>
        <long-description/>
        <tag line="266" name="package" description="debug"/>
        <tag line="266" name="version" description="1.0.0"/>
      </docblock>
    </function>
    <class final="true" abstract="false" namespace="global" line="11" package="classes">
      <extends/>
      <name>DebugUtils</name>
      <full_name>\DebugUtils</full_name>
      <docblock line="6">
        <description>Utils to debug the code while writing it.</description>
        <long-description/>
        <tag line="6" name="author" description="Emanuele 'Tex' Tessore"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="42" package="classes">
        <name>COMMENT</name>
        <full_name>COMMENT</full_name>
        <value>1</value>
        <docblock line="39">
          <description>Wrap the var_dump into an html comment</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="47" package="classes">
        <name>H1_PRE</name>
        <full_name>H1_PRE</full_name>
        <value>2</value>
        <docblock line="44">
          <description>Print a well visible H1 and the dump is wrapped in a pre</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="53" package="classes">
        <name>H1_PRE_DIE</name>
        <full_name>H1_PRE_DIE</full_name>
        <value>3</value>
        <docblock line="49">
          <description>Print a well visible H1, use a pre as wrapper for the variable
dump and then stop the execution of the script</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="16" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="singleton instance" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$level</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="the level of debug: html comments, h1 and pre, h1 pre and die." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$title</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="the title to be printed on top of the variable dump" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="the template for the debug section" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$status</name>
        <default>false</default>
        <docblock line="33">
          <description>Enable or disable all debugs</description>
          <long-description/>
          <tag line="33" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="58" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Initializes the default settings</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="76" package="classes">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="71">
          <description>This object is a Singleton.</description>
          <long-description>&lt;p&gt;This method gets the instance of it.&lt;/p&gt;</long-description>
          <tag line="71" name="return" description="the single instance of the class" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="classes">
        <name>set_level</name>
        <full_name>set_level</full_name>
        <docblock line="84">
          <description>Sets the level of output.</description>
          <long-description>&lt;p&gt;Use DebugUtils::SOFT DebugUtils::H1_PRE or DebugUtils::H1_PRE_DIE&lt;/p&gt;</long-description>
          <tag line="84" name="param" description="the level" type="int" variable="$level">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="return" description="for chaining" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$level</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="99" package="classes">
        <name>get_level</name>
        <full_name>get_level</full_name>
        <docblock line="95">
          <description>Retrieves the current level of echo</description>
          <long-description/>
          <tag line="95" name="return" description="current level of echo" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="classes">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="103">
          <description>Prints the dump for the given $var</description>
          <long-description/>
          <tag line="103" name="param" description="the variable to be dumped" type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="classes">
        <name>set_title</name>
        <full_name>set_title</full_name>
        <docblock line="134">
          <description>Sets the title of the box</description>
          <long-description/>
          <tag line="134" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="for chaining" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="classes">
        <name>dump_assets</name>
        <full_name>dump_assets</full_name>
        <docblock line="144">
          <description>Dumps the $wp_scripts global variable</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="classes">
        <name>debug_assets</name>
        <full_name>debug_assets</full_name>
        <docblock line="153">
          <description>Debug the assets list on the bottom of the page</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="167" package="classes">
        <name>dump_deprecated</name>
        <full_name>dump_deprecated</full_name>
        <docblock line="160">
          <description>Dumps the stack trace when a deprecated function is encountered</description>
          <long-description/>
          <tag line="160" name="param" description="function name" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="param" description="deprecation message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="param" description="first version with deprecated entry" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="todo" description=": need improvements on readability"/>
        </docblock>
        <argument line="167">
          <name>$function</name>
          <default/>
          <type/>
        </argument>
        <argument line="167">
          <name>$message</name>
          <default/>
          <type/>
        </argument>
        <argument line="167">
          <name>$version</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="179" package="classes">
        <name>debug_deprecated</name>
        <full_name>debug_deprecated</full_name>
        <docblock line="176">
          <description>Enables debugging of deprecated functions</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ForceDownload.class.php" hash="221b3e6afa9f8c2214338257849d9dc3" package="Default">
    <docblock line="2">
      <description>Contains ForceDownload class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>ForceDownload</name>
      <full_name>\ForceDownload</full_name>
      <docblock line="6">
        <description>Force an attachment to be downloaded</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Enables the force to download feature</description>
          <long-description/>
          <tag line="14" name="param" description="" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="14" name="param" description="" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="19">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="classes">
        <name>force_download</name>
        <full_name>force_download</full_name>
        <docblock line="24">
          <description>AJAX callback for forcing the download of a file</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="classes">
        <name>check_request</name>
        <full_name>check_request</full_name>
        <docblock line="44">
          <description>Tests if the $_REQUEST[] field is valid
Overload this to insert more checks</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="classes">
        <name>force_download_anchor</name>
        <full_name>force_download_anchor</full_name>
        <docblock line="56">
          <description>Calculates the url for the attachment with id $id</description>
          <long-description/>
          <tag line="56" name="param" description="the attachment id" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="param" description="the text inside the &lt;a&gt; tag" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="additional parameters for the &lt;a&gt; tag" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="see" description="\HtmlHelper::anchor()" refers="\HtmlHelper::anchor()"/>
          <tag line="56" name="return" description="an &lt;a&gt; tag" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$parms</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ShowTitleThumbExcerptWalkerNavMenu.class.php" hash="ceb5551f7676ba8431fc1872a7206fa7" package="Default">
    <docblock line="2">
      <description>Contains the ShowTitleThumbExcerptWalkerNavMenu class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>ShowTitleThumbExcerptWalkerNavMenu</name>
      <full_name>\ShowTitleThumbExcerptWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Shows the title, the post thumbnail
and the excerpt for every menu entry.</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="the substition template" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="see" description="\SubstitutionTemplate" refers="\SubstitutionTemplate"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes the object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="classes">
        <name>end_el</name>
        <full_name>end_el</full_name>
        <docblock line="41">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="41" name="see" description="\Walker_Nav_Menu::end_el()" refers="\Walker_Nav_Menu::end_el()"/>
          <tag line="41" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="Page data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="41" name="param" description="Depth of page." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ImageProgressiveLoading.class.php" hash="9a70ee0c503995eb0d6f867134894888" package="Default">
    <docblock line="2">
      <description>Contains ImageProgressiveLoading class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes\image manager">
      <extends>\GalleryHelper</extends>
      <name>ImageProgressiveLoading</name>
      <full_name>\ImageProgressiveLoading</full_name>
      <docblock line="8">
        <description>Takes care of image sequential loading with jQuery Cycle 2</description>
        <long-description/>
        <tag line="8" name="author" description="etessore"/>
        <tag line="8" name="version" description="1.0.0"/>
        <tag line="8" name="package" description="classes"/>
        <tag line="8" name="subpackage" description="image manager"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$cycle_attrs</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="classes\image manager">
        <name>set_cycle_attr</name>
        <full_name>set_cycle_attr</full_name>
        <docblock line="19">
          <description>Adds an attribute for the cycle div</description>
          <long-description>&lt;p&gt;Useful if you vant to customize jQuery.cycle 2 behavior&lt;/p&gt;</long-description>
          <tag line="19" name="param" description="the key" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="param" description="the value" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="19" name="return" description="$this for chainability" type="\ImagePreload">
            <type by_reference="false">\ImagePreload</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="28">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="38" package="classes\image manager">
        <name>render_element</name>
        <full_name>render_element</full_name>
        <docblock line="33">
          <description>Renders a single element of the slideshow</description>
          <long-description/>
          <tag line="33" name="param" description="the index of the element in $this-&gt;images array" type="int" variable="$k">
            <type by_reference="false">int</type>
          </tag>
          <tag line="33" name="return" description="html markup for the given element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$k</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="classes\image manager">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="54">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="54" name="see" description="\FeatureWithAssets::load_assets()" refers="\FeatureWithAssets::load_assets()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="67" package="classes\image manager">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="63">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="63" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="17" code="50018">No DocBlock was found for property $cycle_attrs</error>
    </parse_markers>
  </file>
  <file path="classes/ShortcodeForTabs.class.php" hash="72e3d0091faeb6c10a89f0be3b4bd608" package="Default">
    <docblock line="3">
      <description>Stores ShortcodeForTabs class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="29" package="Default">
      <extends/>
      <name>ShortcodeForTabs</name>
      <full_name>\ShortcodeForTabs</full_name>
      <docblock line="10">
        <description>Manages tabs design with shortcodes.</description>
        <long-description>&lt;p&gt;Use [tab]&lt;some text&gt;[/tab] to wrap the content
of a single tag and then [tabs-list] for the
list of the tabs in the current post content.&lt;/p&gt;

&lt;p&gt;These optional parameter are available:
    icon    =   string|int number if you want a incon from the media library, string for the &lt;img&gt; tag src attribute
    class   =   string class attribute for the current tab div
    title   =   string the title of the tab
    list    =   boolean set to false if you want to remove the current entry from the tabs list
    from    =   the starting point of the google maps route
    route-type  =   the type or google maps route {@link https://developers.google.com/maps/documentation/javascript/reference#TravelMode google.maps.TravelMode}&lt;/p&gt;</long-description>
        <tag line="10" name="author" description="etessore"/>
        <tag line="10" name="version" description="1.0.0"/>
        <tag line="10" name="since" description="1.0"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="34" namespace="global" package="Default">
        <name>$tab_shortcode</name>
        <default>'tab'</default>
        <docblock line="30">
          <description>Stores the shortcode used for wrapping a single tab</description>
          <long-description/>
          <tag line="30" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="40" namespace="global" package="Default">
        <name>$list_shortcode</name>
        <default>'tabs_list'</default>
        <docblock line="36">
          <description>Stores the shortcode for placing the tabs lis</description>
          <long-description/>
          <tag line="36" name="var" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$tab_tpl</name>
        <default/>
        <docblock line="42">
          <description>Substitution template for the single tab</description>
          <long-description/>
          <tag line="42" name="var" description="" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" namespace="global" package="Default">
        <name>$list_tpl</name>
        <default/>
        <docblock line="48">
          <description>Substitution template for the tabs list</description>
          <long-description/>
          <tag line="48" name="var" description="" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="58" namespace="global" package="Default">
        <name>$list_of_entries</name>
        <default>array()</default>
        <docblock line="54">
          <description>Stores the list of tabs for the current post</description>
          <long-description/>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="64" namespace="global" package="Default">
        <name>$number_of_entries</name>
        <default>0</default>
        <docblock line="60">
          <description>Stores the number of tabs for the current post</description>
          <long-description/>
          <tag line="60" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="66">
          <description>Initializes the istance with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="81" package="Default">
        <name>add_shortcode</name>
        <full_name>add_shortcode</full_name>
        <docblock line="76">
          <description>Register the needed shortcodes with WordPress subsystem</description>
          <long-description/>
          <tag line="76" name="param" description="true if you want to enable the shortcode 'tab_hook'" type="\" variable="$tab"/>
          <tag line="76" name="param" description="true if you want to enable the shortcode 'list_hook'" type="\" variable="$list"/>
        </docblock>
        <argument line="81">
          <name>$tab</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="81">
          <name>$list</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="91" package="Default">
        <name>delete_shortcode</name>
        <full_name>delete_shortcode</full_name>
        <docblock line="86">
          <description>Deletes the shortcodes used in this feature</description>
          <long-description/>
          <tag line="86" name="param" description="true if you want to disable the shortcode 'tab_hook'" type="\" variable="$tab"/>
          <tag line="86" name="param" description="true if you want to disable the shortcode 'list_hook'" type="\" variable="$list"/>
        </docblock>
        <argument line="91">
          <name>$tab</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="91">
          <name>$list</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="101" package="Default">
        <name>tab_hook</name>
        <full_name>tab_hook</full_name>
        <docblock line="96">
          <description>This is called back by wordpress when a tab shortcode is found</description>
          <long-description/>
          <tag line="96" name="param" description="" type="\unknown_type" variable="$atts">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="96" name="param" description="the content wrapped into the shortcode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="101">
          <name>$atts</name>
          <default/>
          <type/>
        </argument>
        <argument line="101">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="147" package="Default">
        <name>get_image</name>
        <full_name>get_image</full_name>
        <docblock line="139">
          <description>Get the image for the tab.</description>
          <long-description>&lt;p&gt;build the image for this tab: take it from the media
library if the parameter is a number, use such parameter
as src attribute for img tag if it's not a number.&lt;/p&gt;</long-description>
          <tag line="139" name="param" description="id of the image or string of the src parameter" type="int|string" variable="$parm">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$parm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="158" package="Default">
        <name>list_hook</name>
        <full_name>list_hook</full_name>
        <docblock line="154">
          <description>This is called back by WordPress when the tab list shortcode is found</description>
          <long-description/>
          <tag line="154" name="param" description="User defined attributes in shortcode tag." type="array" variable="$atts">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$atts</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="189" package="Default">
        <name>build_list</name>
        <full_name>build_list</full_name>
        <docblock line="182">
          <description>Builds the list of tabs.</description>
          <long-description>&lt;p&gt;This is called to be sure we don't leave no tab behind
Thanks to Viper007Bond: @link http://www.viper007bond.com/2009/11/22/wordpress-code-earlier-shortcodes/&lt;/p&gt;</long-description>
          <tag line="182" name="param" description="the post content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ThemeUtils.class.php" hash="db265f870e0145a638a330ea29f01d43" package="Default">
    <docblock line="2">
      <description>Stores the code for the parent theme setting initialization and management</description>
      <long-description/>
    </docblock>
    <include line="57" type="Include Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="115" package="Default">
      <name>WORDPRESS_THEME_UTILS_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_PATH</full_name>
      <value>dirname(dirname(__FILE__))</value>
    </constant>
    <constant namespace="global" line="121" package="Default">
      <name>WORDPRESS_THEME_UTILS_REGISTER_TOP_MENU</name>
      <full_name>\WORDPRESS_THEME_UTILS_REGISTER_TOP_MENU</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="127" package="Default">
      <name>WORDPRESS_THEME_UTILS_REGISTER_BOTTOM_MENU</name>
      <full_name>\WORDPRESS_THEME_UTILS_REGISTER_BOTTOM_MENU</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="133" package="Default">
      <name>WORDPRESS_THEME_UTILS_PARTIALS_RELATIVE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_PARTIALS_RELATIVE_PATH</full_name>
      <value>'partials/'</value>
    </constant>
    <constant namespace="global" line="139" package="Default">
      <name>WORDPRESS_THEME_UTILS_LIBRARIES_RELATIVE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_LIBRARIES_RELATIVE_PATH</full_name>
      <value>'libraries/'</value>
    </constant>
    <constant namespace="global" line="142" package="Default">
      <name>WORDPRESS_THEME_UTILS_LIBRARIES_ABSOLUTE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_LIBRARIES_ABSOLUTE_PATH</full_name>
      <value>WORDPRESS_THEME_UTILS_PATH . '/libraries/'</value>
    </constant>
    <constant namespace="global" line="148" package="Default">
      <name>WORDPRESS_THEME_UTILS_AUTOLOADER_RELATIVE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_AUTOLOADER_RELATIVE_PATH</full_name>
      <value>'/classes/ClassAutoloader.class.php'</value>
    </constant>
    <function namespace="global" line="172" package="Default">
      <name>wtu_init</name>
      <full_name>\wtu_init</full_name>
      <docblock line="168">
        <description>Initializes the WordPress Theme Utils.</description>
        <long-description>&lt;p&gt;Use this in your child theme functions.php&lt;/p&gt;</long-description>
      </docblock>
    </function>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>ThemeUtils</name>
      <full_name>\ThemeUtils</full_name>
      <docblock line="7">
        <description>Initializes and manages the parent theme config and constants</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="18" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="14">
          <description>Stores the unique instance</description>
          <long-description/>
          <tag line="14" name="var" description="" type="\ThemeUtils">
            <type by_reference="false">\ThemeUtils</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="24" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes default settings
Singleton private constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="37" package="classes">
        <name>register_text_domain</name>
        <full_name>register_text_domain</full_name>
        <docblock line="34">
          <description>Register the wtu-framework text domain to WordPress</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="45" package="classes">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="41">
          <description>Gets the instance with the current options set</description>
          <long-description/>
          <tag line="41" name="return" description="current instance" type="\ThemeUtils">
            <type by_reference="false">\ThemeUtils</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="56" package="classes">
        <name>enable_autoload_system</name>
        <full_name>enable_autoload_system</full_name>
        <docblock line="53">
          <description>Initializes the autoloader subsystem</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="65" package="classes">
        <name>register_main_menu</name>
        <full_name>register_main_menu</full_name>
        <docblock line="61">
          <description>Registers the Primary Menu to WordPress</description>
          <long-description/>
          <tag line="61" name="param" description="the label for the menu" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$label</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="classes">
        <name>register_bottom_menu</name>
        <full_name>register_bottom_menu</full_name>
        <docblock line="69">
          <description>Register the Secondary Menu to WordPress</description>
          <long-description/>
          <tag line="69" name="param" description="the label for the menu" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$label</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="81" package="classes">
        <name>enable_debug</name>
        <full_name>enable_debug</full_name>
        <docblock line="77">
          <description>Enables vd()\vc()\v() functions output,
This is generically good for development environments.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="91" package="classes">
        <name>disable_debug</name>
        <full_name>disable_debug</full_name>
        <docblock line="87">
          <description>Disable vd()\vc()\v() functions output,
This is default status, generically good for production environments.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="classes">
        <name>dummy_content</name>
        <full_name>dummy_content</full_name>
        <docblock line="96">
          <description>Enable the Lorem Ipsum body text on empty pages</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="107" package="classes">
        <name>default_constants</name>
        <full_name>default_constants</full_name>
        <docblock line="104">
          <description>Register some constants</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="154" package="classes">
        <name>enable_links_manager</name>
        <full_name>enable_links_manager</full_name>
        <docblock line="151">
          <description>Enables the Custom Links feature</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="161" package="classes">
        <name>disable_automatic_assets_manager</name>
        <full_name>disable_automatic_assets_manager</full_name>
        <docblock line="158">
          <description>Disables the loading of javascripts and csses from a template part</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/TwitterManager.class.php" hash="9d6b15fa6cea92d714101329890c80f4" package="Default">
    <docblock line="3">
      <description>Contains the definition of class TwitterManager</description>
      <long-description/>
    </docblock>
    <include line="93" type="Require Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends/>
      <name>TwitterManager</name>
      <full_name>\TwitterManager</full_name>
      <docblock line="8">
        <description>Manages the connection with Twitter</description>
        <long-description/>
        <tag line="8" name="author" description="etessore"/>
        <tag line="8" name="version" description="1.0.0"/>
        <tag line="8" name="package" description="classes"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="20" namespace="global" package="Default">
        <name>$oauth_key</name>
        <default/>
        <docblock line="16">
          <description>The OAuth customer key</description>
          <long-description/>
          <tag line="16" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="26" namespace="global" package="Default">
        <name>$oauth_secret</name>
        <default/>
        <docblock line="22">
          <description>The OAuth customer secret</description>
          <long-description/>
          <tag line="22" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="32" namespace="global" package="Default">
        <name>$oauth_token</name>
        <default/>
        <docblock line="28">
          <description>The OAuth token</description>
          <long-description/>
          <tag line="28" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="38" namespace="global" package="Default">
        <name>$oauth_token_secret</name>
        <default/>
        <docblock line="34">
          <description>The OAuth token secret</description>
          <long-description/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="44" namespace="global" package="Default">
        <name>$connection</name>
        <default/>
        <docblock line="40">
          <description>The connection to Twitter APIs</description>
          <long-description/>
          <tag line="40" name="var" description="" type="\TwitterOAuth">
            <type by_reference="false">\TwitterOAuth</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="50" namespace="global" package="Default">
        <name>$transients</name>
        <default>array('tweets' =&gt; 'twitter_manager_my_tweets', 'oauth_token' =&gt; 'twitter_manager_oauth_token', 'oauth_token_secret' =&gt; 'twitter_manager_oauth_token_secret', 'oauth_temp_credentials' =&gt; 'twitter_manager_oauth_temp_credentials')</default>
        <docblock line="46">
          <description>Some transients for cache</description>
          <long-description/>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="61" namespace="global" package="Default">
        <name>$actions</name>
        <default>array('update_tweets' =&gt; array('action' =&gt; 'update_tweets', 'callback' =&gt; array(__CLASS__, 'on_ajax_update_tweets')), 'show_tweets' =&gt; array('action' =&gt; 'show_tweets', 'callback' =&gt; array(__CLASS__, 'on_ajax_show_tweets')))</default>
        <docblock line="57">
          <description>List of WP AJAX actions used by this feature</description>
          <long-description/>
          <tag line="57" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="82" package="classes">
        <name>enable</name>
        <full_name>enable</full_name>
        <docblock line="72">
          <description>Enables the connection with Twitter</description>
          <long-description>&lt;p&gt;You need to create a new app and authorize it from your twitter account&lt;/p&gt;</long-description>
          <tag line="72" name="param" description="Consumer key" type="string" variable="$customer_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="Consumer secret" type="string" variable="$customer_secret">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="Access token" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="param" description="Access token secret" type="string" variable="$token_secret">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$customer_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$customer_secret</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$token</name>
          <default/>
          <type/>
        </argument>
        <argument line="82">
          <name>$token_secret</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="classes">
        <name>disable</name>
        <full_name>disable</full_name>
        <docblock line="103">
          <description>Completely disables the connection with Twitter</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="116" package="classes">
        <name>on_ajax_update_tweets</name>
        <full_name>on_ajax_update_tweets</full_name>
        <docblock line="113">
          <description>Updates the list of tweets</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="135" package="classes">
        <name>on_ajax_show_tweets</name>
        <full_name>on_ajax_show_tweets</full_name>
        <docblock line="132">
          <description>Shows the cached tweets</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ShowcaseSlider.class.php" hash="640620c1001bca4e942266b4610259a8" package="Default">
    <docblock line="2">
      <description>Definition Class for ShowcaseSlider</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes\image manager">
      <extends>\GalleryHelper</extends>
      <name>ShowcaseSlider</name>
      <full_name>\ShowcaseSlider</full_name>
      <docblock line="8">
        <description/>
        <long-description/>
        <tag line="8" name="author" description="etessore"/>
        <tag line="8" name="version" description="1.0.0"/>
        <tag line="8" name="package" description="classes"/>
        <tag line="8" name="subpackage" description="image manager"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="21" package="classes\image manager">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="17">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="17" name="see" description="\FeatureWithAssets::load_assets()" refers="\FeatureWithAssets::load_assets()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="29" package="classes\image manager">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="25">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="25" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <critical line="8" code="50005">No short description for class \ShowcaseSlider</critical>
    </parse_markers>
  </file>
  <file path="classes/MergedSlideshow.class.php" hash="178652c8cad6e7c4359988524284d6ae" package="Default">
    <class final="false" abstract="false" namespace="global" line="15" package="Default">
      <extends>\OneImageForAll</extends>
      <name>MergedSlideshow</name>
      <full_name>\MergedSlideshow</full_name>
      <docblock line="2">
        <description>Merge all the images into a big one and serve it as div background</description>
        <long-description>&lt;p&gt;Takes a list of n images with the same dimensions
and merges them in a unique image with sizes (n x width) and height.
Than renders an html dom to serve the big image as background of some divs
so that you can cycle it.&lt;/p&gt;</long-description>
        <tag line="2" name="author" description="etessore"/>
        <tag line="2" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="Default">
        <name>get_slideshow_dimension</name>
        <full_name>get_slideshow_dimension</full_name>
        <docblock line="46">
          <description/>
          <long-description/>
          <tag line="46" name="return" description="the media gallery size for the slideshow" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="Default">
        <name>get_the_images</name>
        <full_name>get_the_images</full_name>
        <docblock line="61">
          <description>Retrives the images for the slideshow</description>
          <long-description/>
          <tag line="61" name="param" description="the post id to dig in" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="61" name="return" description="$this for chainability" type="\Slideshow">
            <type by_reference="false">\Slideshow</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="107" package="Default">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="103">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="103" name="see" description="\ImagePreload::get_markup()" refers="\ImagePreload::get_markup()"/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file classes/MergedSlideshow.class.php</error>
      <error line="16" code="50010">No DocBlock was found for method __construct()</error>
      <error line="46" code="50012">No short description for method get_slideshow_dimension()</error>
    </parse_markers>
  </file>
  <file path="classes/LipsumGenerator.class.php" hash="46087bdeb88719580d3e73bd3c351375" package="Default">
    <docblock line="2">
      <description>Contains the LipsumGenerator</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>LipsumGenerator</name>
      <full_name>\LipsumGenerator</full_name>
      <docblock line="6">
        <description>Generates Lorem Ipsum text</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="17" package="classes">
        <name>FORMAT_HTML</name>
        <full_name>FORMAT_HTML</full_name>
        <value>0</value>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="const" description="int use html tag &lt;p&gt; to separate paragraphs"/>
        </docblock>
      </constant>
      <constant namespace="global" line="23" package="classes">
        <name>FORMAT_TEXT</name>
        <full_name>FORMAT_TEXT</full_name>
        <value>1</value>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="const" description="int use 2 newlines to separate paragraphs &#10;and a tab before the first word of every paragraph"/>
        </docblock>
      </constant>
      <constant namespace="global" line="29" package="classes">
        <name>FORMAT_PLAIN</name>
        <full_name>FORMAT_PLAIN</full_name>
        <value>2</value>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="const" description="int generates plain text with a &#10;newline as separation between paragraphs"/>
        </docblock>
      </constant>
      <constant namespace="global" line="34" package="classes">
        <name>FORMAT_RICH_HTML</name>
        <full_name>FORMAT_RICH_HTML</full_name>
        <value>3</value>
        <docblock line="31">
          <description/>
          <long-description/>
          <tag line="31" name="const" description="int generates html with &lt;strong&gt; &lt;em&gt; &lt;a&gt; and &lt;p&gt; tags"/>
        </docblock>
      </constant>
      <constant namespace="global" line="40" package="classes">
        <name>OPTION_NAME</name>
        <full_name>OPTION_NAME</full_name>
        <value>'lipsum_generator_config'</value>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="const" description="string the WP option name where &#10;the generator can store his config"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="51" namespace="global" package="Default">
        <name>$format</name>
        <default/>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="var" description="the format type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$number_of_paragraphs</name>
        <default/>
        <docblock line="53">
          <description/>
          <long-description/>
          <tag line="53" name="var" description="number of paragraphs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$words_per_paragraph</name>
        <default/>
        <docblock line="58">
          <description/>
          <long-description/>
          <tag line="58" name="var" description="words in a paragraph" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="66" namespace="global" package="Default">
        <name>$words_per_sentence</name>
        <default/>
        <docblock line="63">
          <description/>
          <long-description/>
          <tag line="63" name="var" description="minimum amount of words until a single word can be repeated" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$beginning</name>
        <default/>
        <docblock line="68">
          <description/>
          <long-description/>
          <tag line="68" name="var" description="all generated texts will start with thouse words (ex. 'Lorem Ipsum')" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="76" namespace="global" package="Default">
        <name>$dictionary</name>
        <default/>
        <docblock line="73">
          <description/>
          <long-description/>
          <tag line="73" name="var" description="a dictionary for the current generator" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="81" namespace="global" package="Default">
        <name>$min_repeat_count</name>
        <default/>
        <docblock line="78">
          <description/>
          <long-description/>
          <tag line="78" name="var" description="the minimum amount of words until a single word can be repeated" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="86" namespace="global" package="Default">
        <name>$rich_html_config</name>
        <default/>
        <docblock line="83">
          <description/>
          <long-description/>
          <tag line="83" name="var" description="config for rich html generator" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="global" package="Default">
        <name>$seed</name>
        <default/>
        <docblock line="88">
          <description/>
          <long-description/>
          <tag line="88" name="var" description="a seed for random generator" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="96" namespace="global" package="Default">
        <name>$render</name>
        <default/>
        <docblock line="93">
          <description/>
          <long-description/>
          <tag line="93" name="var" description="the rendered text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$gaussian_math</name>
        <default/>
        <docblock line="98">
          <description/>
          <long-description/>
          <tag line="98" name="var" description="some math utils" type="\GaussianMath">
            <type by_reference="false">\GaussianMath</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="105">
          <description>Look for a config stored in the db
If it doesn't exist it will load the default one</description>
          <long-description/>
          <tag line="105" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="classes">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="118">
          <description>Initializes the current object with default settings</description>
          <long-description/>
          <tag line="118" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="classes">
        <name>set_format</name>
        <full_name>set_format</full_name>
        <docblock line="134">
          <description>Set the format for the current object
use only self::FORMAT_* constants</description>
          <long-description/>
          <tag line="134" name="see" description="\self::FORMAT_RICH_HTML" refers="\self::FORMAT_RICH_HTML"/>
          <tag line="134" name="see" description="\self::FORMAT_HTML" refers="\self::FORMAT_HTML"/>
          <tag line="134" name="see" description="\self::FORMAT_TEXT" refers="\self::FORMAT_TEXT"/>
          <tag line="134" name="see" description="\self::FORMAT_PLAIN" refers="\self::FORMAT_PLAIN"/>
          <tag line="134" name="param" description="the format" type="int" variable="$format">
            <type by_reference="false">int</type>
          </tag>
          <tag line="134" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$format</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="classes">
        <name>set_number_of_paragraphs</name>
        <full_name>set_number_of_paragraphs</full_name>
        <docblock line="160">
          <description>Sets the number of paragraphs for the current object</description>
          <long-description/>
          <tag line="160" name="param" description="the number" type="int" variable="$number_of_paragraphs">
            <type by_reference="false">int</type>
          </tag>
          <tag line="160" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$number_of_paragraphs</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="174" package="classes">
        <name>set_words_per_paragraph</name>
        <full_name>set_words_per_paragraph</full_name>
        <docblock line="170">
          <description>Sets how many words a paragraph is made by.</description>
          <long-description/>
          <tag line="170" name="param" description="the number of words" type="int" variable="$words_per_paragraph">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$words_per_paragraph</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="184" package="classes">
        <name>set_words_per_sentence</name>
        <full_name>set_words_per_sentence</full_name>
        <docblock line="179">
          <description>Sets how many words a sentence is made by</description>
          <long-description/>
          <tag line="179" name="param" description="number of words" type="int" variable="$words_per_sentence">
            <type by_reference="false">int</type>
          </tag>
          <tag line="179" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$words_per_sentence</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="195" package="classes">
        <name>set_begins_with</name>
        <full_name>set_begins_with</full_name>
        <docblock line="189">
          <description>Sets the first n words of the generated text.</description>
          <long-description>&lt;p&gt;Usually they are 'Lorem ipsum'.&lt;/p&gt;</long-description>
          <tag line="189" name="param" description="list of first n words" type="array" variable="$beginning">
            <type by_reference="false">array</type>
          </tag>
          <tag line="189" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$beginning</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="classes">
        <name>set_dictionary</name>
        <full_name>set_dictionary</full_name>
        <docblock line="200">
          <description>Sets the dictionary for the current generator</description>
          <long-description/>
          <tag line="200" name="param" description="the dictionary" type="\GeneratorDictionary" variable="$dictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
          <tag line="200" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$dictionary</name>
          <default/>
          <type>\GeneratorDictionary</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="classes">
        <name>set_math</name>
        <full_name>set_math</full_name>
        <docblock line="210">
          <description>Sets the mathematical object used for count words and punctuage distribution</description>
          <long-description/>
          <tag line="210" name="param" description="" type="\GaussianMath" variable="$math">
            <type by_reference="false">\GaussianMath</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$math</name>
          <default/>
          <type>\GaussianMath</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="224" package="classes">
        <name>set_min_repeat_count</name>
        <full_name>set_min_repeat_count</full_name>
        <docblock line="219">
          <description>Sets the minimum amount of words until a single word can be repeated</description>
          <long-description/>
          <tag line="219" name="param" description="the number of words withour repetitions" type="\" variable="$min_repeat_count"/>
          <tag line="219" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$min_repeat_count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="234" package="classes">
        <name>get_words</name>
        <full_name>get_words</full_name>
        <docblock line="229">
          <description>Retrieves an array of random words</description>
          <long-description/>
          <tag line="229" name="return" description="a list of random words" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="229" name="param" description="int the number of words to ber retrieved" type="\" variable="$count"/>
        </docblock>
        <argument line="234">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="259" package="classes">
        <name>gaussian_sentence</name>
        <full_name>gaussian_sentence</full_name>
        <docblock line="251">
          <description>Returns a number on a gaussian distribution based
on the average word length of an english sentence.</description>
          <long-description>&lt;p&gt;Statistics Source:
    http://hearle.nahoo.net/Academic/Maths/Sentence.html
    Average: 24.46
    Standard Deviation: 5.08&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="268" package="classes">
        <name>get_paragraph</name>
        <full_name>get_paragraph</full_name>
        <docblock line="265">
          <description>Builds a single paragraph</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="classes">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="298">
          <description>Renders the current object according to the current format</description>
          <long-description/>
          <tag line="298" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="332" package="classes">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="329">
          <description>Magic method called when the current object is casted to string</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="341" package="classes">
        <name>render_plain</name>
        <full_name>render_plain</full_name>
        <docblock line="336">
          <description>Generates and renders in plain forma</description>
          <long-description/>
          <tag line="336" name="see" description="\LipsumGenerator::FORMAT_PLAIN" refers="\LipsumGenerator::FORMAT_PLAIN"/>
          <tag line="336" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="368" package="classes">
        <name>render_text</name>
        <full_name>render_text</full_name>
        <docblock line="363">
          <description>Generates and render in text format</description>
          <long-description/>
          <tag line="363" name="see" description="\LipsumGenerator::FORMAT_TEXT" refers="\LipsumGenerator::FORMAT_TEXT"/>
          <tag line="363" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="395" package="classes">
        <name>render_html</name>
        <full_name>render_html</full_name>
        <docblock line="390">
          <description>Generates and renders in html format</description>
          <long-description/>
          <tag line="390" name="see" description="\LipsumGenerator::FORMAT_HTML" refers="\LipsumGenerator::FORMAT_HTML"/>
          <tag line="390" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="443" package="classes">
        <name>set_rich_html_config</name>
        <full_name>set_rich_html_config</full_name>
        <docblock line="420">
          <description>Sets the configuration for the rich html generation</description>
          <long-description/>
          <tag line="420" name="param" description="an array of parameters:&#10;&lt;code&gt;&#10;$default = array(&#10;'strong'&#9;=&gt;&#9;array(&#10;'percent'&#9;=&gt;&#9;2,&#10;'max_words'&#9;=&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;''&#10;),&#10;'a'&#9;&#9;&#9;=&gt;&#9;array(&#10;'percent' &#9;=&gt;&#9;5,&#10;'max_words' =&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;'href=&quot;#&quot;'&#10;),&#10;'em'&#9;&#9;=&gt;&#9;array(&#10;'percent'&#9;=&gt;&#9;10,&#10;'max_words'&#9;=&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;''&#10;)&#10;);&#10;&lt;code&gt;" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="443">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="471" package="classes">
        <name>render_rich_html</name>
        <full_name>render_rich_html</full_name>
        <docblock line="466">
          <description>Generates and renders in rich html format</description>
          <long-description/>
          <tag line="466" name="see" description="\LipsumGenerator::FORMAT_RICH_HTML" refers="\LipsumGenerator::FORMAT_RICH_HTML"/>
          <tag line="466" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="562" package="classes">
        <name>force_beginning</name>
        <full_name>force_beginning</full_name>
        <docblock line="557">
          <description>Forces the given sentences (paragraph)
to start with $this-&gt;beginning list of words.</description>
          <long-description/>
          <tag line="557" name="param" description="the list of sentences" type="array" variable="$sentences">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$sentences</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="576" package="classes">
        <name>punctuate</name>
        <full_name>punctuate</full_name>
        <docblock line="572">
          <description>Inserts commas and periods in the given array of words.</description>
          <long-description/>
          <tag line="572" name="param" description="the list of sentence" type="array" variable="$sentence">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="576">
          <name>$sentence</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="601" package="classes">
        <name>numberOfCommas</name>
        <full_name>numberOfCommas</full_name>
        <docblock line="595">
          <description>Determines the number of commas for a
sentence of the given length.</description>
          <long-description>&lt;p&gt;Average and
standard deviation are determined superficially&lt;/p&gt;</long-description>
          <tag line="595" name="param" description="int a medium amount of words between two commas" type="\" variable="$len"/>
        </docblock>
        <argument line="601">
          <name>$len</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="612" package="classes">
        <name>get_config</name>
        <full_name>get_config</full_name>
        <docblock line="608">
          <description>Retrieves the config set for this generator</description>
          <long-description/>
          <tag line="608" name="return" description="the list of settings" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="628" package="classes">
        <name>set_config</name>
        <full_name>set_config</full_name>
        <docblock line="623">
          <description>Bulk configure the generator.</description>
          <long-description/>
          <tag line="623" name="param" description="the list of settings pairs name=&gt;value" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="623" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="628">
          <name>$config</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="643" package="classes">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="639">
          <description>Store config into WP options system</description>
          <long-description/>
          <tag line="639" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="652" package="classes">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="648">
          <description>Retrives config from WP options system</description>
          <long-description/>
          <tag line="648" name="return" description="false if config is not present" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="663" package="classes">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="659">
          <description>Removes current config from WP options system</description>
          <long-description/>
          <tag line="659" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="673" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="668">
          <description>Hooks to 'the_content' hook.</description>
          <long-description>&lt;p&gt;If the page has no content it will fill it with the generated text.&lt;/p&gt;</long-description>
          <tag line="668" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="684" package="classes">
        <name>the_content</name>
        <full_name>the_content</full_name>
        <docblock line="679">
          <description>Hook for the_content:
if there is no content it appends the generated</description>
          <long-description/>
          <tag line="679" name="param" description="string the content" type="\" variable="$content"/>
        </docblock>
        <argument line="684">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ThemeHelpers.class.php" hash="3cf938147934dcb70e2e0bb4086b6155" package="Default">
    <docblock line="2">
      <description>stores the definition for class ThemeHelpers</description>
      <long-description/>
    </docblock>
    <constant namespace="global" line="124" package="Default">
      <name>ICL_DONT_LOAD_LANGUAGES_JS</name>
      <full_name>\ICL_DONT_LOAD_LANGUAGES_JS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="125" package="Default">
      <name>ICL_DONT_LOAD_LANGUAGE_SELECTOR_CSS</name>
      <full_name>\ICL_DONT_LOAD_LANGUAGE_SELECTOR_CSS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="126" package="Default">
      <name>ICL_DONT_LOAD_NAVIGATION_CSS</name>
      <full_name>\ICL_DONT_LOAD_NAVIGATION_CSS</full_name>
      <value>true</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="27" package="classes">
      <extends/>
      <name>ThemeHelpers</name>
      <full_name>\ThemeHelpers</full_name>
      <docblock line="5">
        <description>Stores some static methods that may be useful for html management</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.5"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="31" package="classes">
        <name>textdomain</name>
        <full_name>textdomain</full_name>
        <value>'theme'</value>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Stores the name of the gettext domain for this theme" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="37" namespace="global" package="Default">
        <name>$assets</name>
        <default>array('js' =&gt; array(), 'css' =&gt; array())</default>
        <docblock line="33">
          <description>Stores the assets to be loaded</description>
          <long-description/>
          <tag line="33" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="45" package="classes">
        <name>body_class</name>
        <full_name>body_class</full_name>
        <docblock line="39">
          <description>This filter callback adds some usefull classes to the body
Remember to call body_class() in the theme!</description>
          <long-description/>
          <tag line="39" name="param" description="the classes already added by wordpress or some other plugin" type="array" variable="$classes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$classes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="78" package="classes">
        <name>load_js</name>
        <full_name>load_js</full_name>
        <docblock line="61">
          <description>Enqueue a previously registered JavaScript in WordPress init action</description>
          <long-description>&lt;p&gt;It can be called after wp_head(). In this case the asset will be
loaded on the next page view. This is beacuse the assets list
will be stored in a transient. @see AutomaticAssetsManager::enable_automatic_manager()&lt;/p&gt;</long-description>
          <tag line="61" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_script&#10;according to this we have to:&#10;Use the wp_enqueue_scripts action to call this function,&#10;or admin_enqueue_scripts to call it on the admin side.&#10;Calling it outside of an action can lead to problems." refers="\@link"/>
          <tag line="61" name="see" description="http://core.trac.wordpress.org/ticket/11526 #11526 for details." refers="\@link"/>
          <tag line="61" name="param" description="the registered handle for the javascript" type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="106" package="classes">
        <name>load_css</name>
        <full_name>load_css</full_name>
        <docblock line="91">
          <description>Enqueue a previously registered StyleSheet in WordPress init action</description>
          <long-description>&lt;p&gt;It can be called after wp_head(). In this case the asset will be
loaded on the next page view. This is beacuse the assets list
will be stored in a transient. @see AutomaticAssetsManager::enable_automatic_manager()&lt;/p&gt;</long-description>
          <tag line="91" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_style&#10;according to this we have to:&#10;Use the wp_enqueue_scripts action to call this function.&#10;Calling it outside of an action can lead to problems." refers="\@link"/>
          <tag line="91" name="see" description="http://core.trac.wordpress.org/ticket/17916 #17916 for details." refers="\@link"/>
          <tag line="91" name="param" description="the registered handle for the stylesheet." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="106">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="123" package="classes">
        <name>remove_wpml_assets</name>
        <full_name>remove_wpml_assets</full_name>
        <docblock line="119">
          <description>Remove some useless css and js by wpml</description>
          <long-description/>
          <tag line="119" name="see" description="http://wpml.org/documentation/support/wpml-coding-api/" refers="\@link"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="137" package="classes">
        <name>merge_images</name>
        <full_name>merge_images</full_name>
        <docblock line="129">
          <description>Merges some images to a single big one to save some http connections.</description>
          <long-description>&lt;p&gt;Stores it in a cache folder.
To disable the cache system set IMAGE_MERGE_FORCE_REFRESH constant to true&lt;/p&gt;</long-description>
          <tag line="129" name="param" description="an array of images: for every element $image['path'] and $image['url'] have to be defined" type="array" variable="$images">
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="param" description="timthumb config, default 'w'=&gt;'700', 'h'=&gt;'370', 'q'=&gt;'50', 'r'=&gt;false" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="return" description="the url for the big image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$images</name>
          <default/>
          <type/>
        </argument>
        <argument line="137">
          <name>$config</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="221" package="classes">
        <name>get_the_content_after_more</name>
        <full_name>get_the_content_after_more</full_name>
        <docblock line="214">
          <description>Returns the content after the more tag for the given post</description>
          <long-description/>
          <tag line="214" name="param" description="Optional. Content for when there is more text" type="string" variable="$more_link_text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="param" description="Post ID or post object." type="int|object" variable="$post_id">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="214" name="param" description="true if you want the_content filter applyed on the return value" type="bool" variable="$apply_filters">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="214" name="param" description="if true the function will remove the #more span added by WordPress" type="bool" variable="$remove_more">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$more_link_text</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$apply_filters</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="221">
          <name>$remove_more</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="253" package="classes">
        <name>get_the_content_before_more</name>
        <full_name>get_the_content_before_more</full_name>
        <docblock line="246">
          <description>Prints the content before the more tag for the given post
If the tag is not present it will print the entire body</description>
          <long-description/>
          <tag line="246" name="param" description="Optional. Content for when there is more text" type="string" variable="$more_link_text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="param" description="Post ID or post object." type="int|object" variable="$post_id">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="246" name="param" description="true if you want the_content filter applyed on the return value" type="bool" variable="$apply_filters">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$more_link_text</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="253">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="253">
          <name>$apply_filters</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="283" package="classes">
        <name>has_more_tag</name>
        <full_name>has_more_tag</full_name>
        <docblock line="279">
          <description>Checks if the current post has the &lt;!--more--&gt; tag</description>
          <long-description/>
          <tag line="279" name="param" description="the post object" type="object" variable="$posts">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="293" package="classes">
        <name>has_shortcode</name>
        <full_name>has_shortcode</full_name>
        <docblock line="288">
          <description>Checks if the post content has the give shortcode</description>
          <long-description/>
          <tag line="288" name="param" description="the post object" type="object" variable="$posts">
            <type by_reference="false">object</type>
          </tag>
          <tag line="288" name="return" description="true if the shortcode is used at least once in the body" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$code</name>
          <default/>
          <type/>
        </argument>
        <argument line="293">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="302" package="classes">
        <name>doctype</name>
        <full_name>doctype</full_name>
        <docblock line="298">
          <description>Retrieves the correct DOCTYPE</description>
          <long-description/>
          <tag line="298" name="param" description="the type, default is html5" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$type</name>
          <default>'html5'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="328" package="classes">
        <name>anchor</name>
        <full_name>anchor</full_name>
        <docblock line="321">
          <description>Get the markup for an &lt;a&gt; tag</description>
          <long-description/>
          <tag line="321" name="return" description="the markup for an html &lt;a&gt; tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="param" description="the url to be pointed" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="param" description="the text" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="321" name="param" description="some html attributes in key=&gt;value pairs or a plain string" type="array|string" variable="$parms">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$href</name>
          <default/>
          <type/>
        </argument>
        <argument line="328">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="328">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="343" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="338">
          <description>Get the markup for a &lt;img&gt; tag</description>
          <long-description/>
          <tag line="338" name="param" description="the image source" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="param" description="additional parameters" type="array|string" variable="$parms">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="343">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="358" package="classes">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="352">
          <description>Retrieves a &lt;script&gt; tag</description>
          <long-description/>
          <tag line="352" name="deprecated" description=""/>
          <tag line="352" name="param" description="the inner content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="352" name="param" description="some parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="358">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="358">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="375" package="classes">
        <name>array_to_html_attributes</name>
        <full_name>array_to_html_attributes</full_name>
        <docblock line="368">
          <description>Generates HTML Node Attribures</description>
          <long-description/>
          <tag line="368" name="param" description="" type="string" variable="$glue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="param" description="" type="array|string" variable="$pieces">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="368" name="author" description="http://blog.teknober.com/2011/04/13/php-array-to-html-attributes/"/>
        </docblock>
        <argument line="375">
          <name>$glue</name>
          <default/>
          <type/>
        </argument>
        <argument line="375">
          <name>$pieces</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="394" package="classes">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="390">
          <description>Prepare the $parms to be printed as html attributes</description>
          <long-description/>
          <tag line="390" name="param" description="list of html attributes" type="string|array" variable="$parms">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="408" package="classes">
        <name>build_url</name>
        <full_name>build_url</full_name>
        <docblock line="402">
          <description>Retrieves the url from array $url_arr
If defined use http_build_url, else custom code</description>
          <long-description/>
          <tag line="402" name="param" description="the array of attributes" type="array" variable="$url_arr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="402" name="see" description="\http://php.net/manual/en/function.parse-url.php" refers="\http://php.net/manual/en/function.parse-url.php"/>
        </docblock>
        <argument line="408">
          <name>$url_arr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="428" package="classes">
        <name>heading</name>
        <full_name>heading</full_name>
        <docblock line="425">
          <description>Retrives the markup for the default seo heading (h1+span)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="445" package="classes">
        <name>get_the_seo_title</name>
        <full_name>get_the_seo_title</full_name>
        <docblock line="438">
          <description>Returns the title of the page.</description>
          <long-description>&lt;p&gt;Choose in order from:
FB SEO Plugin
YOAST Seo TODO
Blog Name&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="462" package="classes">
        <name>get_the_seo_description</name>
        <full_name>get_the_seo_description</full_name>
        <docblock line="455">
          <description>Returns the description of the page
Choose in order from:
FB SEO Plugin
YOAST Seo TODO
Blog Name</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="480" package="classes">
        <name>get_the_seo_h1</name>
        <full_name>get_the_seo_h1</full_name>
        <docblock line="473">
          <description>Returns the H1 for this page
Choose in order from:
FB SEO Plugin
Post Title</description>
          <long-description/>
          <tag line="473" name="param" description="int|object the post" type="\" variable="$post"/>
        </docblock>
        <argument line="480">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="508" package="classes">
        <name>get_the_seo_span</name>
        <full_name>get_the_seo_span</full_name>
        <docblock line="501">
          <description>Returns the SPAN for this page
Choose in order from:
FB SEO Plugin
Post Title</description>
          <long-description/>
          <tag line="501" name="param" description="int|object the post" type="\" variable="$post"/>
        </docblock>
        <argument line="508">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="532" package="classes">
        <name>add_this</name>
        <full_name>add_this</full_name>
        <docblock line="529">
          <description>Retrieves the markup for the Add This widget</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="557" package="classes">
        <name>hide_admin_bar</name>
        <full_name>hide_admin_bar</full_name>
        <docblock line="554">
          <description>Hides the wp admin bar</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="279" code="50014">Name of argument $post does not match with the DocBlock's name $posts in has_more_tag()</error>
      <notice line="279" code="50013">Parameter $posts could not be found in has_more_tag()</notice>
      <error line="288" code="50014">Name of argument $code does not match with the DocBlock's name $posts in has_shortcode()</error>
      <error line="288" code="50015">Argument $post is missing from the Docblock of has_shortcode()</error>
      <notice line="288" code="50013">Parameter $posts could not be found in has_shortcode()</notice>
    </parse_markers>
  </file>
  <file path="classes/SubstitutionTemplate.class.php" hash="01981543e0f26f4f5300a909a44531a8" package="Default">
    <docblock line="2">
      <description>Stores the definition for class SubstitutionTemplate</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>SubstitutionTemplate</name>
      <full_name>\SubstitutionTemplate</full_name>
      <docblock line="6">
        <description>Manages a string substitution set</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$static_markup</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="Stores some static html" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Initializes the current object with default parameters</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="classes">
        <name>set_tpl</name>
        <full_name>set_tpl</full_name>
        <docblock line="31">
          <description>Sets the substitutions template</description>
          <long-description/>
          <tag line="31" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="classes">
        <name>set_markup</name>
        <full_name>set_markup</full_name>
        <docblock line="40">
          <description>Set the static markup; ie: prev\next\loading divs</description>
          <long-description/>
          <tag line="40" name="param" description="the searches to be substituted" type="string|array" variable="$key">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="param" description="html markups" type="string|array" variable="$markup">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="return" description="$this for chainability" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
          <tag line="40" name="throws" description="if $key and $markup have different number of elements" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$markup</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="classes">
        <name>set_multi_markup</name>
        <full_name>set_multi_markup</full_name>
        <docblock line="67">
          <description>Bulk set the key:markup pairs</description>
          <long-description/>
          <tag line="67" name="param" description="an associative array of keys and markups" type="array" variable="$ass_array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$ass_array</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="classes">
        <name>replace_markup</name>
        <full_name>replace_markup</full_name>
        <docblock line="77">
          <description>Replaces the markup in $this-&gt;tpl %tag%s with the one
in the corresponding value of $this-&gt;static_markup[tag].</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ClassAutoloader.class.php" hash="6b9bbe8909de070b0fe91bcf1a4709e8" package="Default">
    <docblock line="2">
      <description>Contains the ClassAutoloader class definitions</description>
      <long-description/>
    </docblock>
    <include line="78" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="20" package="classes">
      <extends/>
      <name>ClassAutoloader</name>
      <full_name>\ClassAutoloader</full_name>
      <docblock line="6">
        <description>Autoload needed classes</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="21" package="classes">
        <name>WORDPRESS_THEME_UTILS_CLASS_DIR</name>
        <full_name>WORDPRESS_THEME_UTILS_CLASS_DIR</full_name>
        <value>'classes'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$loading_template</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="stores the path the system will scan for files" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Initializes the autoloader</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="classes">
        <name>add_loading_template</name>
        <full_name>add_loading_template</full_name>
        <docblock line="48">
          <description>Set the loading template</description>
          <long-description/>
          <tag line="48" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="$this for chainability" type="\ClassAutoloader">
            <type by_reference="false">\ClassAutoloader</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>register_autoload</name>
        <full_name>register_autoload</full_name>
        <docblock line="58">
          <description>Register the autoload function to PHP</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="70" package="classes">
        <name>loader</name>
        <full_name>loader</full_name>
        <docblock line="65">
          <description>Autoload needed classes</description>
          <long-description/>
          <tag line="65" name="param" description="the name of the class" type="String" variable="$className">
            <type by_reference="false">String</type>
          </tag>
          <tag line="65" name="return" description="$this for chainability" type="\ClassAutoloader">
            <type by_reference="false">\ClassAutoloader</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/RemoveSpacesWalkerNavMenu.class.php" hash="670de7eb6aeb3147e07191e2dfcf7bd7" package="Default">
    <docblock line="2">
      <description>contains RemoveSpacesWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>RemoveSpacesWalkerNavMenu</name>
      <full_name>\RemoveSpacesWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Remove spaces and newlines from the current menu.</description>
        <long-description>&lt;p&gt;This is very useful if you want to style a menu with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;display: inline-block;
text-align: center;&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$replacements</name>
        <default>array("\n" =&gt; '', "\t" =&gt; '')</default>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="key valuse pair of replacements" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>start_lvl</name>
        <full_name>start_lvl</full_name>
        <docblock line="21">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="21" name="see" description="\Walker_Nav_Menu::start_lvl()" refers="\Walker_Nav_Menu::start_lvl()"/>
          <tag line="21" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="param" description="Depth of page. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>end_lvl</name>
        <full_name>end_lvl</full_name>
        <docblock line="32">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="32" name="see" description="\Walker_Nav_Menu::end_lvl()" refers="\Walker_Nav_Menu::end_lvl()"/>
          <tag line="32" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="Depth of page. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="classes">
        <name>end_el</name>
        <full_name>end_el</full_name>
        <docblock line="43">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="43" name="see" description="\Walker_Nav_Menu::end_el()" refers="\Walker_Nav_Menu::end_el()"/>
          <tag line="43" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="Page data object. Not used." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="43" name="param" description="Depth of page. Not Used." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="55">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="55" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="55" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="55" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="55" name="param" description="other arguments" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="73" package="classes">
        <name>remove_unwanted_chars</name>
        <full_name>remove_unwanted_chars</full_name>
        <docblock line="68">
          <description>Removew the unwanted charactes from the given string</description>
          <long-description/>
          <tag line="68" name="param" description="the string to be escaped" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="the escaped string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/SpecialOffersSnippet.class.php" hash="4a36266fbac05afd5762bb532c2e1b29" package="Default">
    <docblock line="2">
      <description>containst SpecialOffersSnippet class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="26" package="classes">
      <extends/>
      <name>SpecialOffersSnippet</name>
      <full_name>\SpecialOffersSnippet</full_name>
      <docblock line="6">
        <description>Manages the integration of the special offers snippet</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.4"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="27" package="classes">
        <name>baseurl</name>
        <full_name>baseurl</full_name>
        <value>'http://hotelsitecontents.fastbooking.com/router.php'</value>
      </constant>
      <constant namespace="global" line="28" package="classes">
        <name>default_divdest</name>
        <full_name>default_divdest</full_name>
        <value>'FB_so'</value>
      </constant>
      <constant namespace="global" line="29" package="classes">
        <name>com_js</name>
        <full_name>com_js</full_name>
        <value>'http://hotelsitecontents.fastbooking.com/js/fb.js'</value>
      </constant>
      <constant namespace="global" line="30" package="classes">
        <name>pop_js</name>
        <full_name>pop_js</full_name>
        <value>'http://hotelsitecontents.fastbooking.com/js/pop.js'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$params</name>
        <default/>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="var" description="stores the list of parameter to be passed on GET" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="40" namespace="global" package="Default">
        <name>$url</name>
        <default/>
        <docblock line="37">
          <description/>
          <long-description/>
          <tag line="37" name="var" description="stores the url of the snippet" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$index</name>
        <default/>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="the index of snippet occurency" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="50" namespace="global" package="Default">
        <name>$templates</name>
        <default/>
        <docblock line="47">
          <description/>
          <long-description/>
          <tag line="47" name="var" description="the template to be substituted" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="57" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="53">
          <description>Initializes the snippet</description>
          <long-description/>
          <tag line="53" name="param" description="the hotel hid" type="string" variable="$hid">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$hid</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="100" package="classes">
        <name>calculate_url</name>
        <full_name>calculate_url</full_name>
        <docblock line="96">
          <description>Builds the url for the remote iframe</description>
          <long-description/>
          <tag line="96" name="param" description="additional query params for the iframe" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="115" package="classes">
        <name>build_url</name>
        <full_name>build_url</full_name>
        <docblock line="109">
          <description>Retrieves the url from array $url_arr
If defined use http_build_url, else custom code</description>
          <long-description/>
          <tag line="109" name="param" description="the array of attributes" type="array" variable="$url_arr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="109" name="see" description="\http://php.net/manual/en/function.parse-url.php" refers="\http://php.net/manual/en/function.parse-url.php"/>
        </docblock>
        <argument line="115">
          <name>$url_arr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="138" package="classes">
        <name>add_param</name>
        <full_name>add_param</full_name>
        <docblock line="132">
          <description>Adds a new parameter or update if exists</description>
          <long-description/>
          <tag line="132" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="132" name="param" description="" type="int|string" variable="$value">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="132" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="138">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="147" package="classes">
        <name>enable_cycle</name>
        <full_name>enable_cycle</full_name>
        <docblock line="143">
          <description>Enables the offers to cycle</description>
          <long-description/>
          <tag line="143" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="157" package="classes">
        <name>disable_cycle</name>
        <full_name>disable_cycle</full_name>
        <docblock line="153">
          <description>Disables the offers to cycle</description>
          <long-description/>
          <tag line="153" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="166" package="classes">
        <name>enable_fancybox</name>
        <full_name>enable_fancybox</full_name>
        <docblock line="162">
          <description>Uses Fancybox instead of the default popup system</description>
          <long-description/>
          <tag line="162" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="183" package="classes">
        <name>show_controls</name>
        <full_name>show_controls</full_name>
        <docblock line="178">
          <description>Adds 3 controls: nex pause\play and prev.</description>
          <long-description/>
          <tag line="178" name="param" description="" type="string" variable="$markup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$markup</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="classes">
        <name>get_param</name>
        <full_name>get_param</full_name>
        <docblock line="201">
          <description>Retrives the $key param for this snippet</description>
          <long-description/>
          <tag line="201" name="param" description="name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="214" package="classes">
        <name>del_param</name>
        <full_name>del_param</full_name>
        <docblock line="209">
          <description>Removes a param</description>
          <long-description/>
          <tag line="209" name="param" description="the param to be deleted" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="classes">
        <name>get_iframe_src</name>
        <full_name>get_iframe_src</full_name>
        <docblock line="219">
          <description>Retrieves the src of the iframe</description>
          <long-description/>
          <tag line="219" name="return" description="the url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="233" package="classes">
        <name>get_divdest</name>
        <full_name>get_divdest</full_name>
        <docblock line="227">
          <description>Calculates the divdest for the current iframe integration
First time it will be self::default_divdest
For the other an "_&lt;number&gt;" will be appended
If the parameter divdest is customized it will return that one</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="250" package="classes">
        <name>get_com_js</name>
        <full_name>get_com_js</full_name>
        <docblock line="244">
          <description>Retrieves the script tag for com.js</description>
          <long-description>&lt;p&gt;Checks if is the first implementation, otherwhise it will return an empty string&lt;/p&gt;</long-description>
          <tag line="244" name="return" description="html script tag to com.js" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="267" package="classes">
        <name>get_promo_js</name>
        <full_name>get_promo_js</full_name>
        <docblock line="263">
          <description>Retrieves the script for initialize the snippet system</description>
          <long-description/>
          <tag line="263" name="return" description="html script tag" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="286" package="classes">
        <name>get_pop_js</name>
        <full_name>get_pop_js</full_name>
        <docblock line="282">
          <description>Gets the pop.js for the 'ugly pop-up' feature</description>
          <long-description/>
          <tag line="282" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="302" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="299">
          <description>Retrieves the markup for the offers</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="318" package="classes">
        <name>the_markup</name>
        <full_name>the_markup</full_name>
        <docblock line="315">
          <description>Prints the markup for the offers</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="325" package="classes">
        <name>the_iframe_src</name>
        <full_name>the_iframe_src</full_name>
        <docblock line="322">
          <description>Prints the iframe src</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/HashAnchorWalkerNavMenu.class.php" hash="112384bee58c2816e419d3401f8dd9b1" package="Default">
    <docblock line="2">
      <description>stores the HashAnchorWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>HashAnchorWalkerNavMenu</name>
      <full_name>\HashAnchorWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Menu Walker to have the la tocke of the url as hash
ex: http://www.fastbooking.net/clients/#africa</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="13">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="13" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="13" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="13" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="13" name="param" description="" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/MinigalleryBigImageWithThumbs.class.php" hash="57bc056ad2faf12a4ad6eb2f47ebc1c9" package="Default">
    <docblock line="2">
      <description>Stores the MinigalleryBigImageWithThumbs class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\GalleryHelper</extends>
      <name>MinigalleryBigImageWithThumbs</name>
      <full_name>\MinigalleryBigImageWithThumbs</full_name>
      <docblock line="5">
        <description>Manages the markup for the minigallery
with a big image and some small thumbs</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.0"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$sizes</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="stores the sizes of the images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$thumb_list_config</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="configuration for the thumbnails list" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Initializes the Minigallery with the default config</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="classes">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="61">
          <description>Set the html template for this minigallery</description>
          <long-description/>
          <tag line="61" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="classes">
        <name>set_big_size</name>
        <full_name>set_big_size</full_name>
        <docblock line="71">
          <description>Sets the sizes of the big image</description>
          <long-description/>
          <tag line="71" name="param" description="" type="int" variable="$widht">
            <type by_reference="false">int</type>
          </tag>
          <tag line="71" name="param" description="" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="71" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="classes">
        <name>set_small_size</name>
        <full_name>set_small_size</full_name>
        <docblock line="84">
          <description>Sets the sizes of the thumbs</description>
          <long-description/>
          <tag line="84" name="param" description="" type="int" variable="$widht">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="param" description="" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="classes">
        <name>set_thumbs_list_config</name>
        <full_name>set_thumbs_list_config</full_name>
        <docblock line="97">
          <description>Sets the config for the thumbnails list</description>
          <long-description/>
          <tag line="97" name="param" description="the config array" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="111" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="107">
          <description>Loads the needed assets</description>
          <long-description/>
          <tag line="107" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="117">
          <description>Retrieves the markup for this minigallery</description>
          <long-description/>
          <tag line="117" name="return" description="markup for the minigallery" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="71" code="50014">Name of argument $name does not match with the DocBlock's name $widht in set_big_size()</error>
      <notice line="71" code="50013">Parameter $widht could not be found in set_big_size()</notice>
      <notice line="71" code="50013">Parameter $height could not be found in set_big_size()</notice>
      <error line="84" code="50014">Name of argument $name does not match with the DocBlock's name $widht in set_small_size()</error>
      <notice line="84" code="50013">Parameter $widht could not be found in set_small_size()</notice>
      <notice line="84" code="50013">Parameter $height could not be found in set_small_size()</notice>
    </parse_markers>
  </file>
  <file path="classes/GeneratorDictionary.class.php" hash="ddd7a7638d52332c4c8b37038e2660a5" package="Default">
    <docblock line="2">
      <description>Stores GeneratorDictionary class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends/>
      <name>GeneratorDictionary</name>
      <full_name>\GeneratorDictionary</full_name>
      <docblock line="6">
        <description>Maintans a set of words for a sentences generator</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
        <tag line="6" name="todo" description="maintain an ordinate array so that&#10;insertion and deletion will be more efficent"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$words</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="a list of usable words" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Default">
        <name>$count</name>
        <default/>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the number of usable words" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="25">
          <description>Initializes the dictionary</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="classes">
        <name>add_word</name>
        <full_name>add_word</full_name>
        <docblock line="35">
          <description>Adds the given $word to the current set</description>
          <long-description/>
          <tag line="35" name="param" description="the word" type="string" variable="$word">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="$this for chainability" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="classes">
        <name>remove_word</name>
        <full_name>remove_word</full_name>
        <docblock line="46">
          <description>Removes the given words from the current set</description>
          <long-description/>
          <tag line="46" name="param" description="the word" type="string" variable="$word">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="$this for chainability" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="classes">
        <name>get_all_words</name>
        <full_name>get_all_words</full_name>
        <docblock line="61">
          <description>Retrieves all the usable words of this dictionary</description>
          <long-description/>
          <tag line="61" name="return" description="full set of words" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="classes">
        <name>number_of_words</name>
        <full_name>number_of_words</full_name>
        <docblock line="69">
          <description>Retrieves the number of usable words in this dictionary</description>
          <long-description/>
          <tag line="69" name="return" description="number of words in the current dictionary" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/MinigalleryThumbsLinkToBig.class.php" hash="db900d0c9631bfb7d0788dc8ff93a54b" package="Default">
    <docblock line="2">
      <description>storest MinigalleryThumbsLinkToBig class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends>\GalleryHelper</extends>
      <name>MinigalleryThumbsLinkToBig</name>
      <full_name>\MinigalleryThumbsLinkToBig</full_name>
      <docblock line="6">
        <description>Generates a list of thumbnail each one is an anchor
to the image with 'full' media dimensions.</description>
        <long-description>&lt;p&gt;By default loads FancyBox so to have an eye candy popup effect.&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes the minigallery</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="27">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="27" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/EscapeRoute.class.php" hash="bfd6d4b2966e022f7af1e7273206f4d5" package="Default">
    <docblock line="2">
      <description>stores the EscapeRoute class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>EscapeRoute</name>
      <full_name>\EscapeRoute</full_name>
      <docblock line="6">
        <description>Manages the navigation links on a 404 page</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$links</name>
        <default>array()</default>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the list of link to be printed in case of 404" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$templates</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="the substitution engine" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$list_separator</name>
        <default>''</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="the list separator" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Initializes the object to the default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="classes">
        <name>add_link</name>
        <full_name>add_link</full_name>
        <docblock line="64">
          <description>Adds a link</description>
          <long-description/>
          <tag line="64" name="param" description="the url to be linked" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="the inner html for the &lt;a&gt; tag" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="additional parameters for the &lt;a&gt;" type="string|array" variable="$params">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="$this for chainability" type="\EscapeRoute">
            <type by_reference="false">\EscapeRoute</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$href</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$params</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="classes">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="80">
          <description>Set the html template</description>
          <long-description/>
          <tag line="80" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="$this for chainability" type="\EscapeRoute">
            <type by_reference="false">\EscapeRoute</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>set_separator</name>
        <full_name>set_separator</full_name>
        <docblock line="90">
          <description>Set the separator for the list of anchors</description>
          <long-description/>
          <tag line="90" name="param" description="html between every &lt;a&gt;" type="string" variable="$separator">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$separator</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="103" package="classes">
        <name>render_list</name>
        <full_name>render_list</full_name>
        <docblock line="99">
          <description>Renders the list of anchors</description>
          <long-description/>
          <tag line="99" name="return" description="rendered the list of anchors" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="116">
          <description>Retrieves the markup</description>
          <long-description/>
          <tag line="116" name="returns" description="the markup"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DefaultAssetsCDN.class.php" hash="3cfccfc5c5e277a9728423177aeb63a4" package="Default">
    <docblock line="2">
      <description>Maintains the code for DefaultAssetsCDN class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="classes">
      <extends>\DefaultAssets</extends>
      <name>DefaultAssetsCDN</name>
      <full_name>\DefaultAssetsCDN</full_name>
      <docblock line="6">
        <description>Registers some assets from public available CDNs:
ajax.googleapis.com
cdnjs.cloudflare.com
cdn.jsdelivr.net</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="since" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="classes">
        <name>register_standard</name>
        <full_name>register_standard</full_name>
        <docblock line="18">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="18" name="see" description="\DefaultAssets::register_standard()" refers="\DefaultAssets::register_standard()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="58" package="classes">
        <name>register_jqueryui_themes</name>
        <full_name>register_jqueryui_themes</full_name>
        <docblock line="53">
          <description>Register some jQuery UI themes from code.jquery.com CDN</description>
          <long-description/>
          <tag line="53" name="param" description="list of theme names" type="array" variable="$themes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="return" description="$this for chainability" type="\DefaultAssetsCDN">
            <type by_reference="false">\DefaultAssetsCDN</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$themes</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="75" package="classes">
        <name>register_webfonts</name>
        <full_name>register_webfonts</full_name>
        <docblock line="70">
          <description>Registers some Google Webfonts</description>
          <long-description/>
          <tag line="70" name="param" description="list of font names" type="array" variable="$fonts">
            <type by_reference="false">array</type>
          </tag>
          <tag line="70" name="return" description="$this for chainability" type="\DefaultAssetsCDN">
            <type by_reference="false">\DefaultAssetsCDN</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$fonts</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/GaussianMath.class.php" hash="d40eca3d4873523aae51da23994d9fc2" package="Default">
    <docblock line="2">
      <description>sstores the GaussianMath class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="11" package="classes">
      <extends/>
      <name>GaussianMath</name>
      <full_name>\GaussianMath</full_name>
      <docblock line="6">
        <description>The following object is used to compute numbers with a gaussian distribution</description>
        <long-description/>
        <tag line="6" name="link" description="http://us.php.net/manual/en/function.rand.php#53784" link="http://us.php.net/manual/en/function.rand.php#53784"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="classes">
        <name>gauss</name>
        <full_name>gauss</full_name>
        <docblock line="13">
          <description>Gets a random number in a gaussian distribution</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="classes">
        <name>gauss_ms</name>
        <full_name>gauss_ms</full_name>
        <docblock line="23">
          <description>Get an ms value</description>
          <long-description/>
          <tag line="23" name="param" description="" type="double" variable="$m">
            <type by_reference="false">double</type>
          </tag>
          <tag line="23" name="param" description="" type="double" variable="$s">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$m</name>
          <default>0.0</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$s</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="classes">
        <name>random_0_1</name>
        <full_name>random_0_1</full_name>
        <docblock line="32">
          <description>Gets a random float between 0 and 1</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/RuntimeInfos.class.php" hash="2dd4c26507fd15f29614a4a772f99999" package="Default">
    <docblock line="2">
      <description>stores the RuntimeInfos class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>RuntimeInfos</name>
      <full_name>\RuntimeInfos</full_name>
      <docblock line="6">
        <description>Manages a set of info to be printed as a json generally at the endo of the page</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="38" package="classes">
        <name>TYPE_FOOTER</name>
        <full_name>TYPE_FOOTER</full_name>
        <value>1</value>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="use this as type to have a &lt;script&gt; tag in the footer" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="43" package="classes">
        <name>TYPE_AJAX</name>
        <full_name>TYPE_AJAX</full_name>
        <value>2</value>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="uset this as type to have an external js on an admin-ajax.php url" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="48" package="classes">
        <name>ajax_action</name>
        <full_name>ajax_action</full_name>
        <value>'runtime-infos'</value>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="the action parameter for the admin-ajax" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$infos</name>
        <default>array()</default>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the list of infos" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$type</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="the way we want the infos" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$id</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="id of the post these infos refer to" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>Initializes the current set of infos with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>set_standard_infos</name>
        <full_name>set_standard_infos</full_name>
        <docblock line="57">
          <description>Sets the default values:
postID, theme_url, upload_dir, home_url and ajaxurl</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="87" package="classes">
        <name>get_the_ID</name>
        <full_name>get_the_ID</full_name>
        <docblock line="84">
          <description>Get the ID for the current post</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="classes">
        <name>add_info</name>
        <full_name>add_info</full_name>
        <docblock line="92">
          <description>Adds an info to the current set</description>
          <long-description/>
          <tag line="92" name="param" description="the name of the info" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="the value of the info" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="$this for chainability" type="\RuntimeInfos">
            <type by_reference="false">\RuntimeInfos</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="classes">
        <name>set_type</name>
        <full_name>set_type</full_name>
        <docblock line="103">
          <description>Sets the type</description>
          <long-description/>
          <tag line="103" name="param" description="" type="int" variable="$type">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="see" description="\RuntimeInfos::TYPE_AJAX" refers="\RuntimeInfos::TYPE_AJAX"/>
          <tag line="103" name="see" description="\RuntimeInfos::TYPE_FOOTER" refers="\RuntimeInfos::TYPE_FOOTER"/>
        </docblock>
        <argument line="109">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="114">
          <description>Hook the print of this infos to Wordpress footer</description>
          <long-description/>
          <tag line="114" name="return" description="$this for chainability" type="\RuntimeInfos">
            <type by_reference="false">\RuntimeInfos</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="133">
          <description>Registers and enqueue the js from admin-ajax.php
This has to be called after RuntimeInfos::generate_unique_id()</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="161" package="classes">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="156">
          <description>Format the data set in JSON.</description>
          <long-description>&lt;p&gt;Overload this if you want a different
data structure, i.e. XML&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="165">
          <description>Retrieves the html markup</description>
          <long-description/>
          <tag line="165" name="return" description="html markup" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="177" package="classes">
        <name>generate_unique_id</name>
        <full_name>generate_unique_id</full_name>
        <docblock line="173">
          <description>Generates an unique ID for the current data set</description>
          <long-description/>
          <tag line="173" name="return" description="the ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="classes">
        <name>the_markup</name>
        <full_name>the_markup</full_name>
        <docblock line="182">
          <description>Prints the markup</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="193" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="189">
          <description>Callback executed when the admin ajax url
is called with self::ajax_action parameter</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/OffersManager.class.php" hash="f16c3fee9516cd8e69a6bb5d75b303db" package="Default">
    <docblock line="3">
      <description>Definition of OffersManager feature</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends/>
      <name>OffersManager</name>
      <full_name>\OffersManager</full_name>
      <docblock line="8">
        <description>Manage the Offers linked to the booking engine by promo code</description>
        <long-description/>
      </docblock>
      <constant namespace="global" line="16" package="Default">
        <name>CUSTOM_POST_NAME</name>
        <full_name>CUSTOM_POST_NAME</full_name>
        <value>'offer'</value>
        <docblock line="12">
          <description>Stores the custom post name</description>
          <long-description/>
          <tag line="12" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="22" package="Default">
        <name>CUSTOM_TAX_NAME</name>
        <full_name>CUSTOM_TAX_NAME</full_name>
        <value>'offer-type'</value>
        <docblock line="18">
          <description>Stores the custom taxonomy name</description>
          <long-description/>
          <tag line="18" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="28" package="Default">
        <name>META_KEY_NAME</name>
        <full_name>META_KEY_NAME</full_name>
        <value>'_wtu_offers_details'</value>
        <docblock line="24">
          <description>Stores the meta key name where store the offers details</description>
          <long-description/>
          <tag line="24" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="34" package="Default">
        <name>FORMAT_OOFBLIB</name>
        <full_name>FORMAT_OOFBLIB</full_name>
        <value>1</value>
        <docblock line="30">
          <description>Use to retrieve the book now button compatible with Fblib</description>
          <long-description/>
          <tag line="30" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="40" package="Default">
        <name>FORMAT_FBLIB</name>
        <full_name>FORMAT_FBLIB</full_name>
        <value>2</value>
        <docblock line="36">
          <description>Use to retrieve the book now button compatibile with fblib.js</description>
          <long-description/>
          <tag line="36" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="public" line="46" namespace="global" package="Default">
        <name>$enabled</name>
        <default>false</default>
        <docblock line="42">
          <description>Stores the status of the feature</description>
          <long-description/>
          <tag line="42" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="52" namespace="global" package="Default">
        <name>$connect_name</name>
        <default/>
        <docblock line="48">
          <description>Stores the connect name</description>
          <long-description/>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="58" package="Default">
        <name>offer_details_list</name>
        <full_name>offer_details_list</full_name>
        <docblock line="54">
          <description>Returns the list of allowed offers details</description>
          <long-description/>
          <tag line="54" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="100" package="Default">
        <name>enable</name>
        <full_name>enable</full_name>
        <docblock line="95">
          <description>Enables the feature</description>
          <long-description/>
          <tag line="95" name="param" description="the default connect name for these offers" type="string" variable="$connect_name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$connect_name</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="112" package="Default">
        <name>disable</name>
        <full_name>disable</full_name>
        <docblock line="109">
          <description>Disables the feature</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="123" package="Default">
        <name>register_custom_post</name>
        <full_name>register_custom_post</full_name>
        <docblock line="120">
          <description>Register the custom post type</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="172" package="Default">
        <name>register_custom_taxonomy</name>
        <full_name>register_custom_taxonomy</full_name>
        <docblock line="169">
          <description>Registers the needed custom taxonomy</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="190" package="Default">
        <name>register_metaboxes</name>
        <full_name>register_metaboxes</full_name>
        <docblock line="187">
          <description>Registers the needed metaboxes</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="205" package="Default">
        <name>metabox_html</name>
        <full_name>metabox_html</full_name>
        <docblock line="201">
          <description>Prints the metabox for the offer details</description>
          <long-description/>
          <tag line="201" name="param" description="the current post" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="228" package="Default">
        <name>save_metabox_data</name>
        <full_name>save_metabox_data</full_name>
        <docblock line="225">
          <description>Saves the metabox data while saving the offer</description>
          <long-description/>
        </docblock>
        <argument line="228">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="272" package="Default">
        <name>get_offer_details</name>
        <full_name>get_offer_details</full_name>
        <docblock line="257">
          <description>Retrieves the offer details</description>
          <long-description>&lt;p&gt;Format:
    array (
        'cname'     =&gt; 'ITAOSHTLExpress',
        'lg'        =&gt; '',
        'codeprice' =&gt; 'PROMO-Terme-e-gastronomia',
        'firstroom' =&gt; 'Double-Superior',
        'codetrack' =&gt; '',
        'firstdate' =&gt; '',
    )&lt;/p&gt;</long-description>
          <tag line="257" name="param" description="the post object" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
          <tag line="257" name="return" description="a list of details" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="283" package="Default">
        <name>get_booknow</name>
        <full_name>get_booknow</full_name>
        <docblock line="277">
          <description>Retrieves the book now onclick attribute</description>
          <long-description/>
          <tag line="277" name="param" description="the offer custom post" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
          <tag line="277" name="param" description="the format" type="\number" variable="$format">
            <type by_reference="false">\number</type>
          </tag>
          <tag line="277" name="return" description="the onclick attribute" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="283">
          <name>$format</name>
          <default>0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="308" package="Default">
        <name>get_offer_price</name>
        <full_name>get_offer_price</full_name>
        <docblock line="304">
          <description>Retrieves the price_content div</description>
          <long-description/>
          <tag line="304" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="225" code="50015">Argument $post_id is missing from the Docblock of save_metabox_data()</error>
    </parse_markers>
  </file>
  <file path="classes/LevelWalkerNavMenu.class.php" hash="c6271f12421890d3bd5ac621b2921d07" package="Default">
    <docblock line="2">
      <description>stores the LevelWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>LevelWalkerNavMenu</name>
      <full_name>\LevelWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Adds the level for the current menu element</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="15">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="15" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="15" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="15" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="15" name="param" description="" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ShowItemExcerptWalkerNavMenu.class.php" hash="4a04ae5236f3dd7f4aef0e719b534a13" package="Default">
    <docblock line="2">
      <description>stores the ShowItemExcerptWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>ShowItemExcerptWalkerNavMenu</name>
      <full_name>\ShowItemExcerptWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Shows the title, the post thumbnail
and the excerpt for every menu entry.</description>
        <long-description>&lt;p&gt;Additional markup will be appended
to the default menu entry.&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="the template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$thumb_media_size</name>
        <default>'thumbnail'</default>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$classes</name>
        <default>array()</default>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$excerpt_output</name>
        <default/>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="the excerpt buffer" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="30">
          <description>Initializes the object with default values.</description>
          <long-description>&lt;p&gt;Hint: overload this if you want
to change the printed markup&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>get_image</name>
        <full_name>get_image</full_name>
        <docblock line="54">
          <description>Builds the %image% substitution</description>
          <long-description/>
          <tag line="54" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="54" name="param" description="the media size" type="string" variable="$size">
            <type by_reference="false">string</type>
          </tag>
          <tag line="54" name="param" description="optional arguments for the anchor" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="54" name="return" description="the image markup" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
        <argument line="61">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="74" package="classes">
        <name>get_excerpt_id</name>
        <full_name>get_excerpt_id</full_name>
        <docblock line="69">
          <description>Builds the %id% substitution</description>
          <long-description/>
          <tag line="69" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="69" name="return" description="the id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="classes">
        <name>get_container_id</name>
        <full_name>get_container_id</full_name>
        <docblock line="78">
          <description>Builds the id of the html li element</description>
          <long-description/>
          <tag line="78" name="param" description="the menu item" type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="78" name="param" description="additional arguments" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="return" description="the id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="84">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="classes">
        <name>get_permalink</name>
        <full_name>get_permalink</full_name>
        <docblock line="90">
          <description>Builds the %permalink% substitution</description>
          <long-description/>
          <tag line="90" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="90" name="param" description="optional arguments for the anchor tag" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="return" description="html anchor tag for the permalink" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="96">
          <name>$args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="classes">
        <name>get_title</name>
        <full_name>get_title</full_name>
        <docblock line="104">
          <description>Builds the %title% substitution</description>
          <long-description/>
          <tag line="104" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="104" name="return" description="&lt;string, mixed&gt; the title" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="classes">
        <name>get_excerpt</name>
        <full_name>get_excerpt</full_name>
        <docblock line="113">
          <description>Builds the %excerpt% substitution</description>
          <long-description/>
          <tag line="113" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="113" name="return" description="&lt;string, mixed&gt; the excerpt" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="131" package="classes">
        <name>get_href</name>
        <full_name>get_href</full_name>
        <docblock line="126">
          <description>Builds the %href% substitution</description>
          <long-description/>
          <tag line="126" name="param" description="the post ID" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="126" name="return" description="the href for the current menu element" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="140" package="classes">
        <name>add_class</name>
        <full_name>add_class</full_name>
        <docblock line="135">
          <description>Adds a class to the li</description>
          <long-description/>
          <tag line="135" name="param" description="the class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="return" description="$this for chainability" type="\ShowItemExcerptWalkerNavMenu">
            <type by_reference="false">\ShowItemExcerptWalkerNavMenu</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="classes">
        <name>set_thumb_media_size</name>
        <full_name>set_thumb_media_size</full_name>
        <docblock line="145">
          <description>Sets the thumbnail media dimension</description>
          <long-description/>
          <tag line="145" name="param" description="the media dimension" type="string" variable="$size">
            <type by_reference="false">string</type>
          </tag>
          <tag line="145" name="return" description="$this for chainability" type="\ShowItemExcerptWalkerNavMenu">
            <type by_reference="false">\ShowItemExcerptWalkerNavMenu</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="155">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="155" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="155" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="155" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="155" name="param" description="" type="int" variable="$args">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="163">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="21" code="50018">No DocBlock was found for property $thumb_media_size</error>
      <error line="23" code="50018">No DocBlock was found for property $classes</error>
      <error line="54" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_image()</error>
      <notice line="54" code="50013">Parameter $post_id could not be found in get_image()</notice>
      <error line="69" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_excerpt_id()</error>
      <notice line="69" code="50013">Parameter $post_id could not be found in get_excerpt_id()</notice>
      <error line="90" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_permalink()</error>
      <notice line="90" code="50013">Parameter $post_id could not be found in get_permalink()</notice>
      <error line="104" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_title()</error>
      <notice line="104" code="50013">Parameter $post_id could not be found in get_title()</notice>
      <error line="113" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_excerpt()</error>
      <notice line="113" code="50013">Parameter $post_id could not be found in get_excerpt()</notice>
      <error line="126" code="50014">Name of argument $item does not match with the DocBlock's name $post_id in get_href()</error>
      <notice line="126" code="50013">Parameter $post_id could not be found in get_href()</notice>
    </parse_markers>
  </file>
  <file path="classes/AutomaticAssetsManager.class.php" hash="bc26b26d488300e85f4ac67461516dca" package="Default">
    <docblock line="2">
      <description>Contains AutomaticAssetsManager class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="classes">
      <extends/>
      <name>AutomaticAssetsManager</name>
      <full_name>\AutomaticAssetsManager</full_name>
      <docblock line="7">
        <description>Manages the assets</description>
        <long-description>&lt;p&gt;Adds the possibility to load a javascript or a css
in the middle in a template part without
having the need to check if the asset can be
loaded in the head or in the foot of the page.&lt;/p&gt;

&lt;p&gt;Uses ob_start and a placeholder for the assets.
It's a singleton beacause it has to be run only once&lt;/p&gt;</long-description>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="50" package="classes">
        <name>CSS_MARKER</name>
        <full_name>CSS_MARKER</full_name>
        <value>'&lt;!-- ###WPU### place here the css --&gt;'</value>
        <docblock line="46">
          <description>Placeholder for the css</description>
          <long-description/>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="56" package="classes">
        <name>TOP_JS_MARKER</name>
        <full_name>TOP_JS_MARKER</full_name>
        <value>'&lt;!-- ###WPU### place here the top js --&gt;'</value>
        <docblock line="52">
          <description>Placeholder for the top javascripts</description>
          <long-description/>
          <tag line="52" name="var" description="" type="\stirng">
            <type by_reference="false">\stirng</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="62" package="classes">
        <name>BOTTOM_JS_MARKER</name>
        <full_name>BOTTOM_JS_MARKER</full_name>
        <value>'&lt;!-- ###WPU### place here the bottom js --&gt;'</value>
        <docblock line="58">
          <description>Placeholder for the bottom javascript</description>
          <long-description/>
          <tag line="58" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="26" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$assets</name>
        <default>array('css' =&gt; array(), 'js' =&gt; array())</default>
        <docblock line="28">
          <description>manages the list of css and js</description>
          <long-description/>
          <tag line="28" name="var" description="" type="\arrary">
            <type by_reference="false">\arrary</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="38" namespace="global" package="Default">
        <name>$base_dir</name>
        <default>array()</default>
        <docblock line="34">
          <description>stores infos on path and uri</description>
          <long-description/>
          <tag line="34" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="44" namespace="global" package="Default">
        <name>$status</name>
        <default>false</default>
        <docblock line="40">
          <description>Stores the status for this feature</description>
          <long-description/>
          <tag line="40" name="var" description="true if the feature is enabled" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="67" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="64">
          <description>Register some assets and hooks into WP</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="77" package="classes">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="73">
          <description>Retrieves the singleton instance for this feature</description>
          <long-description/>
          <tag line="73" name="return" description="unique instance" type="\AutomaticAssetsManager">
            <type by_reference="false">\AutomaticAssetsManager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>add_js</name>
        <full_name>add_js</full_name>
        <docblock line="84">
          <description>Adds a javascript to the current set</description>
          <long-description/>
          <tag line="84" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_script" refers="\@link"/>
          <tag line="84" name="param" description="Script name" type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="Script url" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="param" description="(optional) Array of script names on which this script depends" type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="param" description="(optional) Script version (used for cache busting), set to NULL to disable" type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="84" name="param" description="(optional) Whether to enqueue the script before &lt;/head&gt; or before &lt;/body&gt;" type="bool" variable="$in_footer">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="84" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="94">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="94">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="94">
          <name>$in_footer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="classes">
        <name>add_css</name>
        <full_name>add_css</full_name>
        <docblock line="105">
          <description>Adds a css to the current set</description>
          <long-description/>
          <tag line="105" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_style" refers="\@link"/>
          <tag line="105" name="param" description="Name of the stylesheet." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="Path to the stylesheet from the root directory of WordPress. Example: '/css/mystyle.css'." type="string|bool" variable="$src">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="105" name="param" description="Array of handles of any stylesheet that this stylesheet depends on.&#10; (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies." type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="105" name="param" description="String specifying the stylesheet version number. Set to NULL to disable.&#10; Used to ensure that the correct version is sent to the client regardless of caching." type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="105" name="param" description="The media for which this stylesheet has been defined." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="117">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="117">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="117">
          <name>$media</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="129">
          <description>Hooks the assets registration into wordpress init hook</description>
          <long-description/>
          <tag line="129" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="144" package="classes">
        <name>enable_automatic_manager</name>
        <full_name>enable_automatic_manager</full_name>
        <docblock line="140">
          <description>Enables the loading of assets from template part</description>
          <long-description/>
          <tag line="140" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="162" package="classes">
        <name>obstart_init</name>
        <full_name>obstart_init</full_name>
        <docblock line="159">
          <description>Called by wordpress right before the page start</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="classes">
        <name>disable_automatic_manager</name>
        <full_name>disable_automatic_manager</full_name>
        <docblock line="166">
          <description>Disables the loading of assets from template part</description>
          <long-description/>
          <tag line="166" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="186" package="classes">
        <name>on_wp_print_styles</name>
        <full_name>on_wp_print_styles</full_name>
        <docblock line="183">
          <description>Prints a marker for the top css</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="191" package="classes">
        <name>on_wp_print_scripts</name>
        <full_name>on_wp_print_scripts</full_name>
        <docblock line="188">
          <description>Prints a marker for the top javascript</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="196" package="classes">
        <name>on_wp_print_footer_scripts</name>
        <full_name>on_wp_print_footer_scripts</full_name>
        <docblock line="193">
          <description>Prints a marker for the bottom javascript</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="classes">
        <name>obstart_replace_assets_marker</name>
        <full_name>obstart_replace_assets_marker</full_name>
        <docblock line="198">
          <description>Replaces the temporarily markers inserted
on first page execution with the real
list of html markup for the needed assets</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="239" package="classes">
        <name>callback</name>
        <full_name>callback</full_name>
        <docblock line="233">
          <description>This is called on wordpress init
Tries to load asset from the child theme,
if the asset file doesn't exists it loads
from the parent theme</description>
          <long-description/>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="26" code="50018">No DocBlock was found for property $instance</error>
    </parse_markers>
  </file>
  <file path="classes/GalleryHelper.class.php" hash="f16db3a2a4d2dbca7ea9f46d2680b7b5" package="Default">
    <docblock line="2">
      <description>Stores the GalleryHelper class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="14" package="classes\image manager">
      <extends/>
      <name>GalleryHelper</name>
      <full_name>\GalleryHelper</full_name>
      <docblock line="5">
        <description>Manages the markup for a generic set of images
Extend this with your nice and candy classes!</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.2"/>
        <tag line="5" name="package" description="classes"/>
        <tag line="5" name="subpackage" description="image manager"/>
        <tag line="5" name="todo" description="remove using of FeatureWithAssets"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$unid</name>
        <default>false</default>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="the unique id for the current gallery it will be automatically created if not specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="25" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="22">
          <description/>
          <long-description/>
          <tag line="22" name="var" description="the html template" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="30" namespace="global" package="Default">
        <name>$images</name>
        <default>array()</default>
        <docblock line="27">
          <description/>
          <long-description/>
          <tag line="27" name="var" description="the list of images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="35" namespace="global" package="Default">
        <name>$image_number</name>
        <default/>
        <docblock line="32">
          <description/>
          <long-description/>
          <tag line="32" name="var" description="the maximum number of images to show" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="40" namespace="global" package="Default">
        <name>$static_markup</name>
        <default/>
        <docblock line="37">
          <description/>
          <long-description/>
          <tag line="37" name="var" description="Stores some static html" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$timthumb_opts</name>
        <default/>
        <docblock line="42">
          <description/>
          <long-description/>
          <tag line="42" name="var" description="options for timthumb" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$media_dimension</name>
        <default/>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="var" description="WordPress media size name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="classes\image manager">
        <name>get_images</name>
        <full_name>get_images</full_name>
        <docblock line="53">
          <description>Search the media gallery for suitable images.</description>
          <long-description>&lt;p&gt;This is the order:
Check if current post has attached images
Check the default language if has attached images
Check if frontpage has attached images
Check if frontpage has attached images in default language
Build a placeholder&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="121" package="classes\image manager">
        <name>has_images</name>
        <full_name>has_images</full_name>
        <docblock line="114">
          <description>Check if the current gallery has one or more images</description>
          <long-description>&lt;p&gt;Useful to check if jquery.cycle() is needed&lt;/p&gt;</long-description>
          <tag line="114" name="return" description="true if there is at least two image" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="classes\image manager">
        <name>is_empty</name>
        <full_name>is_empty</full_name>
        <docblock line="125">
          <description>Checks if the current gallery has more no images</description>
          <long-description/>
          <tag line="125" name="return" description="true if there is no image in the current set" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="139" package="classes\image manager">
        <name>get_images_from_post</name>
        <full_name>get_images_from_post</full_name>
        <docblock line="134">
          <description>Get the images attached to a post</description>
          <long-description/>
          <tag line="134" name="param" description="" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="return" description="&lt;multitype:, boolean, multitype:Ambigous &lt;NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$args</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="182" package="classes\image manager">
        <name>get_images_from_main_language</name>
        <full_name>get_images_from_main_language</full_name>
        <docblock line="172">
          <description>Get the images from the main language translation of the post</description>
          <long-description>&lt;p&gt;Uses WPML to retrieve the post translation in default language
and queries it for attached images.&lt;/p&gt;</long-description>
          <tag line="172" name="uses" description="\icl_object_id()" refers="\icl_object_id()"/>
          <tag line="172" name="param" description="the post id you want to search for" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="172" name="return" description="&lt;Ambigous, multitype:, boolean, multitype:Ambigous &lt;NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="205" package="classes\image manager">
        <name>get_images_from_frontpage</name>
        <full_name>get_images_from_frontpage</full_name>
        <docblock line="202">
          <description>Gets images attached to the frontpage</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="213" package="classes\image manager">
        <name>get_images_from_homepage_in_default_language</name>
        <full_name>get_images_from_homepage_in_default_language</full_name>
        <docblock line="209">
          <description>Gets images attached to the frontpage in default language translation</description>
          <long-description/>
          <tag line="209" name="return" description="&lt;Ambigous, multitype:, boolean, multitype:Ambigous &lt;NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="221" package="classes\image manager">
        <name>get_images_from_closest_hotel</name>
        <full_name>get_images_from_closest_hotel</full_name>
        <docblock line="217">
          <description>Gets images from the first post marked as 'hotel' by HotelManager</description>
          <long-description/>
          <tag line="217" name="return" description="&lt;Ambigous, multitype:, boolean, multitype:Ambigous &lt;NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="229" package="classes\image manager">
        <name>get_images_from_closest_hotel_in_default_language</name>
        <full_name>get_images_from_closest_hotel_in_default_language</full_name>
        <docblock line="225">
          <description>Gets images from the first post marked as 'hotel' by HotelManager in default language</description>
          <long-description/>
          <tag line="225" name="return" description="&lt;Ambigous, multitype:, boolean, multitype:Ambigous &lt;NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="238" package="classes\image manager">
        <name>set_uid</name>
        <full_name>set_uid</full_name>
        <docblock line="233">
          <description>Set the unique id for this gallery</description>
          <long-description/>
          <tag line="233" name="param" description="the unique" type="string" variable="$unid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$unid</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="248" package="classes\image manager">
        <name>limit_images_number</name>
        <full_name>limit_images_number</full_name>
        <docblock line="243">
          <description>Set the maximum number of images to show</description>
          <long-description/>
          <tag line="243" name="param" description="the number" type="int" variable="$number">
            <type by_reference="false">int</type>
          </tag>
          <tag line="243" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="248">
          <name>$number</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="258" package="classes\image manager">
        <name>set_timthumb_options</name>
        <full_name>set_timthumb_options</full_name>
        <docblock line="253">
          <description>Set the timthumb options
If set_wp_media_dimension() is called it will prevale on this.</description>
          <long-description/>
          <tag line="253" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="269" package="classes\image manager">
        <name>set_wp_media_dimension</name>
        <full_name>set_wp_media_dimension</full_name>
        <docblock line="263">
          <description>Sets the dimension for this gallery.</description>
          <long-description>&lt;p&gt;If set this option will prevale on timthumb&lt;/p&gt;</long-description>
          <tag line="263" name="param" description="WordPress media dimension name" type="string" variable="$dimension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="263" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="269">
          <name>$dimension</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="279" package="classes\image manager">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="274">
          <description>Set the html template for this gallery</description>
          <long-description/>
          <tag line="274" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="290" package="classes\image manager">
        <name>set_markup</name>
        <full_name>set_markup</full_name>
        <docblock line="284">
          <description>Set the static markup; ie: prev\next\loading divs</description>
          <long-description/>
          <tag line="284" name="param" description="the string has to be substituted" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="param" description="html markup" type="string" variable="$markup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="284" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="290">
          <name>$markup</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="classes\image manager">
        <name>replace_markup</name>
        <full_name>replace_markup</full_name>
        <docblock line="295">
          <description>Replaces the markup in $this-&gt;tpl %tag%s with the one
in the corresponding value of $this-&gt;static_markup[tag].</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="316" package="classes\image manager">
        <name>add_image</name>
        <full_name>add_image</full_name>
        <docblock line="310">
          <description>Adds an image to the current set</description>
          <long-description/>
          <tag line="310" name="param" description="the image: if is an int it&#10;will be retrieved from the wp media, elsewhere it is an html tag" type="string|int" variable="$img">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="310" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$img</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="326" package="classes\image manager">
        <name>add_images</name>
        <full_name>add_images</full_name>
        <docblock line="321">
          <description>Add some images to the current set</description>
          <long-description/>
          <tag line="321" name="param" description="the list of images to be added" type="array" variable="$images">
            <type by_reference="false">array</type>
          </tag>
          <tag line="321" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="326">
          <name>$images</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="339" package="classes\image manager">
        <name>calculate_unique</name>
        <full_name>calculate_unique</full_name>
        <docblock line="335">
          <description>Calculates the unique id for the current gallery</description>
          <long-description/>
          <tag line="335" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="350" package="classes\image manager">
        <name>get_image_src</name>
        <full_name>get_image_src</full_name>
        <docblock line="344">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="344" name="returns" description="the src attribute for the $index image of the set"/>
          <tag line="344" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="350">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="383" package="classes\image manager">
        <name>get_image_path</name>
        <full_name>get_image_path</full_name>
        <docblock line="377">
          <description>Retrieves the path for the given image
If it is an external image it returns the src attributes</description>
          <long-description/>
          <tag line="377" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="377" name="return" description="path to disc" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="406" package="classes\image manager">
        <name>get_image_width</name>
        <full_name>get_image_width</full_name>
        <docblock line="402">
          <description>Get the width for the n-th image of the list</description>
          <long-description/>
          <tag line="402" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="406">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="430" package="classes\image manager">
        <name>get_image_height</name>
        <full_name>get_image_height</full_name>
        <docblock line="426">
          <description>Get the height for the n-th image of the list</description>
          <long-description/>
          <tag line="426" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="456" package="classes\image manager">
        <name>get_image_id</name>
        <full_name>get_image_id</full_name>
        <docblock line="450">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="450" name="returns" description="the id attribute for the $index image of the set"/>
          <tag line="450" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="456">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="472" package="classes\image manager">
        <name>get_image_title</name>
        <full_name>get_image_title</full_name>
        <docblock line="467">
          <description>Retrieves the title for the image with given index</description>
          <long-description/>
          <tag line="467" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="467" name="returns" description="the title attribute for the $index image of the set"/>
        </docblock>
        <argument line="472">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="493" package="classes\image manager">
        <name>get_image_alt</name>
        <full_name>get_image_alt</full_name>
        <docblock line="487">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="487" name="returns" description="the alt attribute for the $index image of the set"/>
          <tag line="487" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="493">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="514" package="classes\image manager">
        <name>get_image_caption</name>
        <full_name>get_image_caption</full_name>
        <docblock line="508">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="508" name="returns" description="the caption for the $index image of the set"/>
          <tag line="508" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="514">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="538" package="classes\image manager">
        <name>get_image_description</name>
        <full_name>get_image_description</full_name>
        <docblock line="532">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="532" name="returns" description="the description for the $index image of the set"/>
          <tag line="532" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="538">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="559" package="classes\image manager">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="555">
          <description>Retrieves the markup for the current gallery</description>
          <long-description/>
          <tag line="555" name="return" description="markup for the current gallery" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="564" package="classes\image manager">
        <name>the_markup</name>
        <full_name>the_markup</full_name>
        <docblock line="561">
          <description>Echoes the markup for the current gallery</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/HeadHelper.class.php" hash="d1eee959fbbff6b39370aed932b134de" package="Default">
    <docblock line="2">
      <description>stores the HeadHelper class declaration</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="11" package="Default">
      <extends/>
      <name>HeadHelper</name>
      <full_name>\HeadHelper</full_name>
      <docblock line="6">
        <description>Some helper for the code inside &lt;head&gt; tag</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$meta_tags</name>
        <default>array()</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="of name =&gt; content valuse for the meta tags." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$links</name>
        <default>array()</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="the links to be added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$title</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="the title" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$charset</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="charset of the page" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="36" namespace="global" package="Default">
        <name>$ua</name>
        <default/>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="Google Analytics tracking code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$custom_scripts</name>
        <default/>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="list of inline JavaScripts to insert in the &lt;head&gt; tag" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="44">
          <description>Initializes this object to default data</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="69" package="Default">
        <name>get_head</name>
        <full_name>get_head</full_name>
        <docblock line="65">
          <description>Retrieves some usefull meta tags for the &lt;head&gt;</description>
          <long-description/>
          <tag line="65" name="return" description="usefull meta tags for the &lt;head&gt;" type="\some">
            <type by_reference="false">\some</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="122" package="Default">
        <name>set_ua</name>
        <full_name>set_ua</full_name>
        <docblock line="118">
          <description>Sets the Google Analytics tracking code</description>
          <long-description/>
          <tag line="118" name="param" description="UA-XXXXXX" type="string" variable="$ga">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="122">
          <name>$ga</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="130" package="Default">
        <name>the_head</name>
        <full_name>the_head</full_name>
        <docblock line="127">
          <description>Print the markup</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="139" package="Default">
        <name>set_meta_tag</name>
        <full_name>set_meta_tag</full_name>
        <docblock line="134">
          <description>Set a meta tag</description>
          <long-description/>
          <tag line="134" name="param" description="the meta tag" type="array" variable="$meta">
            <type by_reference="false">array</type>
          </tag>
          <tag line="134" name="return" description="$this for chainability" type="\HeadHelper">
            <type by_reference="false">\HeadHelper</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$meta</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="152" package="Default">
        <name>add_inline_script</name>
        <full_name>add_inline_script</full_name>
        <docblock line="146">
          <description>Adds an inline JavaScript to the current head section</description>
          <long-description/>
          <tag line="146" name="param" description="the js code" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="the name of the script" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="return" description="$this for chainability" type="\HeadHelper">
            <type by_reference="false">\HeadHelper</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="152">
          <name>$name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="161" package="Default">
        <name>set_title</name>
        <full_name>set_title</full_name>
        <docblock line="157">
          <description>Set the title</description>
          <long-description/>
          <tag line="157" name="param" description="the title" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="170" package="Default">
        <name>set_link</name>
        <full_name>set_link</full_name>
        <docblock line="166">
          <description>Set a link</description>
          <long-description/>
          <tag line="166" name="param" description="the link" type="array" variable="$link">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="181" package="Default">
        <name>delete_link</name>
        <full_name>delete_link</full_name>
        <docblock line="177">
          <description>Remove a link</description>
          <long-description/>
          <tag line="177" name="param" description="the link name" type="string" variable="$link">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="181">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="190" package="Default">
        <name>delete_meta_tag</name>
        <full_name>delete_meta_tag</full_name>
        <docblock line="186">
          <description>Delete a meta tag</description>
          <long-description/>
          <tag line="186" name="param" description="the meta name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="Default">
        <name>render_meta_tags</name>
        <full_name>render_meta_tags</full_name>
        <docblock line="195">
          <description>Retrieve the meta tags list ready to be inserted into &lt;head&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="212" package="Default">
        <name>render_meta_tag</name>
        <full_name>render_meta_tag</full_name>
        <docblock line="208">
          <description>Render a single meta tag of the current set stored in $this-&gt;meta_tags</description>
          <long-description/>
          <tag line="208" name="param" description="the name of the meta" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="223" package="Default">
        <name>set_charset</name>
        <full_name>set_charset</full_name>
        <docblock line="219">
          <description>Set the charset for the page</description>
          <long-description/>
          <tag line="219" name="param" description="the charset" type="string" variable="$charset">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="223">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/HtmlHelper.class.php" hash="bec3e3860520a4e4607c9b19e499a9c2" package="Default">
    <docblock line="2">
      <description>stores the HtmlHelper and HtmlBuilder class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\HtmlBuilder</extends>
      <name>HtmlHelper</name>
      <full_name>\HtmlHelper</full_name>
      <docblock line="6">
        <description>Helper class useful to generate some html tags</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="19" package="classes">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="14">
          <description>Retrieves a &lt;script&gt; tag</description>
          <long-description/>
          <tag line="14" name="param" description="the inner script content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="19">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="24">
          <description>Get the markup for a &lt;img&gt; tag</description>
          <long-description/>
          <tag line="24" name="param" description="the image source" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="29">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="classes">
        <name>anchor</name>
        <full_name>anchor</full_name>
        <docblock line="34">
          <description>Get the markup for an &lt;a&gt; tag</description>
          <long-description/>
          <tag line="34" name="return" description="markup for an html &lt;a&gt; tag" type="\the">
            <type by_reference="false">\the</type>
          </tag>
          <tag line="34" name="param" description="the url to be pointed" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="the text" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="some html attributes in key=&gt;value pairs or a plain string" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$href</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="41">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="classes">
        <name>list_item</name>
        <full_name>list_item</full_name>
        <docblock line="46">
          <description>Retrieves a &lt;li&gt; tag</description>
          <long-description/>
          <tag line="46" name="param" description="the inner html" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="the optional attributes for the &lt;li&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="51">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="62" package="classes">
        <name>list_inner_html</name>
        <full_name>list_inner_html</full_name>
        <docblock line="56">
          <description>Prepare the inner html for a list (ul\ol).</description>
          <long-description>&lt;p&gt;If it is a string it will be returnes as it is.
If it is an array every element will be wrapped in a &lt;li&gt; tag&lt;/p&gt;</long-description>
          <tag line="56" name="param" description="the inner html" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="80" package="classes">
        <name>unorderd_list</name>
        <full_name>unorderd_list</full_name>
        <docblock line="74">
          <description>Retrieves a &lt;ul&gt; tag</description>
          <long-description/>
          <tag line="74" name="param" description="the inner html.&#10;If an array is passed, every element will be wrapped inside a &lt;li&gt; tag" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="param" description="the optional attributes for the &lt;ul&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="80">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="classes">
        <name>ordered_list</name>
        <full_name>ordered_list</full_name>
        <docblock line="84">
          <description>Retrieves a &lt;ol&gt; tag</description>
          <long-description/>
          <tag line="84" name="param" description="the inner html.&#10;If is an array every element will be wrapped inside a &lt;li&gt; tag" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="param" description="the optional attributes for the &lt;ol&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="90">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="classes">
        <name>div</name>
        <full_name>div</full_name>
        <docblock line="94">
          <description>Get the markup for a &lt;div&gt; tag</description>
          <long-description/>
          <tag line="94" name="param" description="the inner html code" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="99">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="108" package="classes">
        <name>span</name>
        <full_name>span</full_name>
        <docblock line="103">
          <description>Get the markup for a &lt;span&gt; tag</description>
          <long-description/>
          <tag line="103" name="param" description="the inner html code" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="108">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="119" package="classes">
        <name>input</name>
        <full_name>input</full_name>
        <docblock line="112">
          <description>Get the markup for a &lt;input&gt; tag</description>
          <long-description/>
          <tag line="112" name="param" description="the input name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="the input type, default text" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="112" name="return" description="html markup" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="119">
          <name>$type</name>
          <default>'text'</default>
          <type/>
        </argument>
        <argument line="119">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="145" package="classes">
        <name>label</name>
        <full_name>label</full_name>
        <docblock line="138">
          <description>Get the markup for a &lt;label&gt; tag</description>
          <long-description/>
          <tag line="138" name="param" description="the inner text" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="the input name this label is referred to" type="string" variable="$for_name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="138" name="return" description="html markup" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$for_name</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="158" package="classes">
      <extends/>
      <name>HtmlBuilder</name>
      <full_name>\HtmlBuilder</full_name>
      <docblock line="152">
        <description>Inner class to build some very basic html nodes</description>
        <long-description/>
        <tag line="152" name="author" description="etessore"/>
        <tag line="152" name="version" description="1.0.0"/>
        <tag line="152" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="163" package="classes">
        <name>HTML_VERSION</name>
        <full_name>HTML_VERSION</full_name>
        <value>'html5'</value>
        <docblock line="159">
          <description/>
          <long-description/>
          <tag line="159" name="var" description="value of the version of the html/xhtml used useful to have different behavior if not using HTML 5" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="169" package="classes">
        <name>self_closing_tags</name>
        <full_name>self_closing_tags</full_name>
        <docblock line="165">
          <description>Retrieves the list of self-closing tags</description>
          <long-description/>
          <tag line="165" name="return" description="a list of self-closing tags" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="179" package="classes">
        <name>open_tag</name>
        <full_name>open_tag</full_name>
        <docblock line="173">
          <description>Gets the opening html tag for the given one</description>
          <long-description/>
          <tag line="173" name="return" description="the opening tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="the html tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="param" description="the additional parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$tag</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="179">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="189" package="classes">
        <name>close_tag</name>
        <full_name>close_tag</full_name>
        <docblock line="184">
          <description>Gets the closing html tag for the given one</description>
          <long-description/>
          <tag line="184" name="return" description="the closing tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="param" description="the html tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$tag</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="199" package="classes">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="195">
          <description>Prepare the $parms to be printed as html attributes</description>
          <long-description/>
          <tag line="195" name="param" description="list of html attributes" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="212" package="classes">
        <name>array_to_html_attributes</name>
        <full_name>array_to_html_attributes</full_name>
        <docblock line="205">
          <description>Generates HTML Node Attribures</description>
          <long-description/>
          <tag line="205" name="param" description="" type="string" variable="$glue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="param" description="" type="array|string" variable="$pieces">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="author" description="http://blog.teknober.com/2011/04/13/php-array-to-html-attributes/"/>
        </docblock>
        <argument line="212">
          <name>$glue</name>
          <default/>
          <type/>
        </argument>
        <argument line="212">
          <name>$pieces</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="234" package="classes">
        <name>get_html_attributes</name>
        <full_name>get_html_attributes</full_name>
        <docblock line="227">
          <description>Retrives the attributes list choosing between the given parameters</description>
          <long-description/>
          <tag line="227" name="param" description="the inner html" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="227" name="param" description="the parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="227" name="return" description="the html tag attributes ready to be printed in the DOM" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$inner_html</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="246" package="classes">
        <name>doctype</name>
        <full_name>doctype</full_name>
        <docblock line="243">
          <description>Retrieves the correct DOCTYPE</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="268" package="classes">
        <name>open_html</name>
        <full_name>open_html</full_name>
        <docblock line="264">
          <description>Returns the &lt;html&gt; opening tag from html5 boilerplate</description>
          <long-description/>
          <tag line="264" name="param" description="some additional classes" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="268">
          <name>$class</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="300" package="classes">
        <name>standard_tag</name>
        <full_name>standard_tag</full_name>
        <docblock line="294">
          <description>Builds a default tag structure: &lt;tagname tagparameters&gt;inner_html&lt;/tagname&gt;</description>
          <long-description/>
          <tag line="294" name="param" description="the tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="param" description="the inner html" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="294" name="param" description="the additional html tag parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$tag</name>
          <default/>
          <type/>
        </argument>
        <argument line="300">
          <name>$inner_html</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="300">
          <name>$parms</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/LoremIpsumDictionary.class.php" hash="b9d3be09f73e31c9ee764ea0a6fd8942" package="Default">
    <docblock line="2">
      <description>contains LoremIpsumDictionary class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\GeneratorDictionary</extends>
      <name>LoremIpsumDictionary</name>
      <full_name>\LoremIpsumDictionary</full_name>
      <docblock line="6">
        <description>Stores the dictionary for generating 'Lorem ipsum.</description>
        <long-description>&lt;p&gt;..' text&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Builds the dictionary</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ImageGenerator.class.php" hash="d1aeabff6e5483d329d3ae6a5e8ab302" package="Default">
    <docblock line="2">
      <description>stores the ImageGenerator class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>ImageGenerator</name>
      <full_name>\ImageGenerator</full_name>
      <docblock line="5">
        <description>Generates paceholder images</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.1"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$settings</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="stores the settings for this generator" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$image</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="an image resource identifier" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$cache</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="some infos about the cache: url\path\filename..." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$url</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="url for the generated image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="40">
          <description>Initializes the object by checking
if the image exists or has to be generated</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="classes">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="64">
          <description>Sets a parameter for the current generator</description>
          <long-description/>
          <tag line="64" name="param" description="the name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="the value of the parameter" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$param</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="75">
          <description>Retrieves the html markup for the current generated image</description>
          <long-description/>
          <tag line="75" name="return" description="html markup for the current generated image" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>get_image_src</name>
        <full_name>get_image_src</full_name>
        <docblock line="91">
          <description>Retrieves the image src attribute</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="103" package="classes">
        <name>generate_image</name>
        <full_name>generate_image</full_name>
        <docblock line="99">
          <description>Generates an image</description>
          <long-description/>
          <tag line="99" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="classes">
        <name>get_image_width</name>
        <full_name>get_image_width</full_name>
        <docblock line="168">
          <description>Gets the image width</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="classes">
        <name>get_image_height</name>
        <full_name>get_image_height</full_name>
        <docblock line="175">
          <description>Get the image height</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="classes">
        <name>get_image_alt</name>
        <full_name>get_image_alt</full_name>
        <docblock line="182">
          <description>Generates an alternative text for this image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="193" package="classes">
        <name>save_image</name>
        <full_name>save_image</full_name>
        <docblock line="189">
          <description>Saves the image into the upload directory</description>
          <long-description/>
          <tag line="189" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="classes">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="199">
          <description>Flush the cache file and regenerate it</description>
          <long-description/>
          <tag line="199" name="param" description="false only if you don't want to delete the cache file.&#10;Useful to pass isset($_REQUEST['refresh']) in the ajax implementation" type="bool" variable="$check">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="199" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$check</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="214">
          <description>Hooks into WordPress to serve a generated image when no one is available</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="classes">
        <name>get_post_metadata_callback</name>
        <full_name>get_post_metadata_callback</full_name>
        <docblock line="223">
          <description>Callback for 'get_post_metadata' hook.</description>
          <long-description>&lt;p&gt;Returns -1 if post image is not set, else the id of the image&lt;/p&gt;</long-description>
          <tag line="223" name="param" description="the ID of the post thumbnail" type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="223" name="param" description="ID of the object metadata is for" type="int" variable="$object_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="223" name="param" description="Optional.  Metadata key.&#10;&#9;&#9;If not specified, retrieve all metadata for the specified object." type="string" variable="$meta_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="param" description="Optional, default is false.&#10;&#9;&#9;If true, return only the first value of the specified meta_key.&#10;&#9;&#9;This parameter has no effect if meta_key is not specified." type="bool" variable="$single">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$object_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$meta_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$single</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="classes">
        <name>post_thumbnail_html_callback</name>
        <full_name>post_thumbnail_html_callback</full_name>
        <docblock line="242">
          <description>Callback for 'post_thumbnail_html' hook.</description>
          <long-description>&lt;p&gt;Changes the html markup if the post thumbnail is not set&lt;/p&gt;</long-description>
          <tag line="242" name="param" description="" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$post_id">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$post_thumbnail_id">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$size">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$attr">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$html</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$post_thumbnail_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$attr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="279" package="classes">
        <name>get_dimensions</name>
        <full_name>get_dimensions</full_name>
        <docblock line="274">
          <description>Finds width and height of a media size</description>
          <long-description/>
          <tag line="274" name="param" description="the media size" type="string" variable="$media_dimensions">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="array('width'=&gt;'','height'=&gt;'','crop'=&gt;'')" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$media_dimensions</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="287">
          <description>outputs the raw image with appropriate header.</description>
          <long-description/>
          <tag line="287" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="307" package="classes">
        <name>get_rgb</name>
        <full_name>get_rgb</full_name>
        <docblock line="302">
          <description>Retrieves the rgb value from the given hexadecimal</description>
          <long-description/>
          <tag line="302" name="param" description="the hex representation of the color" type="string" variable="$hex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="302" name="return" description="red green and blue values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$hex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="324" package="classes">
        <name>get_all_image_sizes</name>
        <full_name>get_all_image_sizes</full_name>
        <docblock line="315">
          <description>Retrieves all the image sizes registered in WordPress</description>
          <long-description/>
          <tag line="315" name="return" description="of all image sizes registered in WP&#10;&lt;code&gt;'size_name' =&gt; array(&#10;&#9;'width'&#9;&#9;=&gt;&#9;200,&#10;&#9;'height'&#9;=&gt;&#9;80,&#10;&#9;'crop'&#9;&#9;=&gt;&#9;true&#10;)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/HotelManager.class.php" hash="68ff137126c0da55f944404e15bfeccb" package="Default">
    <class final="false" abstract="false" namespace="global" line="9" package="Default">
      <extends/>
      <name>HotelManager</name>
      <full_name>\HotelManager</full_name>
      <docblock line="2">
        <description>Manages multiple hotels in a single website</description>
        <long-description/>
        <tag line="2" name="author" description="mcanever"/>
        <tag line="2" name="version" description="1.0.0"/>
      </docblock>
      <constant namespace="global" line="38" package="Default">
        <name>META_KEY_NAME</name>
        <full_name>META_KEY_NAME</full_name>
        <value>'_this_is_an_hotel'</value>
        <docblock line="34">
          <description>Postmeta name to identify a single hotel</description>
          <long-description/>
          <tag line="34" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="14" namespace="global" package="Default">
        <name>$hotels</name>
        <default>array()</default>
        <docblock line="10">
          <description>Maintains the list of othels</description>
          <long-description/>
          <tag line="10" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="20" namespace="global" package="Default">
        <name>$enabled</name>
        <default>false</default>
        <docblock line="16">
          <description>Maintains the status of this feature</description>
          <long-description/>
          <tag line="16" name="var" description="" type="\unknown">
            <type by_reference="false">\unknown</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$errors</name>
        <default>array()</default>
        <docblock line="22">
          <description>Stores the list of errors</description>
          <long-description/>
          <tag line="22" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$current_hotel</name>
        <default>null</default>
        <docblock line="28">
          <description>Stores the current hotel</description>
          <long-description/>
          <tag line="28" name="var" description="" type="\Hotel">
            <type by_reference="false">\Hotel</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="43" package="Default">
        <name>enable</name>
        <full_name>enable</full_name>
        <docblock line="40">
          <description>Enable the feature</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="52" package="Default">
        <name>disable</name>
        <full_name>disable</full_name>
        <docblock line="49">
          <description>Disables the feature</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="61" package="Default">
        <name>register_metaboxes</name>
        <full_name>register_metaboxes</full_name>
        <docblock line="58">
          <description>Registers the 'Is This An Hotel?' metabox</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="75" package="Default">
        <name>metabox_html</name>
        <full_name>metabox_html</full_name>
        <docblock line="72">
          <description>Prints the HTML markup for the 'Is This An Hotel?' metabox</description>
          <long-description/>
        </docblock>
        <argument line="75">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="89" package="Default">
        <name>save_metabox_data</name>
        <full_name>save_metabox_data</full_name>
        <docblock line="86">
          <description>Saves the metabox data while saving the page</description>
          <long-description/>
        </docblock>
        <argument line="89">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="120" package="Default">
        <name>get_hotels</name>
        <full_name>get_hotels</full_name>
        <docblock line="116">
          <description>Get all Hotels in the current website</description>
          <long-description/>
          <tag line="116" name="return" description="a list of posts that are main hotel page" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="133" package="Default">
        <name>get_hotels_ids</name>
        <full_name>get_hotels_ids</full_name>
        <docblock line="129">
          <description>Retrieves the hotels page ids</description>
          <long-description/>
          <tag line="129" name="return" description="list of ids" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="155" package="Default">
        <name>get_haystack</name>
        <full_name>get_haystack</full_name>
        <docblock line="150">
          <description>Merges post anchestors and post id</description>
          <long-description/>
          <tag line="150" name="param" description="" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
          <tag line="150" name="return" description="" type="\array:">
            <type by_reference="false">\array:</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="166" package="Default">
        <name>is_group</name>
        <full_name>is_group</full_name>
        <docblock line="161">
          <description>Tests if the given $post is from the group website</description>
          <long-description/>
          <tag line="161" name="param" description="the post you need to check, default is the current one" type="int|object" variable="$post">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="161" name="return" description="true if $post is from group website" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="175" package="Default">
        <name>is_hotel</name>
        <full_name>is_hotel</full_name>
        <docblock line="170">
          <description>Test if the given $post is from a single hotel</description>
          <long-description/>
          <tag line="170" name="param" description="the post you need to check, default is the current one" type="int|object" variable="$post">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="170" name="return" description="true if $post is from the hotel website" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="175">
          <name>$hotel_name</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="184" package="Default">
        <name>get_hotel</name>
        <full_name>get_hotel</full_name>
        <docblock line="179">
          <description/>
          <long-description/>
          <tag line="179" name="param" description="" type="string" variable="$post">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="&lt;multitype:, multitype:Ambigous &lt;string, NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="193" package="Default">
        <name>get_hotel_title</name>
        <full_name>get_hotel_title</full_name>
        <docblock line="188">
          <description>Retrieves the hotel title for the given $post</description>
          <long-description/>
          <tag line="188" name="param" description="the post you want to know" type="int|object" variable="$post">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="188" name="return" description="the hotel title" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="201" package="Default">
        <name>get_hotel_slug</name>
        <full_name>get_hotel_slug</full_name>
        <docblock line="197">
          <description>Retrieves the hotel slug</description>
          <long-description/>
          <tag line="197" name="param" description="the slug" type="string" variable="$post">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="212" package="Default">
        <name>get_hotel_id</name>
        <full_name>get_hotel_id</full_name>
        <docblock line="206">
          <description>Retrieves the hotel post id</description>
          <long-description/>
          <tag line="206" name="param" description="the post you want to check" type="int|object" variable="$post">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="206" name="param" description="true if you want the id of the default language translation" type="boolean" variable="$default_language">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="206" name="return" description="the hotel post id" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="212">
          <name>$default_language</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="232" package="Default">
      <extends/>
      <name>Hotel</name>
      <full_name>\Hotel</full_name>
      <property final="false" static="false" visibility="public" line="233" namespace="global" package="Default">
        <name>$hasPages</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="public" line="234" namespace="global" package="Default">
        <name>$systag</name>
        <default>false</default>
      </property>
      <property final="false" static="false" visibility="private" line="235" namespace="global" package="Default">
        <name>$errors</name>
        <default>array()</default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="237" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <argument line="237">
          <name>$systag</name>
          <default/>
          <type/>
        </argument>
        <argument line="237">
          <name>$data</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="246" package="Default">
        <name>check_for_pages</name>
        <full_name>check_for_pages</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="257" package="Default">
        <name>debug</name>
        <full_name>debug</full_name>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="262" package="Default">
        <name>add_book_link</name>
        <full_name>add_book_link</full_name>
      </method>
    </class>
    <markers>
      <todo line="231"/>
    </markers>
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file classes/HotelManager.class.php</error>
      <error line="72" code="50015">Argument $post is missing from the Docblock of metabox_html()</error>
      <error line="86" code="50015">Argument $post_id is missing from the Docblock of save_metabox_data()</error>
      <error line="170" code="50015">Argument $hotel_name is missing from the Docblock of is_hotel()</error>
      <error line="179" code="50012">No short description for method get_hotel()</error>
      <error line="232" code="50000">No DocBlock was found for \Hotel</error>
      <error line="233" code="50018">No DocBlock was found for property $hasPages</error>
      <error line="234" code="50018">No DocBlock was found for property $systag</error>
      <error line="235" code="50018">No DocBlock was found for property $errors</error>
      <error line="237" code="50010">No DocBlock was found for method __construct()</error>
      <error line="246" code="50010">No DocBlock was found for method check_for_pages()</error>
      <error line="257" code="50010">No DocBlock was found for method debug()</error>
      <error line="262" code="50010">No DocBlock was found for method add_book_link()</error>
    </parse_markers>
  </file>
  <file path="classes/PhotogalleryThumbWithFancybox.class.php" hash="2ae9c7c754efb78d6dfdba164a829cb8" package="Default">
    <docblock line="2">
      <description>stores the PhotogalleryThumbWithFancybox class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="22" package="classes">
      <extends>\GalleryHelper</extends>
      <name>PhotogalleryThumbWithFancybox</name>
      <full_name>\PhotogalleryThumbWithFancybox</full_name>
      <docblock line="6">
        <description>Manages images and markup for a photogallery where
clicking on a little thumb opens the big image in fancybox</description>
        <long-description>&lt;p&gt;It takes care of loading jQuery Fancybox if registered&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$sizes</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="stores the sizes of the images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$images_per_row</name>
        <default/>
        <docblock line="29">
          <description>The number of images per row</description>
          <long-description/>
          <tag line="29" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="39" namespace="global" package="Default">
        <name>$single_image_container_class</name>
        <default/>
        <docblock line="35">
          <description>The image container class</description>
          <long-description/>
          <tag line="35" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$subs</name>
        <default/>
        <docblock line="41">
          <description>Stores the html template</description>
          <long-description/>
          <tag line="41" name="var" description="" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="47">
          <description>Initializes the photogallery</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="classes">
        <name>set_images_per_row</name>
        <full_name>set_images_per_row</full_name>
        <docblock line="68">
          <description>Sets the number of images per row</description>
          <long-description/>
          <tag line="68" name="param" description="a number" type="int" variable="$images_per_row">
            <type by_reference="false">int</type>
          </tag>
          <tag line="68" name="return" description="$this for chainability" type="\PhotogalleryThumbWithFancybox">
            <type by_reference="false">\PhotogalleryThumbWithFancybox</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$images_per_row</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="classes">
        <name>set_single_image_container_class</name>
        <full_name>set_single_image_container_class</full_name>
        <docblock line="78">
          <description>Set the class for single image container</description>
          <long-description/>
          <tag line="78" name="param" description="the class" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="return" description="$this for chainability" type="\PhotogalleryThumbWithFancybox">
            <type by_reference="false">\PhotogalleryThumbWithFancybox</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$class</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="classes">
        <name>set_sizes</name>
        <full_name>set_sizes</full_name>
        <docblock line="88">
          <description>Sets the images sizes: array('w'=&gt;xxx, 'h'=&gt;yyy)</description>
          <long-description/>
          <tag line="88" name="param" description="" type="array" variable="$sizes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="88" name="return" description="$this for chainability" type="\PhotogalleryThumbWithFancybox">
            <type by_reference="false">\PhotogalleryThumbWithFancybox</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$sizes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="98">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="98" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="partials/header.php" hash="3dcfffdb8109f0b444e7c2b07b67eb3a" package="templates\parts">
    <docblock line="2">
      <description>The Header for our theme.</description>
      <long-description>&lt;p&gt;Displays all of the &lt;head&gt; section and everything up till 'main container' div&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/footer.php" hash="161713d40f75fe031be3fd9593cae092" package="templates\parts">
    <docblock line="2">
      <description>The template for displaying the footer.</description>
      <long-description>&lt;p&gt;Contains the closing of the body and html tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/content.php" hash="56814a16ad17817af6344616e8617865" package="templates\parts">
    <docblock line="2">
      <description>The template part for showing a single article (post\page)</description>
      <long-description>&lt;p&gt;This is the default version showing title and full content&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-children.php" hash="420cfec6f8cc59ddd743ad8fa1a6add3" package="templates\parts">
    <docblock line="2">
      <description>Template part for listing child pages</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/slideshow_overlay.php" hash="6ac7d24cb556ae1a207b190f02aaedd0" package="Default">
    <parse_markers>
      <error line="0" code="50007">No page-level DocBlock was found in file partials/slideshow_overlay.php</error>
    </parse_markers>
  </file>
  <file path="partials/menu-brothers.php" hash="ad6837173d5b80e4d7f992bbe3a6a40b" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying the list of child pages</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-secondary.php" hash="c35929b31ca9f387e737f745d9b20745" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying the footer menu</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/content-expandable.php" hash="98b89689206cd233256b1f50ec4b8f9e" package="templates\parts">
    <docblock line="2">
      <description>Template part for a single article (post\page)
Version with title and brief content button to expand it</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/slideshow_controls.php" hash="34a2667831a41debb37d9311f3257857" package="templates\parts">
    <docblock line="2">
      <description>The template part for displaying the slideshow controls</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/children.php" hash="96c8e9296aaa00b4fc0789552d46aac4" package="templates\parts">
    <docblock line="2">
      <description>Template part for listing child pages with post thumbnail and excerpt</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/browsehappy.php" hash="124d8091e92009439104c3757430ccd4" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying a &lt;p&gt; with links to how to update your browser without panic</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/content_twocols.php" hash="38a6619764515ada0db05ce9b1274290" package="templates\parts">
    <docblock line="2">
      <description>The template part for showing a single article (post\page)</description>
      <long-description>&lt;p&gt;In this version the article body will be splitted in two columns;
the first one is filled with the text before &lt;!--more--&gt;
the second with the content after such tag&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-preview.php" hash="f893d5eac3c6c433407a275ca4179699" package="templates\parts">
    <docblock line="2">
      <description>Template part to print a title and an excerpt of every menu entry.</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
    </docblock>
  </file>
  <file path="partials/slideshow.php" hash="3cbe10457c888ff9b42031e8f99302f5" package="templates\parts">
    <docblock line="2">
      <description>The template part for displaying the slideshow</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu.php" hash="f15b2446cd21693ec16926fdd5024db2" package="templates\parts">
    <docblock line="2">
      <description>The Template for displaying the navigation bar</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="front-page.php" hash="2ae0bac3e727159d79e2607b21615ed7" package="templates">
    <docblock line="2">
      <description>The Template for displaying the home page</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="classes" full_name="classes">
    <package name="image manager" full_name="classes\image manager"/>
  </package>
  <package name="core" full_name="core"/>
  <package name="debug" full_name="debug"/>
  <package name="templates" full_name="templates">
    <package name="parts" full_name="templates\parts"/>
  </package>
  <namespace name="global" full_name="global"/>
  <marker count="4">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="2"/>
</project>

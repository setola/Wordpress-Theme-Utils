<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a12" title="WP Theme Utils">
  <file path="index.php" hash="47d8c7e13f19de3b6e5e7c6acff7fdd7" package="templates">
    <docblock line="2">
      <description>The main template file.</description>
      <long-description>&lt;p&gt;This is the most generic template file in a WordPress theme
and one of the two required files for a theme (the other being style.css).
It is used to display a page when nothing more specific matches a query.
E.g., it puts together the home page when no home.php file exists.
Learn more: http://codex.wordpress.org/Template_Hierarchy&lt;/p&gt;</long-description>
      <tag line="2" name="since" description="0.1"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
    </docblock>
  </file>
  <file path="functions.php" hash="a14a3e5e9ed5192de1746e7eb7bad375" package="Default">
    <docblock line="2">
      <description>Theme functions and definitions</description>
      <long-description>&lt;p&gt;When using a child theme (see http://codex.wordpress.org/Theme_Development and
http://codex.wordpress.org/Child_Themes), you can override certain functions
(those wrapped in a function_exists() call) by defining them first in your child theme's
functions.php file. The child theme's functions.php file is included before the parent
theme's file, so the child theme functions would be used.&lt;/p&gt;

&lt;p&gt;Functions that are not pluggable (not wrapped in function_exists()) are instead attached
to a filter or action hook. The hook can be removed by using remove_action() or
remove_filter() and you can attach your own function to the hook.&lt;/p&gt;

&lt;p&gt;We can remove the parent theme's hook only after it is attached, which means we need to
wait until setting up the child theme:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add_action( 'after_setup_theme', 'my_child_theme_setup' );
function my_child_theme_setup() {
    // We are providing our own filter for excerpt_length (or using the unfiltered value)
    remove_filter( 'excerpt_length', 'twentyten_excerpt_length' );
    ...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For more information on hooks, actions, and filters, see http://codex.wordpress.org/Plugin_API.&lt;/p&gt;</long-description>
    </docblock>
    <include line="36" type="Include Once" package="Default">
      <name>classes/ThemeUtils.class.php</name>
    </include>
    <function namespace="global" line="35" package="core">
      <name>wordpress_theme_utils_initialize_hook</name>
      <full_name>\wordpress_theme_utils_initialize_hook</full_name>
      <docblock line="30">
        <description>Automatic initialization for the framework settings</description>
        <long-description/>
        <tag line="30" name="package" description="core"/>
        <tag line="30" name="version" description="1.0.0"/>
      </docblock>
    </function>
    <function namespace="global" line="56" package="core">
      <name>http_build_url</name>
      <full_name>\http_build_url</full_name>
      <docblock line="45">
        <description>Build a URL.</description>
        <long-description>&lt;p&gt;The parts of the second URL will be merged into the first according to the flags argument.
PECT_HTTP is usually missing on many environment.
This function provides the same feature as the function included in PECT_HTTP.&lt;/p&gt;</long-description>
        <tag line="45" name="see" description="http://php.net/manual/en/function.http-build-url.php" refers="\global\@link"/>
        <tag line="45" name="param" description="the array to be merged" type="array" variable="$parsed_url">
          <type by_reference="false">array</type>
        </tag>
        <tag line="45" name="package" description="core"/>
        <tag line="45" name="return" description="the url" type="string">
          <type by_reference="false">string</type>
        </tag>
      </docblock>
      <argument line="56">
        <name>$parsed_url</name>
        <default/>
        <type/>
      </argument>
    </function>
  </file>
  <file path="404.php" hash="7867d52558f1a25ce8b15ca9d98093a8" package="templates">
    <docblock line="2">
      <description>The template for displaying 404 pages (Not Found).</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="classes/ImagePreload.class.php" hash="666e548187f5de0377a6fc74ec058121" package="Default">
    <docblock line="2">
      <description>Contains ImagePreload class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends>\GalleryHelper</extends>
      <name>ImagePreload</name>
      <full_name>\ImagePreload</full_name>
      <docblock line="8">
        <description>Takes care of image preloading with jQuery imagesloaded</description>
        <long-description/>
        <tag line="8" name="author" description="etessore"/>
        <tag line="8" name="version" description="1.0.0"/>
        <tag line="8" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="20" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="16">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="16" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/SpecialOffersSnippetAjax.class.php" hash="df156aa51c6c3de79a703b9e1060cfad" package="Default">
    <docblock line="2">
      <description>Contains the SpecialOffersSnippetAjax class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>SpecialOffersSnippetAjax</name>
      <full_name>\SpecialOffersSnippetAjax</full_name>
      <docblock line="6">
        <description>Hook to WP Ajax system to get the special offers snippet url</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="14" package="classes">
        <name>ajax_action</name>
        <full_name>ajax_action</full_name>
        <value>'offer-snippet'</value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="16">
          <description>Default constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="23">
          <description>Hooks this feature into wordpress</description>
          <long-description/>
          <tag line="23" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="36" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="33">
          <description>Function called by admin-ajax.php</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/FeatureWithAssets.class.php" hash="59e997c97759eb4f38840fb8a93814f6" package="Default">
    <docblock line="2">
      <description>Contains the FeatureWithAssets class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="classes">
      <extends/>
      <name>FeatureWithAssets</name>
      <full_name>\FeatureWithAssets</full_name>
      <docblock line="7">
        <description>Manages the assets loading for a feature.</description>
        <long-description>&lt;p&gt;WARNING: this method doesn't register the asset:
You have to take care of it by yourself (tipically in assets.php)&lt;/p&gt;</long-description>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.1"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$assets</name>
        <default>array('js' =&gt; array(), 'css' =&gt; array())</default>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="the list of assets to be loaded array('js'=&gt;array(...), 'css'=&gt;array(...));" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="37" package="classes">
        <name>set_assets</name>
        <full_name>set_assets</full_name>
        <docblock line="32">
          <description>Set the assets list to the given one</description>
          <long-description/>
          <tag line="32" name="param" description="the list of assets: array('js'=&gt;array(...), 'css'=&gt;array(...));" type="array" variable="$assets">
            <type by_reference="false">array</type>
          </tag>
          <tag line="32" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$assets</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="classes">
        <name>add_asset</name>
        <full_name>add_asset</full_name>
        <docblock line="48">
          <description>Adds an asset.</description>
          <long-description>&lt;p&gt;You cannot define an asset here,
to do it please use wp_register_script or wp_register_style
in functions.php or config/assets.php
WARNING: this method doesn't register the asset:
You have to take care of it by yourself (tipically in assets.php)&lt;/p&gt;</long-description>
          <tag line="48" name="param" description="the handle for the asset." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="param" description="the asset type: js|css" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="64">
          <description>Loads needed scripts and css</description>
          <long-description/>
          <tag line="64" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="classes">
        <name>load_assets_callback</name>
        <full_name>load_assets_callback</full_name>
        <docblock line="75">
          <description>Loads needed scripts and css</description>
          <long-description/>
          <tag line="75" name="return" description="$this for chainability" type="\FeatureWithAssets">
            <type by_reference="false">\FeatureWithAssets</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DefaultAssets.class.php" hash="7f188a8d35133604b78fafcc8e4db06b" package="Default">
    <docblock line="2">
      <description>Contains the DefaultAssets class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>DefaultAssets</name>
      <full_name>\DefaultAssets</full_name>
      <docblock line="6">
        <description>Register some useful assets in WordPress</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="global" package="Default">
        <name>$assets</name>
        <default>array('css' =&gt; array(), 'js' =&gt; array())</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="manages the list of css and js" type="\arrary">
            <type by_reference="false">\arrary</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$base_dir</name>
        <default>array()</default>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="stores infos on path and uri" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Register some assets and hooks into WP</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>register_standard</name>
        <full_name>register_standard</full_name>
        <docblock line="33">
          <description>Register some assets for generic use
Put here yout JS libraries and Generic CSS like reset.css or similar</description>
          <long-description/>
          <tag line="33" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="84" package="classes">
        <name>register_custom</name>
        <full_name>register_custom</full_name>
        <docblock line="79">
          <description>Register some assets to be used in the theme.</description>
          <long-description>&lt;p&gt;Put here your custom scripts.&lt;/p&gt;</long-description>
          <tag line="79" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="classes">
        <name>add_js</name>
        <full_name>add_js</full_name>
        <docblock line="135">
          <description>Adds a javascript to the current set</description>
          <long-description/>
          <tag line="135" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_script" refers="\@link"/>
          <tag line="135" name="param" description="Script name" type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="Script url" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="135" name="param" description="(optional) Array of script names on which this script depends" type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="135" name="param" description="(optional) Script version (used for cache busting), set to NULL to disable" type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="135" name="param" description="(optional) Whether to enqueue the script before &lt;/head&gt; or before &lt;/body&gt;" type="bool" variable="$in_footer">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="135" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="145">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="145">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="145">
          <name>$in_footer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="168" package="classes">
        <name>add_css</name>
        <full_name>add_css</full_name>
        <docblock line="156">
          <description>Adds a css to the current set</description>
          <long-description/>
          <tag line="156" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_style" refers="\@link"/>
          <tag line="156" name="param" description="Name of the stylesheet." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="Path to the stylesheet from the root directory of WordPress. Example: '/css/mystyle.css'." type="string|bool" variable="$src">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="156" name="param" description="Array of handles of any stylesheet that this stylesheet depends on.&#10; (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies." type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="param" description="String specifying the stylesheet version number. Set to NULL to disable.&#10; Used to ensure that the correct version is sent to the client regardless of caching." type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="156" name="param" description="The media for which this stylesheet has been defined." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="$this for chainability" type="\DefaultAssets">
            <type by_reference="false">\DefaultAssets</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="168">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="168">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="168">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="168">
          <name>$media</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="179">
          <description>Hooks the assets registration into wordpress init hook</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="classes">
        <name>callback</name>
        <full_name>callback</full_name>
        <docblock line="187">
          <description>This is called on wordpress init
Tries to load asset from the child theme,
if the asset file doesn't exists it loads
from the parent theme</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/AjaxImageGenerator.class.php" hash="dca1eda2b0acb741c769065a92280656" package="Default">
    <docblock line="2">
      <description>Contains AjaxImageGenerator class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends/>
      <name>AjaxImageGenerator</name>
      <full_name>\AjaxImageGenerator</full_name>
      <docblock line="7">
        <description>Hooks the ImageGenerator class to admin-ajax action</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="19" namespace="global" package="Default">
        <name>$is_hooked</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="hook to WordPress only once" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="21">
          <description>Sets the admin-ajax hooks</description>
          <long-description/>
          <tag line="21" name="param" description="is the hook available for registered users?" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="21" name="param" description="is the hook available for the non-registered users?" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="26">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="37" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="32">
          <description>Sets the admin-ajax hooks</description>
          <long-description/>
          <tag line="32" name="param" description="is the hook available for registered users?" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="32" name="param" description="is the hook available for the non-registered users?" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="37">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="50" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="46">
          <description>This method is called by the admin-ajax subsystem.</description>
          <long-description>&lt;p&gt;Prints the image.&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/TinyMCEExcerpt.class.php" hash="cfdaa985c2e776096747f4f9812f0700" package="Default">
    <docblock line="2">
      <description>Contains TinyMCEExcerptCustomization class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>TinyMCEExcerptCustomization</name>
      <full_name>\TinyMCEExcerptCustomization</full_name>
      <docblock line="6">
        <description>This class removes the default excerpt metabox
and adds a new box with the wysiwyg editor capability</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="14" package="classes">
        <name>textdomain</name>
        <full_name>textdomain</full_name>
        <value>''</value>
      </constant>
      <constant namespace="global" line="15" package="classes">
        <name>custom_exceprt_slug</name>
        <full_name>custom_exceprt_slug</full_name>
        <value>'_custom-excerpt'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="20" namespace="global" package="Default">
        <name>$contexts</name>
        <default/>
        <docblock line="17">
          <description/>
          <long-description/>
          <tag line="17" name="var" description="a list of context where wysiwyg editor is required" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="22">
          <description>Set the feature up</description>
          <long-description/>
          <tag line="22" name="param" description="a list of context where you want the wysiwyg editor in the excerpt field. Defatul array('post','page')" type="array" variable="$contexts">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="26">
          <name>$contexts</name>
          <default>array('post', 'page')</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="39" package="classes">
        <name>remove_excerpt_metabox</name>
        <full_name>remove_excerpt_metabox</full_name>
        <docblock line="36">
          <description>Removes the default editor for the excerpt</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="classes">
        <name>add_tinymce_to_excerpt_metabox</name>
        <full_name>add_tinymce_to_excerpt_metabox</full_name>
        <docblock line="44">
          <description>Adds a new excerpt editor with the wysiwyg editor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="classes">
        <name>custom_trim_excerpt</name>
        <full_name>custom_trim_excerpt</full_name>
        <docblock line="59">
          <description>Manages the excerpt escaping process</description>
          <long-description/>
          <tag line="59" name="param" description="the default filtered version" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="param" description="the raw version" type="string" variable="$raw_excerpt">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$text</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$raw_excerpt</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="75" package="classes">
        <name>tinymce_excerpt_box</name>
        <full_name>tinymce_excerpt_box</full_name>
        <docblock line="71">
          <description>Prints the markup for the tinymce excerpt box</description>
          <long-description/>
          <tag line="71" name="param" description="the post object" type="object" variable="$post">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$post</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>save_box</name>
        <full_name>save_box</full_name>
        <docblock line="90">
          <description>Called when the post is beeing saved</description>
          <long-description/>
          <tag line="90" name="param" description="the post id" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/OneImageForAll.class.php" hash="e4571f51320ea22e4bc2ceec523ee413" package="Default">
    <docblock line="2">
      <description>Contains OneImageForAll class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\GalleryHelper</extends>
      <name>OneImageForAll</name>
      <full_name>\OneImageForAll</full_name>
      <docblock line="6">
        <description>Merges all images of a gallery in only one and serve it as a sprite
Important: every image have the same sizes and jpeg quality.</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$cache_name</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="stores the name of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$cache_dir</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="stores the base directory of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$cache_url</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="stores the url of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$cache_path</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="stores the path of the cache file" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$force_image_refresh</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="true if you want to force cache refresh" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="42" namespace="global" package="Default">
        <name>$config</name>
        <default/>
        <docblock line="39">
          <description/>
          <long-description/>
          <tag line="39" name="var" description="stores the configuration" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" namespace="global" package="Default">
        <name>$no_images</name>
        <default/>
        <docblock line="44">
          <description/>
          <long-description/>
          <tag line="44" name="var" description="to be returned when no image is available" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="52" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Initializes the object with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="57">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="57" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="classes">
        <name>get_style</name>
        <full_name>get_style</full_name>
        <docblock line="80">
          <description>Calculates the style for the $image_id</description>
          <long-description/>
          <tag line="80" name="param" description="the index of the image" type="int" variable="$image_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="80" name="return" description="the style html attribute" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$image_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="classes">
        <name>check_config</name>
        <full_name>check_config</full_name>
        <docblock line="92">
          <description>Checks if the config has all the paramaters needed.</description>
          <long-description/>
          <tag line="92" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="classes">
        <name>cache_names</name>
        <full_name>cache_names</full_name>
        <docblock line="114">
          <description>Calculates the cache name, dir, url and path.</description>
          <long-description/>
          <tag line="114" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="143" package="classes">
        <name>merge_images</name>
        <full_name>merge_images</full_name>
        <docblock line="139">
          <description>Merges the images in the current object and returns the url to the big image.</description>
          <long-description/>
          <tag line="139" name="return" description="$this for chainability" type="\OneImageForAll">
            <type by_reference="false">\OneImageForAll</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/NewBlogInitializator.class.php" hash="a44a566a51fb1888fdc4b2cb932d6430" package="Default">
    <docblock line="2">
      <description>Stores class for inserting initial datas into a new blog</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends/>
      <name>NewBlogInitializator</name>
      <full_name>\NewBlogInitializator</full_name>
      <docblock line="7">
        <description>Fills the brand new blog with starting data</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$blog_id</name>
        <default/>
        <docblock line="17">
          <description>In a MultiSite environment stores the blog id</description>
          <long-description/>
          <tag line="17" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$theme</name>
        <default/>
        <docblock line="23">
          <description>Stores the parameter for the new blog theme</description>
          <long-description/>
          <tag line="23" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="33" namespace="global" package="Default">
        <name>$pages</name>
        <default>array()</default>
        <docblock line="29">
          <description>Stores the list of automatically created pages</description>
          <long-description/>
          <tag line="29" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="35">
          <description>Hooks the initial data filling into WordPress</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="49" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="42">
          <description>Initializes the blog with starting data.</description>
          <long-description>&lt;p&gt;Overload this in a child ob ject if you need customization on starting data&lt;/p&gt;</long-description>
          <tag line="42" name="param" description="the blog id" type="int" variable="$blog_id">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$blog_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="76" package="classes">
        <name>create_menu</name>
        <full_name>create_menu</full_name>
        <docblock line="66">
          <description>Creates the menu with given name</description>
          <long-description>&lt;p&gt;If a menu with given name exists this method will return its id.
If $location parameter is passed this method will assign the menu with given $name to such location&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="the menu name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="" type="string" variable="$location">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="&lt;mixed, boolean, unknown, multitype:, NULL, WP_Error, object, array|object, string, number, error, multitype:mixed unknown , multitype:number mixed , multitype:number Ambigous &lt;string, NULL&gt; &gt;" type="\Ambigous">
            <type by_reference="false">\Ambigous</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
        <argument line="76">
          <name>$location</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>select_blog</name>
        <full_name>select_blog</full_name>
        <docblock line="90">
          <description>In a MultiSite environment selects the right blog</description>
          <long-description/>
          <tag line="90" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="105" package="classes">
        <name>delete_default_posts</name>
        <full_name>delete_default_posts</full_name>
        <docblock line="101">
          <description>Removes the default 'Hello World' post and page</description>
          <long-description/>
          <tag line="101" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="117" package="classes">
        <name>add_page</name>
        <full_name>add_page</full_name>
        <docblock line="112">
          <description>Inserts a new page into WP</description>
          <long-description/>
          <tag line="112" name="param" description="page details according to {@link http://codex.wordpress.org/Function_Reference/wp_insert_post wp_insert_post()}" type="string|array" variable="$parms">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="112" name="return" description="the post id" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$parms</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="155" package="classes">
        <name>get_page_details</name>
        <full_name>get_page_details</full_name>
        <docblock line="150">
          <description>Gets the automatically generated page details</description>
          <long-description/>
          <tag line="150" name="param" description="the id of the page" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="150" name="return" description="list of details, false if the $index doesn't point to an automatically generated page" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="classes">
        <name>add_menu_entry</name>
        <full_name>add_menu_entry</full_name>
        <docblock line="159">
          <description>Adds an automatically generated page to the given menu</description>
          <long-description/>
          <tag line="159" name="param" description="the index of $this-&gt;pages array" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="param" description="the menu id" type="int" variable="$menu_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="159" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
        <argument line="165">
          <name>$menu_id</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="classes">
        <name>add_menu_entries</name>
        <full_name>add_menu_entries</full_name>
        <docblock line="181">
          <description>Adds all automatically generated pages to the given menu</description>
          <long-description/>
          <tag line="181" name="param" description="the menu id" type="int" variable="$menu_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="param" description="the first element index" type="int" variable="$start">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="param" description="the last element index" type="int" variable="$end">
            <type by_reference="false">int</type>
          </tag>
          <tag line="181" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$menu_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="188">
          <name>$start</name>
          <default>0</default>
          <type/>
        </argument>
        <argument line="188">
          <name>$end</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="201" package="classes">
        <name>reset_page_list</name>
        <full_name>reset_page_list</full_name>
        <docblock line="197">
          <description>Resets the list of the automatically generated pages</description>
          <long-description/>
          <tag line="197" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="classes">
        <name>add_theme</name>
        <full_name>add_theme</full_name>
        <docblock line="207">
          <description>Creates the basic structure for a child theme.</description>
          <long-description>&lt;p&gt;This method tries to make a new theme directory
under the wp-contents/themes.
Then tries to create style.css in the newly
theme folder and fill it with the default header comment&lt;/p&gt;

&lt;p&gt;An example of parameters:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$defaults = array(
        'name'          =&gt;  'Wordpress Theme Utils Child Theme',
        'folder'        =&gt;  'wtu-child-theme',
        'child_of'      =&gt;  'Wordpress-Theme-Utils',
        'description'   =&gt;  'This is a Child Theme of Wordpress Theme Utils',
        'theme_uri'     =&gt;  'http://www.emanueletessore.com/',
        'author'        =&gt;  'Emanuele Tessore',
        'author_uri'    =&gt;  'http://www.emanueletessore.com/',
        'version'       =&gt;  '1.0.0'
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Uses {@link http://codex.wordpress.org/Function_Reference/wp_die wp_die()} if something goes wrong&lt;/p&gt;</long-description>
          <tag line="207" name="param" description="parameters for the new theme" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="207" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$parms</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="299" package="classes">
        <name>enable_theme</name>
        <full_name>enable_theme</full_name>
        <docblock line="295">
          <description>Enables the new theme for the current blog</description>
          <long-description/>
          <tag line="295" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="328" package="classes">
        <name>delete_all_pages</name>
        <full_name>delete_all_pages</full_name>
        <docblock line="321">
          <description>Deletes all pages</description>
          <long-description>&lt;p&gt;WARNING: it does NOT ask if you're sure!!!&lt;/p&gt;</long-description>
          <tag line="321" name="return" description="$this for chainability" type="\NewBlogInitializator">
            <type by_reference="false">\NewBlogInitializator</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/GMapDataRetriever.class.php" hash="87cf51afb26e7b1fb5e2605527dec350" package="Default">
    <docblock line="2">
      <description>Stores the GMapDataRetriever class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>GMapDataRetriever</name>
      <full_name>\GMapDataRetriever</full_name>
      <docblock line="6">
        <description>Retrieves GMaps data for the gmap.js integration</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="16" namespace="global" package="Default">
        <name>$map_data</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="stores some map data" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="24" package="classes">
        <name>set_map_data</name>
        <full_name>set_map_data</full_name>
        <docblock line="19">
          <description>Set the map data to the given set</description>
          <long-description/>
          <tag line="19" name="param" description="the map data" type="array" variable="$map_data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="19" name="return" description="$this for chainability" type="\GMapDataRetriever">
            <type by_reference="false">\GMapDataRetriever</type>
          </tag>
        </docblock>
        <argument line="24">
          <name>$map_data</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="classes">
        <name>use_simple_fields</name>
        <full_name>use_simple_fields</full_name>
        <docblock line="29">
          <description>Set the class to get map datas from the Simple fields plugin
Checks if the plugin is enabled.</description>
          <long-description/>
          <tag line="29" name="return" description="$this for chainability" type="\GMapDataRetriever">
            <type by_reference="false">\GMapDataRetriever</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="83" package="classes">
        <name>get_script_content</name>
        <full_name>get_script_content</full_name>
        <docblock line="78">
          <description>Get a &lt;script&gt; tag with a JSON variable in it.</description>
          <long-description/>
          <tag line="78" name="example" description="GMapDataRetriever.example.json"/>
          <tag line="78" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="90" package="classes">
        <name>the_script</name>
        <full_name>the_script</full_name>
        <docblock line="87">
          <description>Prints the &lt;scrpt&gt; tag generated by get_script_content to the DOM</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/SimpleFieldsQuickConfig.class.php" hash="10449fd05fc2477587106f957c09ee6c" package="Default">
    <docblock line="2">
      <description>Contains SimpleFieldsQuickConfig class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="16" package="classes">
      <extends/>
      <name>SimpleFieldsQuickConfig</name>
      <full_name>\SimpleFieldsQuickConfig</full_name>
      <docblock line="6">
        <description>Perform a quick configuration for Simple Fields plugin</description>
        <long-description>&lt;p&gt;It uses the default values used by FastBooking
By default you only need to call in functions.php:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;new SimpleFieldsQuickConfig();&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$post_type</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="the post type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$groups</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="stores the Simple Fields groups" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="31" namespace="global" package="Default">
        <name>$connectors</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Simple Fields connectors" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="36" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="33">
          <description>Initializes the default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="280" package="classes">
        <name>set_post_type</name>
        <full_name>set_post_type</full_name>
        <docblock line="276">
          <description>Set the post type to the given parameter</description>
          <long-description/>
          <tag line="276" name="param" description="the post type" type="array" variable="$post_type">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$post_type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="289" package="classes">
        <name>set_groups</name>
        <full_name>set_groups</full_name>
        <docblock line="285">
          <description>Set the post groups to the given parameter</description>
          <long-description/>
          <tag line="285" name="param" description="the groups" type="array" variable="$groups">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="289">
          <name>$groups</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="298" package="classes">
        <name>set_connectors</name>
        <full_name>set_connectors</full_name>
        <docblock line="294">
          <description>Set the post connectors to the given parameter</description>
          <long-description/>
          <tag line="294" name="param" description="the post connectors" type="array" variable="$connectors">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="298">
          <name>$connectors</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="310" package="classes">
        <name>check_config</name>
        <full_name>check_config</full_name>
        <docblock line="303">
          <description>Check if a config for the Simple Fields plugin exists,
elsewhere it will add the default one.</description>
          <long-description>&lt;p&gt;For better performance this check is limited
only to the admin pages, not to the public pages.
So if you wanna add the default values you'll have to visit wp-admin&lt;/p&gt;</long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DebugUtils.class.php" hash="8c71647925221c37c09bf769ed23c635" package="Default">
    <docblock line="2">
      <description>Stores DebugUtils class definition</description>
      <long-description/>
    </docblock>
    <function namespace="global" line="154" package="debug">
      <name>vd</name>
      <full_name>\vd</full_name>
      <docblock line="147">
        <description>Quick and dirty way to know a variable value
vd stand for &lt;b&gt;v&lt;/b&gt;ar_dump() and &lt;b&gt;d&lt;/b&gt;ie()</description>
        <long-description/>
        <tag line="147" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="147" name="package" description="debug"/>
        <tag line="147" name="version" description="1.0.0"/>
      </docblock>
      <argument line="154">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="170" package="debug">
      <name>v</name>
      <full_name>\v</full_name>
      <docblock line="163">
        <description>Quick and dirty way to know a variable value
Usefull in a loop cause it doesn't break the execution with die</description>
        <long-description/>
        <tag line="163" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="163" name="package" description="debug"/>
        <tag line="163" name="version" description="1.0.0"/>
      </docblock>
      <argument line="170">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="186" package="debug">
      <name>vc</name>
      <full_name>\vc</full_name>
      <docblock line="179">
        <description>Quick and dirty way to know a variable value in a production enviroment
vc stand for &lt;b&gt;v&lt;/b&gt;ar_dump() on a &lt;b&gt;c&lt;/b&gt;omment</description>
        <long-description/>
        <tag line="179" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="179" name="package" description="debug"/>
        <tag line="179" name="version" description="1.0.0"/>
      </docblock>
      <argument line="186">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <function namespace="global" line="202" package="debug">
      <name>debug</name>
      <full_name>\debug</full_name>
      <docblock line="195">
        <description>Quick and dirty way to know a variable value.</description>
        <long-description>&lt;p&gt;It uses the last changed mode.&lt;/p&gt;</long-description>
        <tag line="195" name="param" description="the variable to be dumped" type="mixed" variable="$var">
          <type by_reference="false">mixed</type>
        </tag>
        <tag line="195" name="package" description="debug"/>
        <tag line="195" name="version" description="1.0.0"/>
      </docblock>
      <argument line="202">
        <name>$var</name>
        <default/>
        <type/>
      </argument>
    </function>
    <class final="true" abstract="false" namespace="global" line="11" package="classes">
      <extends/>
      <name>DebugUtils</name>
      <full_name>\DebugUtils</full_name>
      <docblock line="6">
        <description>Utils to debug the code while writing it.</description>
        <long-description/>
        <tag line="6" name="author" description="Emanuele 'Tex' Tessore"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="42" package="classes">
        <name>COMMENT</name>
        <full_name>COMMENT</full_name>
        <value>1</value>
        <docblock line="39">
          <description>Wrap the var_dump into an html comment</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="47" package="classes">
        <name>H1_PRE</name>
        <full_name>H1_PRE</full_name>
        <value>2</value>
        <docblock line="44">
          <description>Print a well visible H1 and the dump is wrapped in a pre</description>
          <long-description/>
        </docblock>
      </constant>
      <constant namespace="global" line="53" package="classes">
        <name>H1_PRE_DIE</name>
        <full_name>H1_PRE_DIE</full_name>
        <value>3</value>
        <docblock line="49">
          <description>Print a well visible H1, use a pre as wrapper for the variable
dump and then stop the execution of the script</description>
          <long-description/>
        </docblock>
      </constant>
      <property final="false" static="true" visibility="private" line="16" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="singleton instance" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="21" namespace="global" package="Default">
        <name>$level</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="the level of debug: html comments, h1 and pre, h1 pre and die." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="26" namespace="global" package="Default">
        <name>$title</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="the title to be printed on top of the variable dump" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$template</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="the template for the debug section" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$status</name>
        <default>false</default>
        <docblock line="33">
          <description>Enable or disable all debugs</description>
          <long-description/>
          <tag line="33" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="58" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="55">
          <description>Initializes the default settings</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="73" package="classes">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="68">
          <description>This object is a Singleton.</description>
          <long-description>&lt;p&gt;This method gets the instance of it.&lt;/p&gt;</long-description>
          <tag line="68" name="return" description="the single instance of the class" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="87" package="classes">
        <name>set_level</name>
        <full_name>set_level</full_name>
        <docblock line="81">
          <description>Sets the level of output.</description>
          <long-description>&lt;p&gt;Use DebugUtils::SOFT DebugUtils::H1_PRE or DebugUtils::H1_PRE_DIE&lt;/p&gt;</long-description>
          <tag line="81" name="param" description="the level" type="int" variable="$level">
            <type by_reference="false">int</type>
          </tag>
          <tag line="81" name="return" description="for chaining" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$level</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="96" package="classes">
        <name>get_level</name>
        <full_name>get_level</full_name>
        <docblock line="92">
          <description>Retrieves the current level of echo</description>
          <long-description/>
          <tag line="92" name="return" description="current level of echo" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="104" package="classes">
        <name>debug</name>
        <full_name>debug</full_name>
        <docblock line="100">
          <description>Prints the dump for the given $var</description>
          <long-description/>
          <tag line="100" name="param" description="the variable to be dumped" type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$var</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="classes">
        <name>set_title</name>
        <full_name>set_title</full_name>
        <docblock line="131">
          <description>Sets the title of the box</description>
          <long-description/>
          <tag line="131" name="param" description="" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="for chaining" type="\DebugUtils">
            <type by_reference="false">\DebugUtils</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ForceDownload.class.php" hash="15da324b2b568c9fbf1f3efa0fa874a7" package="Default">
    <docblock line="2">
      <description>Contains ForceDownload class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>ForceDownload</name>
      <full_name>\ForceDownload</full_name>
      <docblock line="6">
        <description>Force an attachment to be downloaded</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="19" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Enables the force to download feature</description>
          <long-description/>
          <tag line="14" name="param" description="" type="bool" variable="$priv">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="14" name="param" description="" type="bool" variable="$nopriv">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$priv</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="19">
          <name>$nopriv</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="27" package="classes">
        <name>force_download</name>
        <full_name>force_download</full_name>
        <docblock line="24">
          <description>AJAX callback for forcing the download of a file</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="48" package="classes">
        <name>check_request</name>
        <full_name>check_request</full_name>
        <docblock line="44">
          <description>Tests if the $_REQUEST[] field is valid
Overload this to insert more checks</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="64" package="classes">
        <name>force_download_anchor</name>
        <full_name>force_download_anchor</full_name>
        <docblock line="56">
          <description>Calculates the url for the attachment with id $id</description>
          <long-description/>
          <tag line="56" name="param" description="the attachment id" type="int" variable="$id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="param" description="the text inside the &lt;a&gt; tag" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="param" description="additional parameters for the &lt;a&gt; tag" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
          <tag line="56" name="see" description="\ThemeHelpers::anchor()" refers="\ThemeHelpers::anchor()"/>
          <tag line="56" name="return" description="an &lt;a&gt; tag" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$id</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="64">
          <name>$parms</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ShowTitleThumbExcerptWalkerNavMenu.class.php" hash="ceb5551f7676ba8431fc1872a7206fa7" package="Default">
    <docblock line="2">
      <description>Contains the ShowTitleThumbExcerptWalkerNavMenu class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>ShowTitleThumbExcerptWalkerNavMenu</name>
      <full_name>\ShowTitleThumbExcerptWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Shows the title, the post thumbnail
and the excerpt for every menu entry.</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="the substition template" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="see" description="\SubstitutionTemplate" refers="\SubstitutionTemplate"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes the object</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="48" package="classes">
        <name>end_el</name>
        <full_name>end_el</full_name>
        <docblock line="41">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="41" name="see" description="\Walker_Nav_Menu::end_el()" refers="\Walker_Nav_Menu::end_el()"/>
          <tag line="41" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="41" name="param" description="Page data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="41" name="param" description="Depth of page." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="48">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ShortcodeForTabs.class.php" hash="fb25b3ec0d90ec019ff61df89cbef7ff" package="Default">
    <docblock line="3">
      <description>Stores ShortcodeForTabs class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="28" package="classes">
      <extends/>
      <name>ShortcodeForTabs</name>
      <full_name>\ShortcodeForTabs</full_name>
      <docblock line="10">
        <description>Manages tabs design with shortcodes.</description>
        <long-description>&lt;p&gt;Use [tab]&lt;some text&gt;[/tab] to wrap the content
of a single tag and then [tabs-list] for the
list of the tabs in the current post content.&lt;/p&gt;

&lt;p&gt;These optional parameter are available:
    icon    =   string|int number if you want a incon from the media library, string for the &lt;img&gt; tag src attribute
    class   =   string class attribute for the current tab div
    title   =   string the title of the tab
    list    =   boolean set to false if you want to remove the current entry from the tabs list&lt;/p&gt;</long-description>
        <tag line="10" name="author" description="etessore"/>
        <tag line="10" name="version" description="1.0.0"/>
        <tag line="10" name="package" description="classes"/>
        <tag line="10" name="since" description="1.0"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="33" namespace="global" package="Default">
        <name>$tab_shortcode</name>
        <default>'tab'</default>
        <docblock line="29">
          <description>Stores the shortcode used for wrapping a single tab</description>
          <long-description/>
          <tag line="29" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="39" namespace="global" package="Default">
        <name>$list_shortcode</name>
        <default>'tabs_list'</default>
        <docblock line="35">
          <description>Stores the shortcode for placing the tabs lis</description>
          <long-description/>
          <tag line="35" name="var" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="45" namespace="global" package="Default">
        <name>$tab_tpl</name>
        <default/>
        <docblock line="41">
          <description>Substitution template for the single tab</description>
          <long-description/>
          <tag line="41" name="var" description="" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="51" namespace="global" package="Default">
        <name>$list_tpl</name>
        <default/>
        <docblock line="47">
          <description>Substitution template for the tabs list</description>
          <long-description/>
          <tag line="47" name="var" description="" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="57" namespace="global" package="Default">
        <name>$list_of_entries</name>
        <default>array()</default>
        <docblock line="53">
          <description>Stores the list of tabs for the current post</description>
          <long-description/>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" namespace="global" package="Default">
        <name>$number_of_entries</name>
        <default>0</default>
        <docblock line="59">
          <description>Stores the number of tabs for the current post</description>
          <long-description/>
          <tag line="59" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="68" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="65">
          <description>Initializes the istance with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="80" package="classes">
        <name>add_shordcode</name>
        <full_name>add_shordcode</full_name>
        <docblock line="75">
          <description>Register the needed shortcodes with WordPress subsystem</description>
          <long-description/>
          <tag line="75" name="param" description="true if you want to enable the shortcode for the single tab" type="boolean" variable="$tab">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="75" name="param" description="true if you want to enable the shortcode for the list of tabs" type="boolean" variable="$list">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$tab</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="80">
          <name>$list</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="90" package="classes">
        <name>delete_shortcode</name>
        <full_name>delete_shortcode</full_name>
        <docblock line="85">
          <description>Deletes the shortcodes used in this feature</description>
          <long-description/>
          <tag line="85" name="param" description="true if you want to remove the shortcode for the single tab" type="boolean" variable="$tab">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="85" name="param" description="true if you want to remove the shortcode for the list of tabs" type="boolean" variable="$list">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$tab</name>
          <default>true</default>
          <type/>
        </argument>
        <argument line="90">
          <name>$list</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="classes">
        <name>tab_hook</name>
        <full_name>tab_hook</full_name>
        <docblock line="95">
          <description>This is called back by wordpress when a tab shortcode is found</description>
          <long-description/>
          <tag line="95" name="param" description="" type="\unknown_type" variable="$atts">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="95" name="param" description="the content wrapped into the shortcode" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$atts</name>
          <default/>
          <type/>
        </argument>
        <argument line="100">
          <name>$content</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="139" package="classes">
        <name>get_image</name>
        <full_name>get_image</full_name>
        <docblock line="131">
          <description>Get the image for the tab.</description>
          <long-description>&lt;p&gt;build the image for this tab: take it from the media
library if the parameter is a number, use such parameter
as src attribute for img tag if it's not a number.&lt;/p&gt;</long-description>
          <tag line="131" name="param" description="id of the image or string of the src parameter" type="int|string" variable="$parm">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$parm</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="150" package="classes">
        <name>list_hook</name>
        <full_name>list_hook</full_name>
        <docblock line="146">
          <description>This is called back by WordPress when the tab list shortcode is found</description>
          <long-description/>
          <tag line="146" name="param" description="User defined attributes in shortcode tag." type="array" variable="$atts">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$atts</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="180" package="classes">
        <name>build_list</name>
        <full_name>build_list</full_name>
        <docblock line="173">
          <description>Builds the list of tabs.</description>
          <long-description>&lt;p&gt;This is called to be sure we don't leave no tab behind
Thanks to Viper007Bond: @link http://www.viper007bond.com/2009/11/22/wordpress-code-earlier-shortcodes/&lt;/p&gt;</long-description>
          <tag line="173" name="param" description="the post content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="180">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ThemeUtils.class.php" hash="0714725642b9ce0f257286277d165c4c" package="Default">
    <docblock line="2">
      <description>Stores the code for the parent theme setting initialization and management</description>
      <long-description/>
    </docblock>
    <include line="47" type="Include Once" package="Default">
      <name/>
    </include>
    <constant namespace="global" line="95" package="Default">
      <name>WORDPRESS_THEME_UTILS_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_PATH</full_name>
      <value>dirname(__DIR__)</value>
    </constant>
    <constant namespace="global" line="101" package="Default">
      <name>WORDPRESS_THEME_UTILS_REGISTER_TOP_MENU</name>
      <full_name>\WORDPRESS_THEME_UTILS_REGISTER_TOP_MENU</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="107" package="Default">
      <name>WORDPRESS_THEME_UTILS_REGISTER_BOTTOM_MENU</name>
      <full_name>\WORDPRESS_THEME_UTILS_REGISTER_BOTTOM_MENU</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="113" package="Default">
      <name>WORDPRESS_THEME_UTILS_PARTIALS_RELATIVE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_PARTIALS_RELATIVE_PATH</full_name>
      <value>'partials/'</value>
    </constant>
    <constant namespace="global" line="119" package="Default">
      <name>WORDPRESS_THEME_UTILS_AUTOLOADER_RELATIVE_PATH</name>
      <full_name>\WORDPRESS_THEME_UTILS_AUTOLOADER_RELATIVE_PATH</full_name>
      <value>'/classes/ClassAutoloader.class.php'</value>
    </constant>
    <function namespace="global" line="128" package="Default">
      <name>wtu_init</name>
      <full_name>\wtu_init</full_name>
      <docblock line="124">
        <description>Initializes the WordPress Theme Utils.</description>
        <long-description>&lt;p&gt;Use this in your child theme functions.php&lt;/p&gt;</long-description>
      </docblock>
    </function>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>ThemeUtils</name>
      <full_name>\ThemeUtils</full_name>
      <docblock line="7">
        <description>Initializes and manages the parent theme config and constants</description>
        <long-description/>
        <tag line="7" name="author" description="etessore"/>
        <tag line="7" name="version" description="1.0.0"/>
        <tag line="7" name="package" description="classes"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="18" namespace="global" package="Default">
        <name>$instance</name>
        <default>null</default>
        <docblock line="14">
          <description>Stores the unique instance</description>
          <long-description/>
          <tag line="14" name="var" description="" type="\ThemeUtils">
            <type by_reference="false">\ThemeUtils</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="24" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes default settings
Singleton private constructor</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="35" package="classes">
        <name>get_instance</name>
        <full_name>get_instance</full_name>
        <docblock line="31">
          <description>Gets the instance with the current options set</description>
          <long-description/>
          <tag line="31" name="return" description="current instance" type="\ThemeUtils">
            <type by_reference="false">\ThemeUtils</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="46" package="classes">
        <name>enable_autoload_system</name>
        <full_name>enable_autoload_system</full_name>
        <docblock line="43">
          <description>Initializes the autoloader subsystem</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="54" package="classes">
        <name>register_main_menu</name>
        <full_name>register_main_menu</full_name>
        <docblock line="51">
          <description>Registers the Primary Menu to WordPress</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="61" package="classes">
        <name>register_bottom_menu</name>
        <full_name>register_bottom_menu</full_name>
        <docblock line="58">
          <description>Register the Secondary Menu to WordPress</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="69" package="classes">
        <name>enable_debug</name>
        <full_name>enable_debug</full_name>
        <docblock line="65">
          <description>Enables vd()\vc()\v() functions output,
This is generically good for development environments.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="79" package="classes">
        <name>disable_debug</name>
        <full_name>disable_debug</full_name>
        <docblock line="75">
          <description>Disable vd()\vc()\v() functions output,
This is default status, generically good for production environments.</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="87" package="classes">
        <name>default_constants</name>
        <full_name>default_constants</full_name>
        <docblock line="84">
          <description>Register some constants</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/LipsumGenerator.class.php" hash="adff62a42f7ed87609fe0d916459a40b" package="Default">
    <docblock line="2">
      <description>Contains the LipsumGenerator</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>LipsumGenerator</name>
      <full_name>\LipsumGenerator</full_name>
      <docblock line="6">
        <description>Generates Lorem Ipsum text</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="17" package="classes">
        <name>FORMAT_HTML</name>
        <full_name>FORMAT_HTML</full_name>
        <value>0</value>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="const" description="int use html tag &lt;p&gt; to separate paragraphs"/>
        </docblock>
      </constant>
      <constant namespace="global" line="23" package="classes">
        <name>FORMAT_TEXT</name>
        <full_name>FORMAT_TEXT</full_name>
        <value>1</value>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="const" description="int use 2 newlines to separate paragraphs &#10;and a tab before the first word of every paragraph"/>
        </docblock>
      </constant>
      <constant namespace="global" line="29" package="classes">
        <name>FORMAT_PLAIN</name>
        <full_name>FORMAT_PLAIN</full_name>
        <value>2</value>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="const" description="int generates plain text with a &#10;newline as separation between paragraphs"/>
        </docblock>
      </constant>
      <constant namespace="global" line="34" package="classes">
        <name>FORMAT_RICH_HTML</name>
        <full_name>FORMAT_RICH_HTML</full_name>
        <value>3</value>
        <docblock line="31">
          <description/>
          <long-description/>
          <tag line="31" name="const" description="int generates html with &lt;strong&gt; &lt;em&gt; &lt;a&gt; and &lt;p&gt; tags"/>
        </docblock>
      </constant>
      <constant namespace="global" line="40" package="classes">
        <name>OPTION_NAME</name>
        <full_name>OPTION_NAME</full_name>
        <value>'lipsum_generator_config'</value>
        <docblock line="36">
          <description/>
          <long-description/>
          <tag line="36" name="const" description="string the WP option name where &#10;the generator can store his config"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="private" line="51" namespace="global" package="Default">
        <name>$format</name>
        <default/>
        <docblock line="48">
          <description/>
          <long-description/>
          <tag line="48" name="var" description="the format type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="56" namespace="global" package="Default">
        <name>$number_of_paragraphs</name>
        <default/>
        <docblock line="53">
          <description/>
          <long-description/>
          <tag line="53" name="var" description="number of paragraphs" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" namespace="global" package="Default">
        <name>$words_per_paragraph</name>
        <default/>
        <docblock line="58">
          <description/>
          <long-description/>
          <tag line="58" name="var" description="words in a paragraph" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="66" namespace="global" package="Default">
        <name>$words_per_sentence</name>
        <default/>
        <docblock line="63">
          <description/>
          <long-description/>
          <tag line="63" name="var" description="minimum amount of words until a single word can be repeated" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" namespace="global" package="Default">
        <name>$beginning</name>
        <default/>
        <docblock line="68">
          <description/>
          <long-description/>
          <tag line="68" name="var" description="all generated texts will start with thouse words (ex. 'Lorem Ipsum')" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="76" namespace="global" package="Default">
        <name>$dictionary</name>
        <default/>
        <docblock line="73">
          <description/>
          <long-description/>
          <tag line="73" name="var" description="a dictionary for the current generator" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="81" namespace="global" package="Default">
        <name>$min_repeat_count</name>
        <default/>
        <docblock line="78">
          <description/>
          <long-description/>
          <tag line="78" name="var" description="the minimum amount of words until a single word can be repeated" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="86" namespace="global" package="Default">
        <name>$rich_html_config</name>
        <default/>
        <docblock line="83">
          <description/>
          <long-description/>
          <tag line="83" name="var" description="config for rich html generator" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="91" namespace="global" package="Default">
        <name>$seed</name>
        <default/>
        <docblock line="88">
          <description/>
          <long-description/>
          <tag line="88" name="var" description="a seed for random generator" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="96" namespace="global" package="Default">
        <name>$render</name>
        <default/>
        <docblock line="93">
          <description/>
          <long-description/>
          <tag line="93" name="var" description="the rendered text" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="101" namespace="global" package="Default">
        <name>$gaussian_math</name>
        <default/>
        <docblock line="98">
          <description/>
          <long-description/>
          <tag line="98" name="var" description="some math utils" type="\GaussianMath">
            <type by_reference="false">\GaussianMath</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="110" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="105">
          <description>Look for a config stored in the db
If it doesn't exist it will load the default one</description>
          <long-description/>
          <tag line="105" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="classes">
        <name>defaults</name>
        <full_name>defaults</full_name>
        <docblock line="116">
          <description>Initializes the current object with default settings</description>
          <long-description/>
          <tag line="116" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="classes">
        <name>set_format</name>
        <full_name>set_format</full_name>
        <docblock line="132">
          <description>Set the format for the current object
use only self::FORMAT_* constants</description>
          <long-description/>
          <tag line="132" name="see" description="\self::FORMAT_RICH_HTML" refers="\self::FORMAT_RICH_HTML"/>
          <tag line="132" name="see" description="\self::FORMAT_HTML" refers="\self::FORMAT_HTML"/>
          <tag line="132" name="see" description="\self::FORMAT_TEXT" refers="\self::FORMAT_TEXT"/>
          <tag line="132" name="see" description="\self::FORMAT_PLAIN" refers="\self::FORMAT_PLAIN"/>
          <tag line="132" name="param" description="the format" type="int" variable="$format">
            <type by_reference="false">int</type>
          </tag>
          <tag line="132" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$format</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="163" package="classes">
        <name>set_number_of_paragraphs</name>
        <full_name>set_number_of_paragraphs</full_name>
        <docblock line="158">
          <description>Sets the number of paragraphs for the current object</description>
          <long-description/>
          <tag line="158" name="param" description="the number" type="int" variable="$number_of_paragraphs">
            <type by_reference="false">int</type>
          </tag>
          <tag line="158" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$number_of_paragraphs</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="172" package="classes">
        <name>set_words_per_paragraph</name>
        <full_name>set_words_per_paragraph</full_name>
        <docblock line="168">
          <description>Sets how many words a paragraph is made by.</description>
          <long-description/>
          <tag line="168" name="param" description="the number of words" type="int" variable="$words_per_paragraph">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="172">
          <name>$words_per_paragraph</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="182" package="classes">
        <name>set_words_per_sentence</name>
        <full_name>set_words_per_sentence</full_name>
        <docblock line="177">
          <description>Sets how many words a sentence is made by</description>
          <long-description/>
          <tag line="177" name="param" description="number of words" type="int" variable="$words_per_sentence">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$words_per_sentence</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="193" package="classes">
        <name>set_begins_with</name>
        <full_name>set_begins_with</full_name>
        <docblock line="187">
          <description>Sets the first n words of the generated text.</description>
          <long-description>&lt;p&gt;Usually they are 'Lorem ipsum'.&lt;/p&gt;</long-description>
          <tag line="187" name="param" description="list of first n words" type="array" variable="$beginning">
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$beginning</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="203" package="classes">
        <name>set_dictionary</name>
        <full_name>set_dictionary</full_name>
        <docblock line="198">
          <description>Sets the dictionary for the current generator</description>
          <long-description/>
          <tag line="198" name="param" description="the dictionary" type="\GeneratorDictionary" variable="$dictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
          <tag line="198" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$dictionary</name>
          <default/>
          <type>\GeneratorDictionary</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="212" package="classes">
        <name>set_math</name>
        <full_name>set_math</full_name>
        <docblock line="208">
          <description>Sets the mathematical object used for count words and punctuage distribution</description>
          <long-description/>
          <tag line="208" name="param" description="" type="\GaussianMath" variable="$math">
            <type by_reference="false">\GaussianMath</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$math</name>
          <default/>
          <type>\GaussianMath</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="222" package="classes">
        <name>set_min_repeat_count</name>
        <full_name>set_min_repeat_count</full_name>
        <docblock line="217">
          <description>Sets the minimum amount of words until a single word can be repeated</description>
          <long-description/>
          <tag line="217" name="param" description="the number of words withour repetitions" type="\" variable="$min_repeat_count"/>
          <tag line="217" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$min_repeat_count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="232" package="classes">
        <name>get_words</name>
        <full_name>get_words</full_name>
        <docblock line="227">
          <description>Retrieves an array of random words</description>
          <long-description/>
          <tag line="227" name="return" description="a list of random words" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="227" name="param" description="int the number of words to ber retrieved" type="\" variable="$count"/>
        </docblock>
        <argument line="232">
          <name>$count</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="257" package="classes">
        <name>gaussian_sentence</name>
        <full_name>gaussian_sentence</full_name>
        <docblock line="249">
          <description>Returns a number on a gaussian distribution based
on the average word length of an english sentence.</description>
          <long-description>&lt;p&gt;Statistics Source:
    http://hearle.nahoo.net/Academic/Maths/Sentence.html
    Average: 24.46
    Standard Deviation: 5.08&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="266" package="classes">
        <name>get_paragraph</name>
        <full_name>get_paragraph</full_name>
        <docblock line="263">
          <description>Builds a single paragraph</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="300" package="classes">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="296">
          <description>Renders the current object according to the current format</description>
          <long-description/>
          <tag line="296" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="330" package="classes">
        <name>__toString</name>
        <full_name>__toString</full_name>
        <docblock line="327">
          <description>Magic method called when the current object is casted to string</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="339" package="classes">
        <name>render_plain</name>
        <full_name>render_plain</full_name>
        <docblock line="334">
          <description>Generates and renders in plain forma</description>
          <long-description/>
          <tag line="334" name="see" description="\LipsumGenerator::FORMAT_PLAIN" refers="\LipsumGenerator::FORMAT_PLAIN"/>
          <tag line="334" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="366" package="classes">
        <name>render_text</name>
        <full_name>render_text</full_name>
        <docblock line="361">
          <description>Generates and render in text format</description>
          <long-description/>
          <tag line="361" name="see" description="\LipsumGenerator::FORMAT_TEXT" refers="\LipsumGenerator::FORMAT_TEXT"/>
          <tag line="361" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="393" package="classes">
        <name>render_html</name>
        <full_name>render_html</full_name>
        <docblock line="388">
          <description>Generates and renders in html format</description>
          <long-description/>
          <tag line="388" name="see" description="\LipsumGenerator::FORMAT_HTML" refers="\LipsumGenerator::FORMAT_HTML"/>
          <tag line="388" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="441" package="classes">
        <name>set_rich_html_config</name>
        <full_name>set_rich_html_config</full_name>
        <docblock line="418">
          <description>Sets the configuration for the rich html generation</description>
          <long-description/>
          <tag line="418" name="param" description="an array of parameters:&#10;&lt;code&gt;&#10;$default = array(&#10;'strong'&#9;=&gt;&#9;array(&#10;'percent'&#9;=&gt;&#9;2,&#10;'max_words'&#9;=&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;''&#10;),&#10;'a'&#9;&#9;&#9;=&gt;&#9;array(&#10;'percent' &#9;=&gt;&#9;5,&#10;'max_words' =&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;'href=&quot;#&quot;'&#10;),&#10;'em'&#9;&#9;=&gt;&#9;array(&#10;'percent'&#9;=&gt;&#9;10,&#10;'max_words'&#9;=&gt;&#9;5,&#10;'params'&#9;=&gt;&#9;''&#10;)&#10;);&#10;&lt;code&gt;" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="441">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="469" package="classes">
        <name>render_rich_html</name>
        <full_name>render_rich_html</full_name>
        <docblock line="464">
          <description>Generates and renders in rich html format</description>
          <long-description/>
          <tag line="464" name="see" description="\LipsumGenerator::FORMAT_RICH_HTML" refers="\LipsumGenerator::FORMAT_RICH_HTML"/>
          <tag line="464" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="560" package="classes">
        <name>force_beginning</name>
        <full_name>force_beginning</full_name>
        <docblock line="555">
          <description>Forces the given sentences (paragraph)
to start with $this-&gt;beginning list of words.</description>
          <long-description/>
          <tag line="555" name="param" description="the list of sentences" type="array" variable="$sentences">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$sentences</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="574" package="classes">
        <name>punctuate</name>
        <full_name>punctuate</full_name>
        <docblock line="570">
          <description>Inserts commas and periods in the given array of words.</description>
          <long-description/>
          <tag line="570" name="param" description="the list of sentence" type="array" variable="$sentence">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="574">
          <name>$sentence</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="599" package="classes">
        <name>numberOfCommas</name>
        <full_name>numberOfCommas</full_name>
        <docblock line="593">
          <description>Determines the number of commas for a
sentence of the given length.</description>
          <long-description>&lt;p&gt;Average and
standard deviation are determined superficially&lt;/p&gt;</long-description>
          <tag line="593" name="param" description="int a medium amount of words between two commas" type="\" variable="$len"/>
        </docblock>
        <argument line="599">
          <name>$len</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="610" package="classes">
        <name>get_config</name>
        <full_name>get_config</full_name>
        <docblock line="606">
          <description>Retrieves the config set for this generator</description>
          <long-description/>
          <tag line="606" name="return" description="the list of settings" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="626" package="classes">
        <name>set_config</name>
        <full_name>set_config</full_name>
        <docblock line="621">
          <description>Bulk configure the generator.</description>
          <long-description/>
          <tag line="621" name="param" description="the list of settings pairs name=&gt;value" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="621" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
        <argument line="626">
          <name>$config</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="640" package="classes">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="636">
          <description>Store config into WP options system</description>
          <long-description/>
          <tag line="636" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="649" package="classes">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="645">
          <description>Retrives config from WP options system</description>
          <long-description/>
          <tag line="645" name="return" description="false if config is not present" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="660" package="classes">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="656">
          <description>Removes current config from WP options system</description>
          <long-description/>
          <tag line="656" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="670" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="665">
          <description>Hooks to 'the_content' hook.</description>
          <long-description>&lt;p&gt;If the page has no content it will fill it with the generated text.&lt;/p&gt;</long-description>
          <tag line="665" name="return" description="$this for chainability" type="\LipsumGenerator">
            <type by_reference="false">\LipsumGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="680" package="classes">
        <name>the_content</name>
        <full_name>the_content</full_name>
        <docblock line="675">
          <description>Hook for the_content:
if there is no content it appends the generated</description>
          <long-description/>
          <tag line="675" name="param" description="string the content" type="\" variable="$content"/>
        </docblock>
        <argument line="680">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ThemeHelpers.class.php" hash="39c674b771d50483597c4326dbe5b10e" package="Default">
    <docblock line="2">
      <description>stores the definition for class ThemeHelpers</description>
      <long-description/>
    </docblock>
    <constant namespace="global" line="114" package="Default">
      <name>ICL_DONT_LOAD_LANGUAGES_JS</name>
      <full_name>\ICL_DONT_LOAD_LANGUAGES_JS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="115" package="Default">
      <name>ICL_DONT_LOAD_LANGUAGE_SELECTOR_CSS</name>
      <full_name>\ICL_DONT_LOAD_LANGUAGE_SELECTOR_CSS</full_name>
      <value>true</value>
    </constant>
    <constant namespace="global" line="116" package="Default">
      <name>ICL_DONT_LOAD_NAVIGATION_CSS</name>
      <full_name>\ICL_DONT_LOAD_NAVIGATION_CSS</full_name>
      <value>true</value>
    </constant>
    <class final="false" abstract="false" namespace="global" line="27" package="classes">
      <extends/>
      <name>ThemeHelpers</name>
      <full_name>\ThemeHelpers</full_name>
      <docblock line="5">
        <description>Stores some static methods that may be useful for html management</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.5"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="31" package="classes">
        <name>textdomain</name>
        <full_name>textdomain</full_name>
        <value>'theme'</value>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="Stores the name of the gettext domain for this theme" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="39" package="classes">
        <name>body_class</name>
        <full_name>body_class</full_name>
        <docblock line="33">
          <description>This filter callback adds some usefull classes to the body
Remember to call body_class() in the theme!</description>
          <long-description/>
          <tag line="33" name="param" description="the classes already added by wordpress or some other plugin" type="array" variable="$classes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$classes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="70" package="classes">
        <name>load_js</name>
        <full_name>load_js</full_name>
        <docblock line="55">
          <description>Enqueue a JavaScript in WordPress init action</description>
          <long-description/>
          <tag line="55" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_script&#10;according to this we have to:&#10;Use the wp_enqueue_scripts action to call this function,&#10;or admin_enqueue_scripts to call it on the admin side.&#10;Calling it outside of an action can lead to problems." refers="\@link"/>
          <tag line="55" name="see" description="http://core.trac.wordpress.org/ticket/11526 #11526 for details." refers="\@link"/>
          <tag line="55" name="param" description="Script name" type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="Script url" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="(optional) Array of script names on which this script depends" type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="55" name="param" description="(optional) Script version (used for cache busting), set to NULL to disable" type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="55" name="param" description="(optional) Whether to enqueue the script before &lt;/head&gt; or before &lt;/body&gt;" type="bool" variable="$in_footer">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$src</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="70">
          <name>$in_footer</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="98" package="classes">
        <name>load_css</name>
        <full_name>load_css</full_name>
        <docblock line="82">
          <description>Enqueue a StyleSheet in WordPress init action</description>
          <long-description/>
          <tag line="82" name="see" description="http://codex.wordpress.org/Function_Reference/wp_register_style&#10;according to this we have to:&#10;Use the wp_enqueue_scripts action to call this function.&#10;Calling it outside of an action can lead to problems." refers="\@link"/>
          <tag line="82" name="see" description="http://core.trac.wordpress.org/ticket/17916 #17916 for details." refers="\@link"/>
          <tag line="82" name="param" description="Name of the stylesheet." type="string" variable="$handle">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="param" description="Path to the stylesheet from the root directory of WordPress. Example: '/css/mystyle.css'." type="string|bool" variable="$src">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="82" name="param" description="Array of handles of any stylesheet that this stylesheet depends on.&#10; (Stylesheets that must be loaded before this stylesheet.) Pass an empty array if there are no dependencies." type="array" variable="$deps">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="param" description="String specifying the stylesheet version number. Set to NULL to disable.&#10; Used to ensure that the correct version is sent to the client regardless of caching." type="string|bool" variable="$ver">
            <type by_reference="false">string</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="82" name="param" description="The media for which this stylesheet has been defined." type="string" variable="$media">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$handle</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$src</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$deps</name>
          <default>array()</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$ver</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="98">
          <name>$media</name>
          <default>false</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="113" package="classes">
        <name>remove_wpml_assets</name>
        <full_name>remove_wpml_assets</full_name>
        <docblock line="109">
          <description>Remove some useless css and js by wpml</description>
          <long-description/>
          <tag line="109" name="see" description="http://wpml.org/documentation/support/wpml-coding-api/" refers="\@link"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="127" package="classes">
        <name>merge_images</name>
        <full_name>merge_images</full_name>
        <docblock line="119">
          <description>Merges some images to a single big one to save some http connections.</description>
          <long-description>&lt;p&gt;Stores it in a cache folder.
To disable the cache system set IMAGE_MERGE_FORCE_REFRESH constant to true&lt;/p&gt;</long-description>
          <tag line="119" name="param" description="an array of images: for every element $image['path'] and $image['url'] have to be defined" type="array" variable="$images">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="param" description="timthumb config, default 'w'=&gt;'700', 'h'=&gt;'370', 'q'=&gt;'50', 'r'=&gt;false" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="return" description="the url for the big image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="127">
          <name>$images</name>
          <default/>
          <type/>
        </argument>
        <argument line="127">
          <name>$config</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="210" package="classes">
        <name>get_the_content_after_more</name>
        <full_name>get_the_content_after_more</full_name>
        <docblock line="204">
          <description>Returns the content after the more tag for the given post</description>
          <long-description/>
          <tag line="204" name="param" description="Optional. Content for when there is more text" type="string" variable="$more_link_text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="param" description="Post ID or post object." type="int|object" variable="$post_id">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="204" name="param" description="true if you want the_content filter applyed on the return value" type="bool" variable="$apply_filters">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$more_link_text</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="210">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="210">
          <name>$apply_filters</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="238" package="classes">
        <name>get_the_content_before_more</name>
        <full_name>get_the_content_before_more</full_name>
        <docblock line="231">
          <description>Prints the content before the more tag for the given post
If the tag is not present it will print the entire body</description>
          <long-description/>
          <tag line="231" name="param" description="Optional. Content for when there is more text" type="string" variable="$more_link_text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="Post ID or post object." type="int|object" variable="$post_id">
            <type by_reference="false">int</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="231" name="param" description="true if you want the_content filter applyed on the return value" type="bool" variable="$apply_filters">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$more_link_text</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="238">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
        <argument line="238">
          <name>$apply_filters</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="267" package="classes">
        <name>has_more_tag</name>
        <full_name>has_more_tag</full_name>
        <docblock line="264">
          <description>Checks if the current post has the &lt;!--more--&gt; tag</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="276" package="classes">
        <name>doctype</name>
        <full_name>doctype</full_name>
        <docblock line="272">
          <description>Retrieves the correct DOCTYPE</description>
          <long-description/>
          <tag line="272" name="param" description="the type, default is html5" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="276">
          <name>$type</name>
          <default>'html5'</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="302" package="classes">
        <name>anchor</name>
        <full_name>anchor</full_name>
        <docblock line="295">
          <description>Get the markup for an &lt;a&gt; tag</description>
          <long-description/>
          <tag line="295" name="return" description="the markup for an html &lt;a&gt; tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="the url to be pointed" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="the text" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="295" name="param" description="some html attributes in key=&gt;value pairs or a plain string" type="array|string" variable="$parms">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$href</name>
          <default/>
          <type/>
        </argument>
        <argument line="302">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="302">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="317" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="312">
          <description>Get the markup for a &lt;img&gt; tag</description>
          <long-description/>
          <tag line="312" name="param" description="the image source" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="312" name="param" description="additional parameters" type="array|string" variable="$parms">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="317">
          <name>$src</name>
          <default/>
          <type/>
        </argument>
        <argument line="317">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="332" package="classes">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="326">
          <description>Retrieves a &lt;script&gt; tag</description>
          <long-description/>
          <tag line="326" name="deprecated" description=""/>
          <tag line="326" name="param" description="the inner content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="326" name="param" description="some parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="332">
          <name>$content</name>
          <default/>
          <type/>
        </argument>
        <argument line="332">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="349" package="classes">
        <name>array_to_html_attributes</name>
        <full_name>array_to_html_attributes</full_name>
        <docblock line="342">
          <description>Generates HTML Node Attribures</description>
          <long-description/>
          <tag line="342" name="param" description="" type="string" variable="$glue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="param" description="" type="array|string" variable="$pieces">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="author" description="http://blog.teknober.com/2011/04/13/php-array-to-html-attributes/"/>
        </docblock>
        <argument line="349">
          <name>$glue</name>
          <default/>
          <type/>
        </argument>
        <argument line="349">
          <name>$pieces</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="368" package="classes">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="364">
          <description>Prepare the $parms to be printed as html attributes</description>
          <long-description/>
          <tag line="364" name="param" description="list of html attributes" type="string|array" variable="$parms">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$parms</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="382" package="classes">
        <name>build_url</name>
        <full_name>build_url</full_name>
        <docblock line="376">
          <description>Retrieves the url from array $url_arr
If defined use http_build_url, else custom code</description>
          <long-description/>
          <tag line="376" name="param" description="the array of attributes" type="array" variable="$url_arr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="376" name="see" description="\http://php.net/manual/en/function.parse-url.php" refers="\http://php.net/manual/en/function.parse-url.php"/>
        </docblock>
        <argument line="382">
          <name>$url_arr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="402" package="classes">
        <name>heading</name>
        <full_name>heading</full_name>
        <docblock line="399">
          <description>Retrives the markup for the default seo heading (h1+span)</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="419" package="classes">
        <name>get_the_seo_title</name>
        <full_name>get_the_seo_title</full_name>
        <docblock line="412">
          <description>Returns the title of the page.</description>
          <long-description>&lt;p&gt;Choose in order from:
FB SEO Plugin
YOAST Seo TODO
Blog Name&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="436" package="classes">
        <name>get_the_seo_description</name>
        <full_name>get_the_seo_description</full_name>
        <docblock line="429">
          <description>Returns the description of the page
Choose in order from:
FB SEO Plugin
YOAST Seo TODO
Blog Name</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="454" package="classes">
        <name>get_the_seo_h1</name>
        <full_name>get_the_seo_h1</full_name>
        <docblock line="447">
          <description>Returns the H1 for this page
Choose in order from:
FB SEO Plugin
Post Title</description>
          <long-description/>
          <tag line="447" name="param" description="int|object the post" type="\" variable="$post"/>
        </docblock>
        <argument line="454">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="482" package="classes">
        <name>get_the_seo_span</name>
        <full_name>get_the_seo_span</full_name>
        <docblock line="475">
          <description>Returns the SPAN for this page
Choose in order from:
FB SEO Plugin
Post Title</description>
          <long-description/>
          <tag line="475" name="param" description="int|object the post" type="\" variable="$post"/>
        </docblock>
        <argument line="482">
          <name>$post</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="506" package="classes">
        <name>add_this</name>
        <full_name>add_this</full_name>
        <docblock line="503">
          <description>Retrieves the markup for the Add This widget</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="531" package="classes">
        <name>hide_admin_bar</name>
        <full_name>hide_admin_bar</full_name>
        <docblock line="528">
          <description>Hides the wp admin bar</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/SubstitutionTemplate.class.php" hash="01981543e0f26f4f5300a909a44531a8" package="Default">
    <docblock line="2">
      <description>Stores the definition for class SubstitutionTemplate</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends/>
      <name>SubstitutionTemplate</name>
      <full_name>\SubstitutionTemplate</full_name>
      <docblock line="6">
        <description>Manages a string substitution set</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="17" namespace="global" package="Default">
        <name>$static_markup</name>
        <default/>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="Stores some static html" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="24">
          <description>Initializes the current object with default parameters</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="classes">
        <name>set_tpl</name>
        <full_name>set_tpl</full_name>
        <docblock line="31">
          <description>Sets the substitutions template</description>
          <long-description/>
          <tag line="31" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="47" package="classes">
        <name>set_markup</name>
        <full_name>set_markup</full_name>
        <docblock line="40">
          <description>Set the static markup; ie: prev\next\loading divs</description>
          <long-description/>
          <tag line="40" name="param" description="the searches to be substituted" type="string|array" variable="$key">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="param" description="html markups" type="string|array" variable="$markup">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="40" name="return" description="$this for chainability" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
          <tag line="40" name="throws" description="if $key and $markup have different number of elements" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="47">
          <name>$markup</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="classes">
        <name>set_multi_markup</name>
        <full_name>set_multi_markup</full_name>
        <docblock line="67">
          <description>Bulk set the key:markup pairs</description>
          <long-description/>
          <tag line="67" name="param" description="an associative array of keys and markups" type="array" variable="$ass_array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$ass_array</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="81" package="classes">
        <name>replace_markup</name>
        <full_name>replace_markup</full_name>
        <docblock line="77">
          <description>Replaces the markup in $this-&gt;tpl %tag%s with the one
in the corresponding value of $this-&gt;static_markup[tag].</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ClassAutoloader.class.php" hash="6b9bbe8909de070b0fe91bcf1a4709e8" package="Default">
    <docblock line="2">
      <description>Contains the ClassAutoloader class definitions</description>
      <long-description/>
    </docblock>
    <include line="78" type="Include Once" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="global" line="20" package="classes">
      <extends/>
      <name>ClassAutoloader</name>
      <full_name>\ClassAutoloader</full_name>
      <docblock line="6">
        <description>Autoload needed classes</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="21" package="classes">
        <name>WORDPRESS_THEME_UTILS_CLASS_DIR</name>
        <full_name>WORDPRESS_THEME_UTILS_CLASS_DIR</full_name>
        <value>'classes'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="26" namespace="global" package="Default">
        <name>$loading_template</name>
        <default/>
        <docblock line="23">
          <description/>
          <long-description/>
          <tag line="23" name="var" description="stores the path the system will scan for files" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="28">
          <description>Initializes the autoloader</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="classes">
        <name>add_loading_template</name>
        <full_name>add_loading_template</full_name>
        <docblock line="48">
          <description>Set the loading template</description>
          <long-description/>
          <tag line="48" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="$this for chainability" type="\ClassAutoloader">
            <type by_reference="false">\ClassAutoloader</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>register_autoload</name>
        <full_name>register_autoload</full_name>
        <docblock line="58">
          <description>Register the autoload function to PHP</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="70" package="classes">
        <name>loader</name>
        <full_name>loader</full_name>
        <docblock line="65">
          <description>Autoload needed classes</description>
          <long-description/>
          <tag line="65" name="param" description="the name of the class" type="String" variable="$className">
            <type by_reference="false">String</type>
          </tag>
          <tag line="65" name="return" description="$this for chainability" type="\ClassAutoloader">
            <type by_reference="false">\ClassAutoloader</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$className</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/RemoveSpacesWalkerNavMenu.class.php" hash="670de7eb6aeb3147e07191e2dfcf7bd7" package="Default">
    <docblock line="2">
      <description>contains RemoveSpacesWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>RemoveSpacesWalkerNavMenu</name>
      <full_name>\RemoveSpacesWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Remove spaces and newlines from the current menu.</description>
        <long-description>&lt;p&gt;This is very useful if you want to style a menu with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;display: inline-block;
text-align: center;&lt;/code&gt;&lt;/pre&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$replacements</name>
        <default>array("\n" =&gt; '', "\t" =&gt; '')</default>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="key valuse pair of replacements" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="27" package="classes">
        <name>start_lvl</name>
        <full_name>start_lvl</full_name>
        <docblock line="21">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="21" name="see" description="\Walker_Nav_Menu::start_lvl()" refers="\Walker_Nav_Menu::start_lvl()"/>
          <tag line="21" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="21" name="param" description="Depth of page. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="27">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="27">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="38" package="classes">
        <name>end_lvl</name>
        <full_name>end_lvl</full_name>
        <docblock line="32">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="32" name="see" description="\Walker_Nav_Menu::end_lvl()" refers="\Walker_Nav_Menu::end_lvl()"/>
          <tag line="32" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="32" name="param" description="Depth of page. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="38">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="classes">
        <name>end_el</name>
        <full_name>end_el</full_name>
        <docblock line="43">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="43" name="see" description="\Walker_Nav_Menu::end_el()" refers="\Walker_Nav_Menu::end_el()"/>
          <tag line="43" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="Page data object. Not used." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="43" name="param" description="Depth of page. Not Used." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="50">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="63" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="55">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="55" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="55" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="55" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="55" name="param" description="other arguments" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="63">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="73" package="classes">
        <name>remove_unwanted_chars</name>
        <full_name>remove_unwanted_chars</full_name>
        <docblock line="68">
          <description>Removew the unwanted charactes from the given string</description>
          <long-description/>
          <tag line="68" name="param" description="the string to be escaped" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="the escaped string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$str</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/SpecialOffersSnippet.class.php" hash="5b2fba8c847557d2fe7e7987760f3b26" package="Default">
    <docblock line="2">
      <description>containst SpecialOffersSnippet class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="24" package="classes">
      <extends/>
      <name>SpecialOffersSnippet</name>
      <full_name>\SpecialOffersSnippet</full_name>
      <docblock line="6">
        <description>Manages the integration of the special offers snippet</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.3"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="25" package="classes">
        <name>baseurl</name>
        <full_name>baseurl</full_name>
        <value>'http://hotelsitecontents.fastbooking.com/router.php?snippet=promotion'</value>
      </constant>
      <constant namespace="global" line="26" package="classes">
        <name>default_divdest</name>
        <full_name>default_divdest</full_name>
        <value>'FB_so'</value>
      </constant>
      <property final="false" static="false" visibility="public" line="31" namespace="global" package="Default">
        <name>$params</name>
        <default/>
        <docblock line="28">
          <description/>
          <long-description/>
          <tag line="28" name="var" description="stores the list of parameter to be passed on GET" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="36" namespace="global" package="Default">
        <name>$url</name>
        <default/>
        <docblock line="33">
          <description/>
          <long-description/>
          <tag line="33" name="var" description="stores the url of the snippet" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="41" namespace="global" package="Default">
        <name>$index</name>
        <default/>
        <docblock line="38">
          <description/>
          <long-description/>
          <tag line="38" name="var" description="the index of snippet occurency" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="46" namespace="global" package="Default">
        <name>$templates</name>
        <default/>
        <docblock line="43">
          <description/>
          <long-description/>
          <tag line="43" name="var" description="the template to be substituted" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="49">
          <description>Initializes the snippet</description>
          <long-description/>
          <tag line="49" name="param" description="the hotel hid" type="string" variable="$hid">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$hid</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="86" package="classes">
        <name>calculate_url</name>
        <full_name>calculate_url</full_name>
        <docblock line="82">
          <description>Builds the url for the remote iframe</description>
          <long-description/>
          <tag line="82" name="param" description="additional query params for the iframe" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="101" package="classes">
        <name>build_url</name>
        <full_name>build_url</full_name>
        <docblock line="95">
          <description>Retrieves the url from array $url_arr
If defined use http_build_url, else custom code</description>
          <long-description/>
          <tag line="95" name="param" description="the array of attributes" type="array" variable="$url_arr">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="see" description="\http://php.net/manual/en/function.parse-url.php" refers="\http://php.net/manual/en/function.parse-url.php"/>
        </docblock>
        <argument line="101">
          <name>$url_arr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="124" package="classes">
        <name>add_param</name>
        <full_name>add_param</full_name>
        <docblock line="118">
          <description>Adds a new parameter or update if exists</description>
          <long-description/>
          <tag line="118" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="" type="int|string" variable="$value">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="124">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="classes">
        <name>get_param</name>
        <full_name>get_param</full_name>
        <docblock line="129">
          <description>Retrives the $key param for this snippet</description>
          <long-description/>
          <tag line="129" name="param" description="name of the parameter" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="classes">
        <name>del_param</name>
        <full_name>del_param</full_name>
        <docblock line="137">
          <description>Removes a param</description>
          <long-description/>
          <tag line="137" name="param" description="the param to be deleted" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="$this for chainability" type="\SpecialOffersSnippet">
            <type by_reference="false">\SpecialOffersSnippet</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="151" package="classes">
        <name>get_iframe_src</name>
        <full_name>get_iframe_src</full_name>
        <docblock line="147">
          <description>Retrieves the src of the iframe</description>
          <long-description/>
          <tag line="147" name="return" description="the url" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="161" package="classes">
        <name>get_divdest</name>
        <full_name>get_divdest</full_name>
        <docblock line="155">
          <description>Calculates the divdest for the current iframe integration
First time it will be self::default_divdest
For the other an "_&lt;number&gt;" will be appended
If the parameter divdest is customized it will return that one</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="175" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="172">
          <description>Retrieves the markup for the offers</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="188" package="classes">
        <name>the_iframe_src</name>
        <full_name>the_iframe_src</full_name>
        <docblock line="185">
          <description>Prints the iframe src</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/HashAnchorWalkerNavMenu.class.php" hash="112384bee58c2816e419d3401f8dd9b1" package="Default">
    <docblock line="2">
      <description>stores the HashAnchorWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>HashAnchorWalkerNavMenu</name>
      <full_name>\HashAnchorWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Menu Walker to have the la tocke of the url as hash
ex: http://www.fastbooking.net/clients/#africa</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="13">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="13" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="13" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="13" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="13" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="13" name="param" description="" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="22">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/MinigalleryBigImageWithThumbs.class.php" hash="90e841c35e65aba035303c2fc61fe31b" package="Default">
    <docblock line="2">
      <description>Stores the MinigalleryBigImageWithThumbs class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\GalleryHelper</extends>
      <name>MinigalleryBigImageWithThumbs</name>
      <full_name>\MinigalleryBigImageWithThumbs</full_name>
      <docblock line="5">
        <description>Manages the markup for the minigallery
with a big image and some small thumbs</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.0"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="16" namespace="global" package="Default">
        <name>$sizes</name>
        <default/>
        <docblock line="13">
          <description/>
          <long-description/>
          <tag line="13" name="var" description="stores the sizes of the images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="21" namespace="global" package="Default">
        <name>$thumb_list_config</name>
        <default/>
        <docblock line="18">
          <description/>
          <long-description/>
          <tag line="18" name="var" description="configuration for the thumbnails list" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="26" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="23">
          <description>Initializes the Minigallery with the default config</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="classes">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="61">
          <description>Set the html template for this minigallery</description>
          <long-description/>
          <tag line="61" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="66">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="77" package="classes">
        <name>set_big_sizes</name>
        <full_name>set_big_sizes</full_name>
        <docblock line="71">
          <description>Sets the sizes of the big image</description>
          <long-description/>
          <tag line="71" name="param" description="" type="int" variable="$widht">
            <type by_reference="false">int</type>
          </tag>
          <tag line="71" name="param" description="" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="71" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$widht</name>
          <default/>
          <type/>
        </argument>
        <argument line="77">
          <name>$height</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="89" package="classes">
        <name>set_small_sizes</name>
        <full_name>set_small_sizes</full_name>
        <docblock line="83">
          <description>Sets the sizes of the thumbs</description>
          <long-description/>
          <tag line="83" name="param" description="" type="int" variable="$widht">
            <type by_reference="false">int</type>
          </tag>
          <tag line="83" name="param" description="" type="int" variable="$height">
            <type by_reference="false">int</type>
          </tag>
          <tag line="83" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$widht</name>
          <default/>
          <type/>
        </argument>
        <argument line="89">
          <name>$height</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="100" package="classes">
        <name>set_thumbs_list_config</name>
        <full_name>set_thumbs_list_config</full_name>
        <docblock line="95">
          <description>Sets the config for the thumbnails list</description>
          <long-description/>
          <tag line="95" name="param" description="the config array" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="95" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$config</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="105">
          <description>Loads the needed assets</description>
          <long-description/>
          <tag line="105" name="return" description="$this for chainability" type="\MinigalleryBigImageWithThumbs">
            <type by_reference="false">\MinigalleryBigImageWithThumbs</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="133" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="129">
          <description>Retrieves the markup for this minigallery</description>
          <long-description/>
          <tag line="129" name="return" description="markup for the minigallery" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/GeneratorDictionary.class.php" hash="ddd7a7638d52332c4c8b37038e2660a5" package="Default">
    <docblock line="2">
      <description>Stores GeneratorDictionary class definitions</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends/>
      <name>GeneratorDictionary</name>
      <full_name>\GeneratorDictionary</full_name>
      <docblock line="6">
        <description>Maintans a set of words for a sentences generator</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
        <tag line="6" name="todo" description="maintain an ordinate array so that&#10;insertion and deletion will be more efficent"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="18" namespace="global" package="Default">
        <name>$words</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="a list of usable words" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="23" namespace="global" package="Default">
        <name>$count</name>
        <default/>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the number of usable words" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="25">
          <description>Initializes the dictionary</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="40" package="classes">
        <name>add_word</name>
        <full_name>add_word</full_name>
        <docblock line="35">
          <description>Adds the given $word to the current set</description>
          <long-description/>
          <tag line="35" name="param" description="the word" type="string" variable="$word">
            <type by_reference="false">string</type>
          </tag>
          <tag line="35" name="return" description="$this for chainability" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="classes">
        <name>remove_word</name>
        <full_name>remove_word</full_name>
        <docblock line="46">
          <description>Removes the given words from the current set</description>
          <long-description/>
          <tag line="46" name="param" description="the word" type="string" variable="$word">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="$this for chainability" type="\GeneratorDictionary">
            <type by_reference="false">\GeneratorDictionary</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$word</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="65" package="classes">
        <name>get_all_words</name>
        <full_name>get_all_words</full_name>
        <docblock line="61">
          <description>Retrieves all the usable words of this dictionary</description>
          <long-description/>
          <tag line="61" name="return" description="full set of words" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="73" package="classes">
        <name>number_of_words</name>
        <full_name>number_of_words</full_name>
        <docblock line="69">
          <description>Retrieves the number of usable words in this dictionary</description>
          <long-description/>
          <tag line="69" name="return" description="number of words in the current dictionary" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/MinigalleryThumbsLinkToBig.class.php" hash="db900d0c9631bfb7d0788dc8ff93a54b" package="Default">
    <docblock line="2">
      <description>storest MinigalleryThumbsLinkToBig class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="14" package="classes">
      <extends>\GalleryHelper</extends>
      <name>MinigalleryThumbsLinkToBig</name>
      <full_name>\MinigalleryThumbsLinkToBig</full_name>
      <docblock line="6">
        <description>Generates a list of thumbnail each one is an anchor
to the image with 'full' media dimensions.</description>
        <long-description>&lt;p&gt;By default loads FancyBox so to have an eye candy popup effect.&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes the minigallery</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="27">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="27" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/EscapeRoute.class.php" hash="bfd6d4b2966e022f7af1e7273206f4d5" package="Default">
    <docblock line="2">
      <description>stores the EscapeRoute class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>EscapeRoute</name>
      <full_name>\EscapeRoute</full_name>
      <docblock line="6">
        <description>Manages the navigation links on a 404 page</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$links</name>
        <default>array()</default>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the list of link to be printed in case of 404" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="the substitution template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="32" namespace="global" package="Default">
        <name>$templates</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="the substitution engine" type="\SubstitutionTemplate">
            <type by_reference="false">\SubstitutionTemplate</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="37" namespace="global" package="Default">
        <name>$list_separator</name>
        <default>''</default>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="the list separator" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="42" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="39">
          <description>Initializes the object to the default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="71" package="classes">
        <name>add_link</name>
        <full_name>add_link</full_name>
        <docblock line="64">
          <description>Adds a link</description>
          <long-description/>
          <tag line="64" name="param" description="the url to be linked" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="the inner html for the &lt;a&gt; tag" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="additional parameters for the &lt;a&gt;" type="string|array" variable="$params">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="64" name="return" description="$this for chainability" type="\EscapeRoute">
            <type by_reference="false">\EscapeRoute</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$href</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$label</name>
          <default/>
          <type/>
        </argument>
        <argument line="71">
          <name>$params</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="85" package="classes">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="80">
          <description>Set the html template</description>
          <long-description/>
          <tag line="80" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="$this for chainability" type="\EscapeRoute">
            <type by_reference="false">\EscapeRoute</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>set_separator</name>
        <full_name>set_separator</full_name>
        <docblock line="90">
          <description>Set the separator for the list of anchors</description>
          <long-description/>
          <tag line="90" name="param" description="html between every &lt;a&gt;" type="string" variable="$separator">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$separator</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="103" package="classes">
        <name>render_list</name>
        <full_name>render_list</full_name>
        <docblock line="99">
          <description>Renders the list of anchors</description>
          <long-description/>
          <tag line="99" name="return" description="rendered the list of anchors" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="120" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="116">
          <description>Retrieves the markup</description>
          <long-description/>
          <tag line="116" name="returns" description="the markup"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/DefaultAssetsCDN.class.php" hash="afadb9bcd528e1e74b762f08d4f1b556" package="Default">
    <docblock line="2">
      <description>Maintains the code for DefaultAssetsCDN class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="17" package="classes">
      <extends>\DefaultAssets</extends>
      <name>DefaultAssetsCDN</name>
      <full_name>\DefaultAssetsCDN</full_name>
      <docblock line="6">
        <description>Registers some assets from public available CDNs:
ajax.googleapis.com
cdnjs.cloudflare.com
cdn.jsdelivr.net</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="since" description="1.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="22" package="classes">
        <name>register_standard</name>
        <full_name>register_standard</full_name>
        <docblock line="18">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="18" name="see" description="\DefaultAssets::register_standard()" refers="\DefaultAssets::register_standard()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/GaussianMath.class.php" hash="d40eca3d4873523aae51da23994d9fc2" package="Default">
    <docblock line="2">
      <description>sstores the GaussianMath class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="11" package="classes">
      <extends/>
      <name>GaussianMath</name>
      <full_name>\GaussianMath</full_name>
      <docblock line="6">
        <description>The following object is used to compute numbers with a gaussian distribution</description>
        <long-description/>
        <tag line="6" name="link" description="http://us.php.net/manual/en/function.rand.php#53784" link="http://us.php.net/manual/en/function.rand.php#53784"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="16" package="classes">
        <name>gauss</name>
        <full_name>gauss</full_name>
        <docblock line="13">
          <description>Gets a random number in a gaussian distribution</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="28" package="classes">
        <name>gauss_ms</name>
        <full_name>gauss_ms</full_name>
        <docblock line="23">
          <description>Get an ms value</description>
          <long-description/>
          <tag line="23" name="param" description="" type="double" variable="$m">
            <type by_reference="false">double</type>
          </tag>
          <tag line="23" name="param" description="" type="double" variable="$s">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$m</name>
          <default>0.0</default>
          <type/>
        </argument>
        <argument line="28">
          <name>$s</name>
          <default>1.0</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="35" package="classes">
        <name>random_0_1</name>
        <full_name>random_0_1</full_name>
        <docblock line="32">
          <description>Gets a random float between 0 and 1</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/RuntimeInfos.class.php" hash="2dd4c26507fd15f29614a4a772f99999" package="Default">
    <docblock line="2">
      <description>stores the RuntimeInfos class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>RuntimeInfos</name>
      <full_name>\RuntimeInfos</full_name>
      <docblock line="6">
        <description>Manages a set of info to be printed as a json generally at the endo of the page</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.1"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="38" package="classes">
        <name>TYPE_FOOTER</name>
        <full_name>TYPE_FOOTER</full_name>
        <value>1</value>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="use this as type to have a &lt;script&gt; tag in the footer" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="43" package="classes">
        <name>TYPE_AJAX</name>
        <full_name>TYPE_AJAX</full_name>
        <value>2</value>
        <docblock line="40">
          <description/>
          <long-description/>
          <tag line="40" name="var" description="uset this as type to have an external js on an admin-ajax.php url" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <constant namespace="global" line="48" package="classes">
        <name>ajax_action</name>
        <full_name>ajax_action</full_name>
        <value>'runtime-infos'</value>
        <docblock line="45">
          <description/>
          <long-description/>
          <tag line="45" name="var" description="the action parameter for the admin-ajax" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$infos</name>
        <default>array()</default>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="the list of infos" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="27" namespace="global" package="Default">
        <name>$type</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="the way we want the infos" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="32" namespace="global" package="Default">
        <name>$id</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="id of the post these infos refer to" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="53" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="50">
          <description>Initializes the current set of infos with default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>set_standard_infos</name>
        <full_name>set_standard_infos</full_name>
        <docblock line="57">
          <description>Sets the default values:
postID, theme_url, upload_dir, home_url and ajaxurl</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="87" package="classes">
        <name>get_the_ID</name>
        <full_name>get_the_ID</full_name>
        <docblock line="84">
          <description>Get the ID for the current post</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="98" package="classes">
        <name>add_info</name>
        <full_name>add_info</full_name>
        <docblock line="92">
          <description>Adds an info to the current set</description>
          <long-description/>
          <tag line="92" name="param" description="the name of the info" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="the value of the info" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="$this for chainability" type="\RuntimeInfos">
            <type by_reference="false">\RuntimeInfos</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="98">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="109" package="classes">
        <name>set_type</name>
        <full_name>set_type</full_name>
        <docblock line="103">
          <description>Sets the type</description>
          <long-description/>
          <tag line="103" name="param" description="" type="int" variable="$type">
            <type by_reference="false">int</type>
          </tag>
          <tag line="103" name="see" description="\RuntimeInfos::TYPE_AJAX" refers="\RuntimeInfos::TYPE_AJAX"/>
          <tag line="103" name="see" description="\RuntimeInfos::TYPE_FOOTER" refers="\RuntimeInfos::TYPE_FOOTER"/>
        </docblock>
        <argument line="109">
          <name>$type</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="118" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="114">
          <description>Hook the print of this infos to Wordpress footer</description>
          <long-description/>
          <tag line="114" name="return" description="$this for chainability" type="\RuntimeInfos">
            <type by_reference="false">\RuntimeInfos</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="137" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="133">
          <description>Registers and enqueue the js from admin-ajax.php
This has to be called after RuntimeInfos::generate_unique_id()</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="161" package="classes">
        <name>render</name>
        <full_name>render</full_name>
        <docblock line="156">
          <description>Format the data set in JSON.</description>
          <long-description>&lt;p&gt;Overload this if you want a different
data structure, i.e. XML&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="169" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="165">
          <description>Retrieves the html markup</description>
          <long-description/>
          <tag line="165" name="return" description="html markup" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="177" package="classes">
        <name>generate_unique_id</name>
        <full_name>generate_unique_id</full_name>
        <docblock line="173">
          <description>Generates an unique ID for the current data set</description>
          <long-description/>
          <tag line="173" name="return" description="the ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="classes">
        <name>the_markup</name>
        <full_name>the_markup</full_name>
        <docblock line="182">
          <description>Prints the markup</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="193" package="classes">
        <name>ajax_callback</name>
        <full_name>ajax_callback</full_name>
        <docblock line="189">
          <description>Callback executed when the admin ajax url
is called with self::ajax_action parameter</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/LevelWalkerNavMenu.class.php" hash="c6271f12421890d3bd5ac621b2921d07" package="Default">
    <docblock line="2">
      <description>stores the LevelWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>LevelWalkerNavMenu</name>
      <full_name>\LevelWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Adds the level for the current menu element</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="15">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="15" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="15" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="15" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="15" name="param" description="" type="object" variable="$args">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="23">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="23">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/ShowItemExcerptWalkerNavMenu.class.php" hash="9777a5d512cfe9b10c9c99875acc4800" package="Default">
    <docblock line="2">
      <description>stores the ShowItemExcerptWalkerNavMenu class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="15" package="classes">
      <extends>\Walker_Nav_Menu</extends>
      <name>ShowItemExcerptWalkerNavMenu</name>
      <full_name>\ShowItemExcerptWalkerNavMenu</full_name>
      <docblock line="6">
        <description>Shows the title, the post thumbnail
and the excerpt for every menu entry.</description>
        <long-description>&lt;p&gt;Additional markup will be appended
to the default menu entry.&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="16">
          <description/>
          <long-description/>
          <tag line="16" name="var" description="the template" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$excerpt_output</name>
        <default/>
        <docblock line="21">
          <description/>
          <long-description/>
          <tag line="21" name="var" description="the excerpt buffer" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="31" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="26">
          <description>Initializes the object with default values.</description>
          <long-description>&lt;p&gt;Hint: overload this if you want
to change the printed markup&lt;/p&gt;</long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="58" package="classes">
        <name>start_el</name>
        <full_name>start_el</full_name>
        <docblock line="50">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="50" name="see" description="\Walker_Nav_Menu::start_el()" refers="\Walker_Nav_Menu::start_el()"/>
          <tag line="50" name="param" description="Passed by reference. Used to append additional content." type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="param" description="Menu item data object." type="object" variable="$item">
            <type by_reference="false">object</type>
          </tag>
          <tag line="50" name="param" description="Depth of menu item. Used for padding." type="int" variable="$depth">
            <type by_reference="false">int</type>
          </tag>
          <tag line="50" name="param" description="" type="int" variable="$args">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$output</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$item</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$depth</name>
          <default/>
          <type/>
        </argument>
        <argument line="58">
          <name>$args</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/GalleryHelper.class.php" hash="4293ec70d7e9d521a56cd3cf17778ae6" package="Default">
    <docblock line="2">
      <description>Stores the GalleryHelper class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="true" namespace="global" line="12" package="classes">
      <extends>\FeatureWithAssets</extends>
      <name>GalleryHelper</name>
      <full_name>\GalleryHelper</full_name>
      <docblock line="5">
        <description>Manages the markup for a generic set of images
Extend this with your nice and candy classes!</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.2"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$unid</name>
        <default>false</default>
        <docblock line="14">
          <description/>
          <long-description/>
          <tag line="14" name="var" description="the unique id for the current gallery it will be automatically created if not specified" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$tpl</name>
        <default/>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the html template" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$images</name>
        <default>array()</default>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="the list of images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$static_markup</name>
        <default/>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="Stores some static html" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="39" namespace="global" package="Default">
        <name>$timthumb_opts</name>
        <default/>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="options for timthumb" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="44" namespace="global" package="Default">
        <name>$media_dimension</name>
        <default/>
        <docblock line="41">
          <description/>
          <long-description/>
          <tag line="41" name="var" description="WordPress media size name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="51" package="classes">
        <name>set_uid</name>
        <full_name>set_uid</full_name>
        <docblock line="46">
          <description>Set the unique id for this gallery</description>
          <long-description/>
          <tag line="46" name="param" description="the unique" type="string" variable="$unid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$unid</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="61" package="classes">
        <name>set_timthumb_options</name>
        <full_name>set_timthumb_options</full_name>
        <docblock line="56">
          <description>Set the timthumb options
If set_wp_media_dimension() is called it will prevale on this.</description>
          <long-description/>
          <tag line="56" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$options</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="72" package="classes">
        <name>set_wp_media_dimension</name>
        <full_name>set_wp_media_dimension</full_name>
        <docblock line="66">
          <description>Sets the dimension for this gallery.</description>
          <long-description>&lt;p&gt;If set this option will prevale on timthumb&lt;/p&gt;</long-description>
          <tag line="66" name="param" description="WordPress media dimension name" type="string" variable="$dimension">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$dimension</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="82" package="classes">
        <name>set_template</name>
        <full_name>set_template</full_name>
        <docblock line="77">
          <description>Set the html template for this gallery</description>
          <long-description/>
          <tag line="77" name="param" description="the template" type="string" variable="$tpl">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$tpl</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="93" package="classes">
        <name>set_markup</name>
        <full_name>set_markup</full_name>
        <docblock line="87">
          <description>Set the static markup; ie: prev\next\loading divs</description>
          <long-description/>
          <tag line="87" name="param" description="the string has to be substituted" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="param" description="html markup" type="string" variable="$markup">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$key</name>
          <default/>
          <type/>
        </argument>
        <argument line="93">
          <name>$markup</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="102" package="classes">
        <name>replace_markup</name>
        <full_name>replace_markup</full_name>
        <docblock line="98">
          <description>Replaces the markup in $this-&gt;tpl %tag%s with the one
in the corresponding value of $this-&gt;static_markup[tag].</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="119" package="classes">
        <name>add_image</name>
        <full_name>add_image</full_name>
        <docblock line="113">
          <description>Adds an image to the current set</description>
          <long-description/>
          <tag line="113" name="param" description="the image: if is an int it&#10;will be retrieved from the wp media, elsewhere it is an html tag" type="string|int" variable="$img">
            <type by_reference="false">string</type>
            <type by_reference="false">int</type>
          </tag>
          <tag line="113" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$img</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="129" package="classes">
        <name>add_images</name>
        <full_name>add_images</full_name>
        <docblock line="124">
          <description>Add some images to the current set</description>
          <long-description/>
          <tag line="124" name="param" description="the list of images to be added" type="array" variable="$images">
            <type by_reference="false">array</type>
          </tag>
          <tag line="124" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$images</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="142" package="classes">
        <name>calculate_unique</name>
        <full_name>calculate_unique</full_name>
        <docblock line="138">
          <description>Calculates the unique id for the current gallery</description>
          <long-description/>
          <tag line="138" name="return" description="$this for chainability" type="\GalleryHelper">
            <type by_reference="false">\GalleryHelper</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="153" package="classes">
        <name>get_image_src</name>
        <full_name>get_image_src</full_name>
        <docblock line="147">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="147" name="returns" description="the src attribute for the $index image of the set"/>
          <tag line="147" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="153">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="184" package="classes">
        <name>get_image_width</name>
        <full_name>get_image_width</full_name>
        <docblock line="180">
          <description>Get the width for the n-th image of the list</description>
          <long-description/>
          <tag line="180" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="184">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="208" package="classes">
        <name>get_image_height</name>
        <full_name>get_image_height</full_name>
        <docblock line="204">
          <description>Get the height for the n-th image of the list</description>
          <long-description/>
          <tag line="204" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="234" package="classes">
        <name>get_image_id</name>
        <full_name>get_image_id</full_name>
        <docblock line="228">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="228" name="returns" description="the id attribute for the $index image of the set"/>
          <tag line="228" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="251" package="classes">
        <name>get_image_alt</name>
        <full_name>get_image_alt</full_name>
        <docblock line="245">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="245" name="returns" description="the alt attribute for the $index image of the set"/>
          <tag line="245" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="272" package="classes">
        <name>get_image_caption</name>
        <full_name>get_image_caption</full_name>
        <docblock line="266">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="266" name="returns" description="the caption for the $index image of the set"/>
          <tag line="266" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="global" line="294" package="classes">
        <name>get_image_description</name>
        <full_name>get_image_description</full_name>
        <docblock line="288">
          <description>Checks if the $index image of the list is
a wordpress media id or an image object</description>
          <long-description/>
          <tag line="288" name="returns" description="the description for the $index image of the set"/>
          <tag line="288" name="param" description="the index of the images list" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="294">
          <name>$index</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="global" line="315" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="311">
          <description>Retrieves the markup for the current gallery</description>
          <long-description/>
          <tag line="311" name="return" description="markup for the current gallery" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="320" package="classes">
        <name>the_markup</name>
        <full_name>the_markup</full_name>
        <docblock line="317">
          <description>Echoes the markup for the current gallery</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/HeadHelper.class.php" hash="a7d98fe845ac49f23920cad9eaff7fad" package="Default">
    <docblock line="2">
      <description>stores the HeadHelper class declaration</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends/>
      <name>HeadHelper</name>
      <full_name>\HeadHelper</full_name>
      <docblock line="6">
        <description>Some helper for the code inside &lt;head&gt; tag</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$meta_tags</name>
        <default>array()</default>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="of name =&gt; content valuse for the meta tags." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="23" namespace="global" package="Default">
        <name>$links</name>
        <default>array()</default>
        <docblock line="20">
          <description/>
          <long-description/>
          <tag line="20" name="var" description="the links to be added" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="28" namespace="global" package="Default">
        <name>$title</name>
        <default/>
        <docblock line="25">
          <description/>
          <long-description/>
          <tag line="25" name="var" description="the title" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="33" namespace="global" package="Default">
        <name>$charset</name>
        <default/>
        <docblock line="30">
          <description/>
          <long-description/>
          <tag line="30" name="var" description="charset of the page" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="38" namespace="global" package="Default">
        <name>$ua</name>
        <default/>
        <docblock line="35">
          <description/>
          <long-description/>
          <tag line="35" name="var" description="Google Analytics tracking code" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="41">
          <description>Initializes this object to default data</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="66" package="classes">
        <name>get_head</name>
        <full_name>get_head</full_name>
        <docblock line="62">
          <description>Retrieves some usefull meta tags for the &lt;head&gt;</description>
          <long-description/>
          <tag line="62" name="return" description="usefull meta tags for the &lt;head&gt;" type="\some">
            <type by_reference="false">\some</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="108" package="classes">
        <name>set_ua</name>
        <full_name>set_ua</full_name>
        <docblock line="104">
          <description>Sets the Google Analytics tracking code</description>
          <long-description/>
          <tag line="104" name="param" description="UA-XXXXXX" type="string" variable="$ga">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$ga</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="116" package="classes">
        <name>the_head</name>
        <full_name>the_head</full_name>
        <docblock line="113">
          <description>Print the markup</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="125" package="classes">
        <name>set_meta_tag</name>
        <full_name>set_meta_tag</full_name>
        <docblock line="120">
          <description>Set a meta tag</description>
          <long-description/>
          <tag line="120" name="param" description="the meta tag" type="array" variable="$meta">
            <type by_reference="false">array</type>
          </tag>
          <tag line="120" name="return" description="$this for chainability" type="\HeadHelper">
            <type by_reference="false">\HeadHelper</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$meta</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="136" package="classes">
        <name>set_title</name>
        <full_name>set_title</full_name>
        <docblock line="132">
          <description>Set the title</description>
          <long-description/>
          <tag line="132" name="param" description="the title" type="string" variable="$title">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$title</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="145" package="classes">
        <name>set_link</name>
        <full_name>set_link</full_name>
        <docblock line="141">
          <description>Set a link</description>
          <long-description/>
          <tag line="141" name="param" description="the link" type="array" variable="$link">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="156" package="classes">
        <name>delete_link</name>
        <full_name>delete_link</full_name>
        <docblock line="152">
          <description>Remove a link</description>
          <long-description/>
          <tag line="152" name="param" description="the link name" type="string" variable="$link">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$link</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="165" package="classes">
        <name>delete_meta_tag</name>
        <full_name>delete_meta_tag</full_name>
        <docblock line="161">
          <description>Delete a meta tag</description>
          <long-description/>
          <tag line="161" name="param" description="the meta name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="173" package="classes">
        <name>render_meta_tags</name>
        <full_name>render_meta_tags</full_name>
        <docblock line="170">
          <description>Retrieve the meta tags list ready to be inserted into &lt;head&gt;</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="187" package="classes">
        <name>render_meta_tag</name>
        <full_name>render_meta_tag</full_name>
        <docblock line="183">
          <description>Render a single meta tag of the current set stored in $this-&gt;meta_tags</description>
          <long-description/>
          <tag line="183" name="param" description="the name of the meta" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$name</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="198" package="classes">
        <name>set_charset</name>
        <full_name>set_charset</full_name>
        <docblock line="194">
          <description>Set the charset for the page</description>
          <long-description/>
          <tag line="194" name="param" description="the charset" type="string" variable="$charset">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$charset</name>
          <default/>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/HtmlHelper.class.php" hash="7ad25974a8cbccc547e0dc528a565669" package="Default">
    <docblock line="2">
      <description>stores the HtmlHelper and HtmlBuilder class definition</description>
      <long-description></long-description>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\HtmlBuilder</extends>
      <name>HtmlHelper</name>
      <full_name>\HtmlHelper</full_name>
      <docblock line="6">
        <description>Helper class useful to generate some html tags</description>
        <long-description></long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="19" package="classes">
        <name>script</name>
        <full_name>script</full_name>
        <docblock line="14">
          <description>Retrieves a &lt;script&gt; tag</description>
          <long-description></long-description>
          <tag line="14" name="param" description="the inner script content" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
          <tag line="14" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$content</name>
          <default></default>
          <type/>
        </argument>
        <argument line="19">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="29" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="24">
          <description>Get the markup for a &lt;img&gt; tag</description>
          <long-description></long-description>
          <tag line="24" name="param" description="the image source" type="string" variable="$src">
            <type by_reference="false">string</type>
          </tag>
          <tag line="24" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$src</name>
          <default></default>
          <type/>
        </argument>
        <argument line="29">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="41" package="classes">
        <name>anchor</name>
        <full_name>anchor</full_name>
        <docblock line="34">
          <description>Get the markup for an &lt;a&gt; tag</description>
          <long-description></long-description>
          <tag line="34" name="return" description="markup for an html &lt;a&gt; tag" type="\the">
            <type by_reference="false">\the</type>
          </tag>
          <tag line="34" name="param" description="the url to be pointed" type="string" variable="$href">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="the text" type="string" variable="$label">
            <type by_reference="false">string</type>
          </tag>
          <tag line="34" name="param" description="some html attributes in key=&gt;value pairs or a plain string" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$href</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$label</name>
          <default></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="51" package="classes">
        <name>list_item</name>
        <full_name>list_item</full_name>
        <docblock line="46">
          <description>Retrieves a &lt;li&gt; tag</description>
          <long-description></long-description>
          <tag line="46" name="param" description="the inner html" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="param" description="the optional attributes for the &lt;li&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="global" line="62" package="classes">
        <name>list_inner_html</name>
        <full_name>list_inner_html</full_name>
        <docblock line="56">
          <description>Prepare the inner html for a list (ul\ol).</description>
          <long-description>&lt;p&gt;If it is a string it will be returnes as it is.
If it is an array every element will be wrapped in a &lt;li&gt; tag&lt;/p&gt;</long-description>
          <tag line="56" name="param" description="the inner html" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="80" package="classes">
        <name>unorderd_list</name>
        <full_name>unorderd_list</full_name>
        <docblock line="74">
          <description>Retrieves a &lt;ul&gt; tag</description>
          <long-description></long-description>
          <tag line="74" name="param" description="the inner html.&#10;If an array is passed, every element will be wrapped inside a &lt;li&gt; tag" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="74" name="param" description="the optional attributes for the &lt;ul&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="80">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="90" package="classes">
        <name>ordered_list</name>
        <full_name>ordered_list</full_name>
        <docblock line="84">
          <description>Retrieves a &lt;ol&gt; tag</description>
          <long-description></long-description>
          <tag line="84" name="param" description="the inner html.&#10;If is an array every element will be wrapped inside a &lt;li&gt; tag" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="param" description="the optional attributes for the &lt;ol&gt;" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="99" package="classes">
        <name>span</name>
        <full_name>span</full_name>
        <docblock line="94">
          <description>Get the markup for a &lt;span&gt; tag</description>
          <long-description></long-description>
          <tag line="94" name="param" description="the image source" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="additional parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="99">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
    </class>
    <class final="false" abstract="false" namespace="global" line="111" package="classes">
      <extends/>
      <name>HtmlBuilder</name>
      <full_name>\HtmlBuilder</full_name>
      <docblock line="105">
        <description>Inner class to build some very basic html nodes</description>
        <long-description></long-description>
        <tag line="105" name="author" description="etessore"/>
        <tag line="105" name="version" description="1.0.0"/>
        <tag line="105" name="package" description="classes"/>
      </docblock>
      <constant namespace="global" line="116" package="classes">
        <name>HTML_VERSION</name>
        <full_name>HTML_VERSION</full_name>
        <value>'html5'</value>
        <docblock line="112">
          <description></description>
          <long-description></long-description>
          <tag line="112" name="var" description="value of the version of the html/xhtml used useful to have different behavior if not using HTML 5" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="122" package="classes">
        <name>self_closing_tags</name>
        <full_name>self_closing_tags</full_name>
        <docblock line="118">
          <description>Retrieves the list of self-closing tags</description>
          <long-description></long-description>
          <tag line="118" name="return" description="a list of self-closing tags" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="132" package="classes">
        <name>open_tag</name>
        <full_name>open_tag</full_name>
        <docblock line="126">
          <description>Gets the opening html tag for the given one</description>
          <long-description></long-description>
          <tag line="126" name="return" description="the opening tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="the html tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="the additional parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$tag</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="132">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="142" package="classes">
        <name>close_tag</name>
        <full_name>close_tag</full_name>
        <docblock line="137">
          <description>Gets the closing html tag for the given one</description>
          <long-description></long-description>
          <tag line="137" name="return" description="the closing tag" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="param" description="the html tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$tag</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="152" package="classes">
        <name>params</name>
        <full_name>params</full_name>
        <docblock line="148">
          <description>Prepare the $parms to be printed as html attributes</description>
          <long-description></long-description>
          <tag line="148" name="param" description="list of html attributes" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="152">
          <name>$parms</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="165" package="classes">
        <name>array_to_html_attributes</name>
        <full_name>array_to_html_attributes</full_name>
        <docblock line="158">
          <description>Generates HTML Node Attribures</description>
          <long-description></long-description>
          <tag line="158" name="param" description="" type="string" variable="$glue">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="param" description="" type="array|string" variable="$pieces">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="author" description="http://blog.teknober.com/2011/04/13/php-array-to-html-attributes/"/>
        </docblock>
        <argument line="165">
          <name>$glue</name>
          <default></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$pieces</name>
          <default></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="global" line="187" package="classes">
        <name>get_html_attributes</name>
        <full_name>get_html_attributes</full_name>
        <docblock line="180">
          <description>Retrives the attributes list choosing between the given parameters</description>
          <long-description></long-description>
          <tag line="180" name="param" description="the inner html" type="string|array" variable="$inner_html">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="180" name="param" description="the parameters" type="array" variable="$params">
            <type by_reference="false">array</type>
          </tag>
          <tag line="180" name="return" description="the html tag attributes ready to be printed in the DOM" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$inner_html</name>
          <default></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$params</name>
          <default>array()</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="199" package="classes">
        <name>doctype</name>
        <full_name>doctype</full_name>
        <docblock line="196">
          <description>Retrieves the correct DOCTYPE</description>
          <long-description></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="221" package="classes">
        <name>open_html</name>
        <full_name>open_html</full_name>
        <docblock line="217">
          <description>Returns the &lt;html&gt; opening tag from html5 boilerplate</description>
          <long-description></long-description>
          <tag line="217" name="param" description="some additional classes" type="string|array" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="221">
          <name>$class</name>
          <default>''</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="253" package="classes">
        <name>standard_tag</name>
        <full_name>standard_tag</full_name>
        <docblock line="247">
          <description>Builds a default tag structure: &lt;tagname tagparameters&gt;inner_html&lt;/tagname&gt;</description>
          <long-description></long-description>
          <tag line="247" name="param" description="the tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="the inner html" type="string" variable="$inner_html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="247" name="param" description="the additional html tag parameters" type="array" variable="$parms">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$tag</name>
          <default></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$inner_html</name>
          <default>''</default>
          <type/>
        </argument>
        <argument line="253">
          <name>$parms</name>
          <default>array()</default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="classes/LoremIpsumDictionary.class.php" hash="b9d3be09f73e31c9ee764ea0a6fd8942" package="Default">
    <docblock line="2">
      <description>contains LoremIpsumDictionary class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="12" package="classes">
      <extends>\GeneratorDictionary</extends>
      <name>LoremIpsumDictionary</name>
      <full_name>\LoremIpsumDictionary</full_name>
      <docblock line="6">
        <description>Stores the dictionary for generating 'Lorem ipsum.</description>
        <long-description>&lt;p&gt;..' text&lt;/p&gt;</long-description>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="17" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="14">
          <description>Builds the dictionary</description>
          <long-description/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/ImageGenerator.class.php" hash="d1aeabff6e5483d329d3ae6a5e8ab302" package="Default">
    <docblock line="2">
      <description>stores the ImageGenerator class definition</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="18" package="classes">
      <extends/>
      <name>ImageGenerator</name>
      <full_name>\ImageGenerator</full_name>
      <docblock line="5">
        <description>Generates paceholder images</description>
        <long-description/>
        <tag line="5" name="author" description="etessore"/>
        <tag line="5" name="version" description="1.0.1"/>
        <tag line="5" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="22" namespace="global" package="Default">
        <name>$settings</name>
        <default/>
        <docblock line="19">
          <description/>
          <long-description/>
          <tag line="19" name="var" description="stores the settings for this generator" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="27" namespace="global" package="Default">
        <name>$image</name>
        <default/>
        <docblock line="24">
          <description/>
          <long-description/>
          <tag line="24" name="var" description="an image resource identifier" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="32" namespace="global" package="Default">
        <name>$cache</name>
        <default/>
        <docblock line="29">
          <description/>
          <long-description/>
          <tag line="29" name="var" description="some infos about the cache: url\path\filename..." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="37" namespace="global" package="Default">
        <name>$url</name>
        <default/>
        <docblock line="34">
          <description/>
          <long-description/>
          <tag line="34" name="var" description="url for the generated image" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="44" package="classes">
        <name>init</name>
        <full_name>init</full_name>
        <docblock line="40">
          <description>Initializes the object by checking
if the image exists or has to be generated</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="70" package="classes">
        <name>set</name>
        <full_name>set</full_name>
        <docblock line="64">
          <description>Sets a parameter for the current generator</description>
          <long-description/>
          <tag line="64" name="param" description="the name of the parameter" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="the value of the parameter" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$param</name>
          <default/>
          <type/>
        </argument>
        <argument line="70">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="79" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="75">
          <description>Retrieves the html markup for the current generated image</description>
          <long-description/>
          <tag line="75" name="return" description="html markup for the current generated image" type="\the">
            <type by_reference="false">\the</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="94" package="classes">
        <name>get_image_src</name>
        <full_name>get_image_src</full_name>
        <docblock line="91">
          <description>Retrieves the image src attribute</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="103" package="classes">
        <name>generate_image</name>
        <full_name>generate_image</full_name>
        <docblock line="99">
          <description>Generates an image</description>
          <long-description/>
          <tag line="99" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="171" package="classes">
        <name>get_image_width</name>
        <full_name>get_image_width</full_name>
        <docblock line="168">
          <description>Gets the image width</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="178" package="classes">
        <name>get_image_height</name>
        <full_name>get_image_height</full_name>
        <docblock line="175">
          <description>Get the image height</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="185" package="classes">
        <name>get_image_alt</name>
        <full_name>get_image_alt</full_name>
        <docblock line="182">
          <description>Generates an alternative text for this image</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="global" line="193" package="classes">
        <name>save_image</name>
        <full_name>save_image</full_name>
        <docblock line="189">
          <description>Saves the image into the upload directory</description>
          <long-description/>
          <tag line="189" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="205" package="classes">
        <name>flush</name>
        <full_name>flush</full_name>
        <docblock line="199">
          <description>Flush the cache file and regenerate it</description>
          <long-description/>
          <tag line="199" name="param" description="false only if you don't want to delete the cache file.&#10;Useful to pass isset($_REQUEST['refresh']) in the ajax implementation" type="bool" variable="$check">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="199" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$check</name>
          <default>true</default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="217" package="classes">
        <name>hook</name>
        <full_name>hook</full_name>
        <docblock line="214">
          <description>Hooks into WordPress to serve a generated image when no one is available</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="234" package="classes">
        <name>get_post_metadata_callback</name>
        <full_name>get_post_metadata_callback</full_name>
        <docblock line="223">
          <description>Callback for 'get_post_metadata' hook.</description>
          <long-description>&lt;p&gt;Returns -1 if post image is not set, else the id of the image&lt;/p&gt;</long-description>
          <tag line="223" name="param" description="the ID of the post thumbnail" type="int" variable="$value">
            <type by_reference="false">int</type>
          </tag>
          <tag line="223" name="param" description="ID of the object metadata is for" type="int" variable="$object_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="223" name="param" description="Optional.  Metadata key.&#10;&#9;&#9;If not specified, retrieve all metadata for the specified object." type="string" variable="$meta_key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="223" name="param" description="Optional, default is false.&#10;&#9;&#9;If true, return only the first value of the specified meta_key.&#10;&#9;&#9;This parameter has no effect if meta_key is not specified." type="bool" variable="$single">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="234">
          <name>$value</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$object_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$meta_key</name>
          <default/>
          <type/>
        </argument>
        <argument line="234">
          <name>$single</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="251" package="classes">
        <name>post_thumbnail_html_callback</name>
        <full_name>post_thumbnail_html_callback</full_name>
        <docblock line="242">
          <description>Callback for 'post_thumbnail_html' hook.</description>
          <long-description>&lt;p&gt;Changes the html markup if the post thumbnail is not set&lt;/p&gt;</long-description>
          <tag line="242" name="param" description="" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$post_id">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$post_thumbnail_id">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$size">
            <type by_reference="false">\unknown_type</type>
          </tag>
          <tag line="242" name="param" description="" type="\unknown_type" variable="$attr">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$html</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$post_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$post_thumbnail_id</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$size</name>
          <default/>
          <type/>
        </argument>
        <argument line="251">
          <name>$attr</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="279" package="classes">
        <name>get_dimensions</name>
        <full_name>get_dimensions</full_name>
        <docblock line="274">
          <description>Finds width and height of a media size</description>
          <long-description/>
          <tag line="274" name="param" description="the media size" type="string" variable="$media_dimensions">
            <type by_reference="false">string</type>
          </tag>
          <tag line="274" name="return" description="array('width'=&gt;'','height'=&gt;'','crop'=&gt;'')" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$media_dimensions</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="291" package="classes">
        <name>image</name>
        <full_name>image</full_name>
        <docblock line="287">
          <description>outputs the raw image with appropriate header.</description>
          <long-description/>
          <tag line="287" name="return" description="$this for chainability" type="\ImageGenerator">
            <type by_reference="false">\ImageGenerator</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="307" package="classes">
        <name>get_rgb</name>
        <full_name>get_rgb</full_name>
        <docblock line="302">
          <description>Retrieves the rgb value from the given hexadecimal</description>
          <long-description/>
          <tag line="302" name="param" description="the hex representation of the color" type="string" variable="$hex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="302" name="return" description="red green and blue values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$hex</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="global" line="324" package="classes">
        <name>get_all_image_sizes</name>
        <full_name>get_all_image_sizes</full_name>
        <docblock line="315">
          <description>Retrieves all the image sizes registered in WordPress</description>
          <long-description/>
          <tag line="315" name="return" description="of all image sizes registered in WP&#10;&lt;code&gt;'size_name' =&gt; array(&#10;&#9;'width'&#9;&#9;=&gt;&#9;200,&#10;&#9;'height'&#9;=&gt;&#9;80,&#10;&#9;'crop'&#9;&#9;=&gt;&#9;true&#10;)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="classes/PhotogalleryThumbWithFancybox.class.php" hash="acdc068bf8c323a46150b919cf77c695" package="Default">
    <docblock line="2">
      <description>stores the PhotogalleryThumbWithFancybox class</description>
      <long-description/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="13" package="classes">
      <extends>\GalleryHelper</extends>
      <name>PhotogalleryThumbWithFancybox</name>
      <full_name>\PhotogalleryThumbWithFancybox</full_name>
      <docblock line="6">
        <description>Manages images and markup for a photogallery where
clicking on a little thumb opens the big image in fancybox</description>
        <long-description/>
        <tag line="6" name="author" description="etessore"/>
        <tag line="6" name="version" description="1.0.0"/>
        <tag line="6" name="package" description="classes"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="18" namespace="global" package="Default">
        <name>$sizes</name>
        <default/>
        <docblock line="15">
          <description/>
          <long-description/>
          <tag line="15" name="var" description="stores the sizes of the images" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="23" package="classes">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="20">
          <description>Initializes the photogallery</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="41" package="classes">
        <name>set_sizes</name>
        <full_name>set_sizes</full_name>
        <docblock line="37">
          <description>Sets the images sizes: array('w'=&gt;xxx, 'h'=&gt;yyy)</description>
          <long-description/>
          <tag line="37" name="param" description="" type="array" variable="$sizes">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$sizes</name>
          <default/>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="50" package="classes">
        <name>load_assets</name>
        <full_name>load_assets</full_name>
        <docblock line="46">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="46" name="see" description="\FeatureWithAssets::load_assets()" refers="\FeatureWithAssets::load_assets()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="59" package="classes">
        <name>get_markup</name>
        <full_name>get_markup</full_name>
        <docblock line="55">
          <description>(non-PHPdoc)</description>
          <long-description/>
          <tag line="55" name="see" description="\GalleryHelper::get_markup()" refers="\GalleryHelper::get_markup()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="partials/header.php" hash="bf9d46fba7c97c32108fb3f5e3ee470b" package="templates\parts">
    <docblock line="2">
      <description>The Header for our theme.</description>
      <long-description>&lt;p&gt;Displays all of the &lt;head&gt; section and everything up till 'main container' div&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/footer.php" hash="9c4747475503df2c55d8c53e244eafa0" package="templates\parts">
    <docblock line="2">
      <description>The template for displaying the footer.</description>
      <long-description>&lt;p&gt;Contains the closing of the body and html tags&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/content.php" hash="56814a16ad17817af6344616e8617865" package="templates\parts">
    <docblock line="2">
      <description>The template part for showing a single article (post\page)</description>
      <long-description>&lt;p&gt;This is the default version showing title and full content&lt;/p&gt;</long-description>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-children.php" hash="420cfec6f8cc59ddd743ad8fa1a6add3" package="templates\parts">
    <docblock line="2">
      <description>Template part for listing child pages</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-brothers.php" hash="ad6837173d5b80e4d7f992bbe3a6a40b" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying the list of child pages</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-secondary.php" hash="c35929b31ca9f387e737f745d9b20745" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying the footer menu</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/content-expandable.php" hash="98b89689206cd233256b1f50ec4b8f9e" package="templates\parts">
    <docblock line="2">
      <description>Template part for a single article (post\page)
Version with title and brief content button to expand it</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/browsehappy.php" hash="124d8091e92009439104c3757430ccd4" package="templates\parts">
    <docblock line="2">
      <description>The Template part for displaying a &lt;p&gt; with links to how to update your browser without panic</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="partials/menu-preview.php" hash="c13f010639e95880d4f1be39a7a34dc9" package="templates\parts">
    <docblock line="2">
      <description>Template part to print a title and an excerpt of every menu entry.</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="version" description="1.0.0"/>
    </docblock>
  </file>
  <file path="partials/slideshow.php" hash="2e60affff6cc43ef5b0756af9d70ec62" package="templates\parts">
    <docblock line="2">
      <description>The template part for displaying the slideshow</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
    <class final="false" abstract="false" namespace="global" line="20" package="templates\parts">
      <extends>\ImagePreload</extends>
      <name>Slideshow</name>
      <full_name>\Slideshow</full_name>
      <docblock line="13">
        <description>Manages the slideshow</description>
        <long-description/>
        <tag line="13" name="author" description="etessore"/>
        <tag line="13" name="version" description="1.0.1"/>
        <tag line="13" name="package" description="templates"/>
        <tag line="13" name="subpackage" description="parts"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="24" namespace="global" package="Default">
        <name>$post_id</name>
        <default/>
        <docblock line="21">
          <description/>
          <long-description/>
          <tag line="21" name="var" description="the id of the post" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="29" namespace="global" package="Default">
        <name>$images</name>
        <default/>
        <docblock line="26">
          <description/>
          <long-description/>
          <tag line="26" name="var" description="the list of imagese to be slided" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="34" package="templates\parts">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="31">
          <description>Initializes the parent object to the default values</description>
          <long-description/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="global" line="46" package="templates\parts">
        <name>get_the_images</name>
        <full_name>get_the_images</full_name>
        <docblock line="41">
          <description>Retrives the images for the slideshow</description>
          <long-description/>
          <tag line="41" name="param" description="the post id to dig in" type="int" variable="$post_id">
            <type by_reference="false">int</type>
          </tag>
          <tag line="41" name="return" description="$this for chainability" type="\Slideshow">
            <type by_reference="false">\Slideshow</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$post_id</name>
          <default>null</default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="partials/menu.php" hash="9c0ffe99ec6d3150fc7dbcec9bfe8f14" package="templates\parts">
    <docblock line="2">
      <description>The Template for displaying the navigation bar</description>
      <long-description/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="subpackage" description="parts"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <file path="front-page.php" hash="b3cb36e658734fbbe712f86354d34449" package="templates">
    <docblock line="2">
      <description>The Template for displaying the home page</description>
      <long-description/>
      <tag line="2" name="version" description="1.0.0"/>
      <tag line="2" name="package" description="templates"/>
      <tag line="2" name="since" description="0.1"/>
    </docblock>
  </file>
  <package name="Default" full_name="Default"/>
  <package name="classes" full_name="classes"/>
  <package name="core" full_name="core"/>
  <package name="debug" full_name="debug"/>
  <package name="templates" full_name="templates">
    <package name="parts" full_name="templates\parts"/>
  </package>
  <namespace name="global" full_name="global"/>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="1"/>
</project>
